-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A binding to the X11 graphics library
--   
--   A Haskell binding to the X11 graphics library. The binding is a direct
--   translation of the C binding; for documentation of these calls, refer
--   to "The Xlib Programming Manual", available online at
--   <a>http://tronche.com/gui/x/xlib/</a>.
@package X11
@version 1.10.3.9


-- | A collection of type declarations for interfacing with X11.
module Graphics.X11.Types
type XID = Word64
type Mask = Word64
type Atom = Word64
type VisualID = Word64
type Time = Word64
type Window = XID
type Drawable = XID
type Font = XID
type Pixmap = XID
type Cursor = XID
type Colormap = XID
type GContext = XID
type KeyCode = Word8
type SizeID = Word16
type SubpixelOrder = Word16
type Connection = Word16
type RROutput = Word64
type RRCrtc = Word64
type RRMode = Word64
type XRRModeFlags = Word64
type KeySym = XID
xK_VoidSymbol :: KeySym
xK_BackSpace :: KeySym
xK_Tab :: KeySym
xK_Linefeed :: KeySym
xK_Clear :: KeySym
xK_Return :: KeySym
xK_Pause :: KeySym
xK_Scroll_Lock :: KeySym
xK_Sys_Req :: KeySym
xK_Escape :: KeySym
xK_Delete :: KeySym
xK_Multi_key :: KeySym
xK_Codeinput :: KeySym
xK_SingleCandidate :: KeySym
xK_MultipleCandidate :: KeySym
xK_PreviousCandidate :: KeySym
xK_Home :: KeySym
xK_Left :: KeySym
xK_Up :: KeySym
xK_Right :: KeySym
xK_Down :: KeySym
xK_Prior :: KeySym
xK_Page_Up :: KeySym
xK_Next :: KeySym
xK_Page_Down :: KeySym
xK_End :: KeySym
xK_Begin :: KeySym
xK_Select :: KeySym
xK_Print :: KeySym
xK_Execute :: KeySym
xK_Insert :: KeySym
xK_Undo :: KeySym
xK_Redo :: KeySym
xK_Menu :: KeySym
xK_Find :: KeySym
xK_Cancel :: KeySym
xK_Help :: KeySym
xK_Break :: KeySym
xK_Mode_switch :: KeySym
xK_script_switch :: KeySym
xK_Num_Lock :: KeySym
xK_KP_Space :: KeySym
xK_KP_Tab :: KeySym
xK_KP_Enter :: KeySym
xK_KP_F1 :: KeySym
xK_KP_F2 :: KeySym
xK_KP_F3 :: KeySym
xK_KP_F4 :: KeySym
xK_KP_Home :: KeySym
xK_KP_Left :: KeySym
xK_KP_Up :: KeySym
xK_KP_Right :: KeySym
xK_KP_Down :: KeySym
xK_KP_Prior :: KeySym
xK_KP_Page_Up :: KeySym
xK_KP_Next :: KeySym
xK_KP_Page_Down :: KeySym
xK_KP_End :: KeySym
xK_KP_Begin :: KeySym
xK_KP_Insert :: KeySym
xK_KP_Delete :: KeySym
xK_KP_Equal :: KeySym
xK_KP_Multiply :: KeySym
xK_KP_Add :: KeySym
xK_KP_Separator :: KeySym
xK_KP_Subtract :: KeySym
xK_KP_Decimal :: KeySym
xK_KP_Divide :: KeySym
xK_KP_0 :: KeySym
xK_KP_1 :: KeySym
xK_KP_2 :: KeySym
xK_KP_3 :: KeySym
xK_KP_4 :: KeySym
xK_KP_5 :: KeySym
xK_KP_6 :: KeySym
xK_KP_7 :: KeySym
xK_KP_8 :: KeySym
xK_KP_9 :: KeySym
xK_F1 :: KeySym
xK_F2 :: KeySym
xK_F3 :: KeySym
xK_F4 :: KeySym
xK_F5 :: KeySym
xK_F6 :: KeySym
xK_F7 :: KeySym
xK_F8 :: KeySym
xK_F9 :: KeySym
xK_F10 :: KeySym
xK_F11 :: KeySym
xK_L1 :: KeySym
xK_F12 :: KeySym
xK_L2 :: KeySym
xK_F13 :: KeySym
xK_L3 :: KeySym
xK_F14 :: KeySym
xK_L4 :: KeySym
xK_F15 :: KeySym
xK_L5 :: KeySym
xK_F16 :: KeySym
xK_L6 :: KeySym
xK_F17 :: KeySym
xK_L7 :: KeySym
xK_F18 :: KeySym
xK_L8 :: KeySym
xK_F19 :: KeySym
xK_L9 :: KeySym
xK_F20 :: KeySym
xK_L10 :: KeySym
xK_F21 :: KeySym
xK_R1 :: KeySym
xK_F22 :: KeySym
xK_R2 :: KeySym
xK_F23 :: KeySym
xK_R3 :: KeySym
xK_F24 :: KeySym
xK_R4 :: KeySym
xK_F25 :: KeySym
xK_R5 :: KeySym
xK_F26 :: KeySym
xK_R6 :: KeySym
xK_F27 :: KeySym
xK_R7 :: KeySym
xK_F28 :: KeySym
xK_R8 :: KeySym
xK_F29 :: KeySym
xK_R9 :: KeySym
xK_F30 :: KeySym
xK_R10 :: KeySym
xK_F31 :: KeySym
xK_R11 :: KeySym
xK_F32 :: KeySym
xK_R12 :: KeySym
xK_F33 :: KeySym
xK_R13 :: KeySym
xK_F34 :: KeySym
xK_R14 :: KeySym
xK_F35 :: KeySym
xK_R15 :: KeySym
xK_Shift_L :: KeySym
xK_Shift_R :: KeySym
xK_Control_L :: KeySym
xK_Control_R :: KeySym
xK_Caps_Lock :: KeySym
xK_Shift_Lock :: KeySym
xK_Meta_L :: KeySym
xK_Meta_R :: KeySym
xK_Alt_L :: KeySym
xK_Alt_R :: KeySym
xK_Super_L :: KeySym
xK_Super_R :: KeySym
xK_Hyper_L :: KeySym
xK_Hyper_R :: KeySym
xK_space :: KeySym
xK_exclam :: KeySym
xK_quotedbl :: KeySym
xK_numbersign :: KeySym
xK_dollar :: KeySym
xK_percent :: KeySym
xK_ampersand :: KeySym
xK_apostrophe :: KeySym
xK_quoteright :: KeySym
xK_parenleft :: KeySym
xK_parenright :: KeySym
xK_asterisk :: KeySym
xK_plus :: KeySym
xK_comma :: KeySym
xK_minus :: KeySym
xK_period :: KeySym
xK_slash :: KeySym
xK_0 :: KeySym
xK_1 :: KeySym
xK_2 :: KeySym
xK_3 :: KeySym
xK_4 :: KeySym
xK_5 :: KeySym
xK_6 :: KeySym
xK_7 :: KeySym
xK_8 :: KeySym
xK_9 :: KeySym
xK_colon :: KeySym
xK_semicolon :: KeySym
xK_less :: KeySym
xK_equal :: KeySym
xK_greater :: KeySym
xK_question :: KeySym
xK_at :: KeySym
xK_A :: KeySym
xK_B :: KeySym
xK_C :: KeySym
xK_D :: KeySym
xK_E :: KeySym
xK_F :: KeySym
xK_G :: KeySym
xK_H :: KeySym
xK_I :: KeySym
xK_J :: KeySym
xK_K :: KeySym
xK_L :: KeySym
xK_M :: KeySym
xK_N :: KeySym
xK_O :: KeySym
xK_P :: KeySym
xK_Q :: KeySym
xK_R :: KeySym
xK_S :: KeySym
xK_T :: KeySym
xK_U :: KeySym
xK_V :: KeySym
xK_W :: KeySym
xK_X :: KeySym
xK_Y :: KeySym
xK_Z :: KeySym
xK_bracketleft :: KeySym
xK_backslash :: KeySym
xK_bracketright :: KeySym
xK_asciicircum :: KeySym
xK_underscore :: KeySym
xK_grave :: KeySym
xK_quoteleft :: KeySym
xK_a :: KeySym
xK_b :: KeySym
xK_c :: KeySym
xK_d :: KeySym
xK_e :: KeySym
xK_f :: KeySym
xK_g :: KeySym
xK_h :: KeySym
xK_i :: KeySym
xK_j :: KeySym
xK_k :: KeySym
xK_l :: KeySym
xK_m :: KeySym
xK_n :: KeySym
xK_o :: KeySym
xK_p :: KeySym
xK_q :: KeySym
xK_r :: KeySym
xK_s :: KeySym
xK_t :: KeySym
xK_u :: KeySym
xK_v :: KeySym
xK_w :: KeySym
xK_x :: KeySym
xK_y :: KeySym
xK_z :: KeySym
xK_braceleft :: KeySym
xK_bar :: KeySym
xK_braceright :: KeySym
xK_asciitilde :: KeySym
xK_nobreakspace :: KeySym
xK_exclamdown :: KeySym
xK_cent :: KeySym
xK_sterling :: KeySym
xK_currency :: KeySym
xK_yen :: KeySym
xK_brokenbar :: KeySym
xK_section :: KeySym
xK_diaeresis :: KeySym
xK_copyright :: KeySym
xK_ordfeminine :: KeySym
xK_guillemotleft :: KeySym
xK_notsign :: KeySym
xK_hyphen :: KeySym
xK_registered :: KeySym
xK_macron :: KeySym
xK_degree :: KeySym
xK_plusminus :: KeySym
xK_twosuperior :: KeySym
xK_threesuperior :: KeySym
xK_acute :: KeySym
xK_mu :: KeySym
xK_paragraph :: KeySym
xK_periodcentered :: KeySym
xK_cedilla :: KeySym
xK_onesuperior :: KeySym
xK_masculine :: KeySym
xK_guillemotright :: KeySym
xK_onequarter :: KeySym
xK_onehalf :: KeySym
xK_threequarters :: KeySym
xK_questiondown :: KeySym
xK_Agrave :: KeySym
xK_Aacute :: KeySym
xK_Acircumflex :: KeySym
xK_Atilde :: KeySym
xK_Adiaeresis :: KeySym
xK_Aring :: KeySym
xK_AE :: KeySym
xK_Ccedilla :: KeySym
xK_Egrave :: KeySym
xK_Eacute :: KeySym
xK_Ecircumflex :: KeySym
xK_Ediaeresis :: KeySym
xK_Igrave :: KeySym
xK_Iacute :: KeySym
xK_Icircumflex :: KeySym
xK_Idiaeresis :: KeySym
xK_ETH :: KeySym
xK_Eth :: KeySym
xK_Ntilde :: KeySym
xK_Ograve :: KeySym
xK_Oacute :: KeySym
xK_Ocircumflex :: KeySym
xK_Otilde :: KeySym
xK_Odiaeresis :: KeySym
xK_multiply :: KeySym
xK_Ooblique :: KeySym
xK_Ugrave :: KeySym
xK_Uacute :: KeySym
xK_Ucircumflex :: KeySym
xK_Udiaeresis :: KeySym
xK_Yacute :: KeySym
xK_THORN :: KeySym
xK_Thorn :: KeySym
xK_ssharp :: KeySym
xK_agrave :: KeySym
xK_aacute :: KeySym
xK_acircumflex :: KeySym
xK_atilde :: KeySym
xK_adiaeresis :: KeySym
xK_aring :: KeySym
xK_ae :: KeySym
xK_ccedilla :: KeySym
xK_egrave :: KeySym
xK_eacute :: KeySym
xK_ecircumflex :: KeySym
xK_ediaeresis :: KeySym
xK_igrave :: KeySym
xK_iacute :: KeySym
xK_icircumflex :: KeySym
xK_idiaeresis :: KeySym
xK_eth :: KeySym
xK_ntilde :: KeySym
xK_ograve :: KeySym
xK_oacute :: KeySym
xK_ocircumflex :: KeySym
xK_otilde :: KeySym
xK_odiaeresis :: KeySym
xK_division :: KeySym
xK_oslash :: KeySym
xK_ugrave :: KeySym
xK_uacute :: KeySym
xK_ucircumflex :: KeySym
xK_udiaeresis :: KeySym
xK_yacute :: KeySym
xK_thorn :: KeySym
xK_ydiaeresis :: KeySym
type EventMask = Mask
noEventMask :: EventMask
keyPressMask :: EventMask
keyReleaseMask :: EventMask
buttonPressMask :: EventMask
buttonReleaseMask :: EventMask
enterWindowMask :: EventMask
leaveWindowMask :: EventMask
pointerMotionMask :: EventMask
pointerMotionHintMask :: EventMask
button1MotionMask :: EventMask
button2MotionMask :: EventMask
button3MotionMask :: EventMask
button4MotionMask :: EventMask
button5MotionMask :: EventMask
buttonMotionMask :: EventMask
keymapStateMask :: EventMask
exposureMask :: EventMask
visibilityChangeMask :: EventMask
structureNotifyMask :: EventMask
resizeRedirectMask :: EventMask
substructureNotifyMask :: EventMask
substructureRedirectMask :: EventMask
focusChangeMask :: EventMask
propertyChangeMask :: EventMask
colormapChangeMask :: EventMask
ownerGrabButtonMask :: EventMask
rrScreenChangeNotifyMask :: EventMask
rrCrtcChangeNotifyMask :: EventMask
rrOutputChangeNotifyMask :: EventMask
rrOutputPropertyNotifyMask :: EventMask
screenSaverCycleMask :: EventMask
screenSaverNotifyMask :: EventMask
type EventType = Word32
keyPress :: EventType
keyRelease :: EventType
buttonPress :: EventType
buttonRelease :: EventType
motionNotify :: EventType
enterNotify :: EventType
leaveNotify :: EventType
focusIn :: EventType
focusOut :: EventType
keymapNotify :: EventType
expose :: EventType
graphicsExpose :: EventType
noExpose :: EventType
visibilityNotify :: EventType
createNotify :: EventType
destroyNotify :: EventType
unmapNotify :: EventType
mapNotify :: EventType
mapRequest :: EventType
reparentNotify :: EventType
configureNotify :: EventType
configureRequest :: EventType
gravityNotify :: EventType
resizeRequest :: EventType
circulateNotify :: EventType
circulateRequest :: EventType
propertyNotify :: EventType
selectionClear :: EventType
selectionRequest :: EventType
selectionNotify :: EventType
colormapNotify :: EventType
clientMessage :: EventType
mappingNotify :: EventType
rrScreenChangeNotify :: EventType
rrNotify :: EventType
rrNotifyCrtcChange :: EventType
rrNotifyOutputChange :: EventType
rrNotifyOutputProperty :: EventType
lASTEvent :: EventType
screenSaverNotify :: EventType
type Modifier = CUInt
shiftMapIndex :: Modifier
lockMapIndex :: Modifier
controlMapIndex :: Modifier
mod1MapIndex :: Modifier
mod2MapIndex :: Modifier
mod3MapIndex :: Modifier
mod4MapIndex :: Modifier
mod5MapIndex :: Modifier
anyModifier :: Modifier
type KeyMask = Modifier
noModMask :: KeyMask
shiftMask :: KeyMask
lockMask :: KeyMask
controlMask :: KeyMask
mod1Mask :: KeyMask
mod2Mask :: KeyMask
mod3Mask :: KeyMask
mod4Mask :: KeyMask
mod5Mask :: KeyMask
type ButtonMask = Modifier
button1Mask :: ButtonMask
button2Mask :: ButtonMask
button3Mask :: ButtonMask
button4Mask :: ButtonMask
button5Mask :: ButtonMask
type Button = Word32
button1 :: Button
button2 :: Button
button3 :: Button
button4 :: Button
button5 :: Button
type NotifyMode = CInt
notifyNormal :: NotifyMode
notifyGrab :: NotifyMode
notifyUngrab :: NotifyMode
notifyWhileGrabbed :: NotifyMode
notifyHint :: NotifyMode
type NotifyDetail = CInt
notifyAncestor :: NotifyDetail
notifyVirtual :: NotifyDetail
notifyInferior :: NotifyDetail
notifyNonlinear :: NotifyDetail
notifyNonlinearVirtual :: NotifyDetail
notifyPointer :: NotifyDetail
notifyPointerRoot :: NotifyDetail
notifyDetailNone :: NotifyDetail
type Visibility = CInt
visibilityUnobscured :: Visibility
visibilityPartiallyObscured :: Visibility
visibilityFullyObscured :: Visibility

-- | Place of window relative to siblings (used in Circulation requests or
--   events)
type Place = CInt
placeOnTop :: Place
placeOnBottom :: Place
type Protocol = CInt
familyInternet :: Protocol
familyDECnet :: Protocol
familyChaos :: Protocol
type PropertyNotification = CInt
propertyNewValue :: PropertyNotification
propertyDelete :: PropertyNotification
type ColormapNotification = CInt
colormapUninstalled :: ColormapNotification
colormapInstalled :: ColormapNotification
type GrabMode = CInt
grabModeSync :: GrabMode
grabModeAsync :: GrabMode
type GrabStatus = CInt
grabSuccess :: GrabStatus
alreadyGrabbed :: GrabStatus
grabInvalidTime :: GrabStatus
grabNotViewable :: GrabStatus
grabFrozen :: GrabStatus
type AllowEvents = CInt
asyncPointer :: AllowEvents
syncPointer :: AllowEvents
replayPointer :: AllowEvents
asyncKeyboard :: AllowEvents
syncKeyboard :: AllowEvents
replayKeyboard :: AllowEvents
asyncBoth :: AllowEvents
syncBoth :: AllowEvents
type FocusMode = CInt
revertToNone :: FocusMode
revertToPointerRoot :: FocusMode
revertToParent :: FocusMode
type ErrorCode = CInt
success :: ErrorCode
badRequest :: ErrorCode
badValue :: ErrorCode
badWindow :: ErrorCode
badPixmap :: ErrorCode
badAtom :: ErrorCode
badCursor :: ErrorCode
badFont :: ErrorCode
badMatch :: ErrorCode
badDrawable :: ErrorCode
badAccess :: ErrorCode
badAlloc :: ErrorCode
badColor :: ErrorCode

-- | Xlib functions with return values of type <tt>Status</tt> return zero
--   on failure and nonzero on success.
badGC :: ErrorCode
badIDChoice :: ErrorCode
badName :: ErrorCode
badLength :: ErrorCode
badImplementation :: ErrorCode
firstExtensionError :: ErrorCode
lastExtensionError :: ErrorCode
type Status = CInt
throwIfZero :: String -> IO Status -> IO ()
type WindowClass = CInt
copyFromParent :: WindowClass
inputOutput :: WindowClass
inputOnly :: WindowClass
type AttributeMask = Mask
cWBackPixmap :: AttributeMask
cWBackPixel :: AttributeMask
cWBorderPixmap :: AttributeMask
cWBorderPixel :: AttributeMask
cWBitGravity :: AttributeMask
cWWinGravity :: AttributeMask
cWBackingStore :: AttributeMask
cWBackingPlanes :: AttributeMask
cWBackingPixel :: AttributeMask
cWOverrideRedirect :: AttributeMask
cWSaveUnder :: AttributeMask
cWEventMask :: AttributeMask
cWDontPropagate :: AttributeMask
cWColormap :: AttributeMask
cWCursor :: AttributeMask
cWX :: AttributeMask
cWY :: AttributeMask
cWWidth :: AttributeMask
cWHeight :: AttributeMask
type CloseDownMode = CInt
destroyAll :: CloseDownMode
retainPermanent :: CloseDownMode
retainTemporary :: CloseDownMode
type QueryBestSizeClass = CInt
cursorShape :: QueryBestSizeClass
tileShape :: QueryBestSizeClass
stippleShape :: QueryBestSizeClass
type GXFunction = CInt
gXclear :: GXFunction
gXand :: GXFunction
gXandReverse :: GXFunction
gXcopy :: GXFunction
gXandInverted :: GXFunction
gXnoop :: GXFunction
gXxor :: GXFunction
gXor :: GXFunction
gXnor :: GXFunction
gXequiv :: GXFunction
gXinvert :: GXFunction
gXorReverse :: GXFunction
gXcopyInverted :: GXFunction
gXorInverted :: GXFunction
gXnand :: GXFunction
gXset :: GXFunction
type LineStyle = CInt
lineSolid :: LineStyle
lineOnOffDash :: LineStyle
lineDoubleDash :: LineStyle
type CapStyle = CInt
capNotLast :: CapStyle
capButt :: CapStyle
capRound :: CapStyle
capProjecting :: CapStyle
type JoinStyle = CInt
joinMiter :: JoinStyle
joinRound :: JoinStyle
joinBevel :: JoinStyle
type FillStyle = CInt
fillSolid :: FillStyle
fillTiled :: FillStyle
fillStippled :: FillStyle
fillOpaqueStippled :: FillStyle
type FillRule = CInt
evenOddRule :: FillRule
windingRule :: FillRule
type SubWindowMode = CInt
clipByChildren :: SubWindowMode
includeInferiors :: SubWindowMode
type CoordinateMode = CInt
coordModeOrigin :: CoordinateMode
coordModePrevious :: CoordinateMode
type PolygonShape = CInt
complex :: PolygonShape
nonconvex :: PolygonShape
convex :: PolygonShape
type ArcMode = CInt
arcChord :: ArcMode
arcPieSlice :: ArcMode
type GCMask = CInt
gCFunction :: GCMask
gCPlaneMask :: GCMask
gCForeground :: GCMask
gCBackground :: GCMask
gCLineWidth :: GCMask
gCLineStyle :: GCMask
gCCapStyle :: GCMask
gCJoinStyle :: GCMask
gCFillStyle :: GCMask
gCFillRule :: GCMask
gCTile :: GCMask
gCStipple :: GCMask
gCTileStipXOrigin :: GCMask
gCTileStipYOrigin :: GCMask
gCFont :: GCMask
gCSubwindowMode :: GCMask
gCGraphicsExposures :: GCMask
gCClipXOrigin :: GCMask
gCClipYOrigin :: GCMask
gCClipMask :: GCMask
gCDashOffset :: GCMask
gCDashList :: GCMask
gCArcMode :: GCMask
gCLastBit :: GCMask
type CirculationDirection = CInt
raiseLowest :: CirculationDirection
lowerHighest :: CirculationDirection
type ByteOrder = CInt
lSBFirst :: ByteOrder
mSBFirst :: ByteOrder
type ColormapAlloc = CInt
allocNone :: ColormapAlloc
allocAll :: ColormapAlloc
type MappingRequest = CInt
mappingModifier :: MappingRequest
mappingKeyboard :: MappingRequest
mappingPointer :: MappingRequest
type ChangeSaveSetMode = CInt
setModeInsert :: ChangeSaveSetMode
setModeDelete :: ChangeSaveSetMode
type BitGravity = CInt
forgetGravity :: BitGravity
northWestGravity :: BitGravity
northGravity :: BitGravity
northEastGravity :: BitGravity
westGravity :: BitGravity
centerGravity :: BitGravity
eastGravity :: BitGravity
southWestGravity :: BitGravity
southGravity :: BitGravity
southEastGravity :: BitGravity
staticGravity :: BitGravity
type WindowGravity = CInt
unmapGravity :: WindowGravity
type BackingStore = CInt
notUseful :: BackingStore
whenMapped :: BackingStore
always :: BackingStore
doRed :: Word8
doGreen :: Word8
doBlue :: Word8
type FontDirection = CInt
fontLeftToRight :: FontDirection
fontRightToLeft :: FontDirection
type ImageFormat = CInt
xyBitmap :: ImageFormat
xyPixmap :: ImageFormat
zPixmap :: ImageFormat
type Rotation = Word16
type Reflection = Word16
xRR_Rotate_0 :: Rotation
xRR_Rotate_90 :: Rotation
xRR_Rotate_180 :: Rotation
xRR_Rotate_270 :: Rotation
xRR_Reflect_X :: Reflection
xRR_Reflect_Y :: Reflection
xRR_Connected :: Connection
xRR_Disconnected :: Connection
xRR_UnknownConnection :: Connection


-- | This file is generated based on X.org includes. It contains the
--   keysyms for XorgDefault. Because there are so many entries and each
--   one is checked for #ifdef twice, the C preprocessor part takes a long
--   time.
module Graphics.X11.ExtraTypes.XorgDefault
xK_ISO_Lock :: KeySym
xK_ISO_Level2_Latch :: KeySym
xK_ISO_Level3_Shift :: KeySym
xK_ISO_Level3_Latch :: KeySym
xK_ISO_Level3_Lock :: KeySym
xK_ISO_Level5_Shift :: KeySym
xK_ISO_Level5_Latch :: KeySym
xK_ISO_Level5_Lock :: KeySym
xK_ISO_Group_Shift :: KeySym
xK_ISO_Group_Latch :: KeySym
xK_ISO_Group_Lock :: KeySym
xK_ISO_Next_Group :: KeySym
xK_ISO_Next_Group_Lock :: KeySym
xK_ISO_Prev_Group :: KeySym
xK_ISO_Prev_Group_Lock :: KeySym
xK_ISO_First_Group :: KeySym
xK_ISO_First_Group_Lock :: KeySym
xK_ISO_Last_Group :: KeySym
xK_ISO_Last_Group_Lock :: KeySym
xK_ISO_Left_Tab :: KeySym
xK_ISO_Move_Line_Up :: KeySym
xK_ISO_Move_Line_Down :: KeySym
xK_ISO_Partial_Line_Up :: KeySym
xK_ISO_Partial_Line_Down :: KeySym
xK_ISO_Partial_Space_Left :: KeySym
xK_ISO_Partial_Space_Right :: KeySym
xK_ISO_Set_Margin_Left :: KeySym
xK_ISO_Set_Margin_Right :: KeySym
xK_ISO_Release_Margin_Left :: KeySym
xK_ISO_Release_Margin_Right :: KeySym
xK_ISO_Release_Both_Margins :: KeySym
xK_ISO_Fast_Cursor_Left :: KeySym
xK_ISO_Fast_Cursor_Right :: KeySym
xK_ISO_Fast_Cursor_Up :: KeySym
xK_ISO_Fast_Cursor_Down :: KeySym
xK_ISO_Continuous_Underline :: KeySym
xK_ISO_Discontinuous_Underline :: KeySym
xK_ISO_Emphasize :: KeySym
xK_ISO_Center_Object :: KeySym
xK_ISO_Enter :: KeySym
xK_dead_grave :: KeySym
xK_dead_acute :: KeySym
xK_dead_circumflex :: KeySym
xK_dead_tilde :: KeySym
xK_dead_macron :: KeySym
xK_dead_breve :: KeySym
xK_dead_abovedot :: KeySym
xK_dead_diaeresis :: KeySym
xK_dead_abovering :: KeySym
xK_dead_doubleacute :: KeySym
xK_dead_caron :: KeySym
xK_dead_cedilla :: KeySym
xK_dead_ogonek :: KeySym
xK_dead_iota :: KeySym
xK_dead_voiced_sound :: KeySym
xK_dead_semivoiced_sound :: KeySym
xK_dead_belowdot :: KeySym
xK_dead_hook :: KeySym
xK_dead_horn :: KeySym
xK_dead_stroke :: KeySym
xK_dead_abovecomma :: KeySym
xK_dead_psili :: KeySym
xK_dead_abovereversedcomma :: KeySym
xK_dead_dasia :: KeySym
xK_First_Virtual_Screen :: KeySym
xK_Prev_Virtual_Screen :: KeySym
xK_Next_Virtual_Screen :: KeySym
xK_Last_Virtual_Screen :: KeySym
xK_Terminate_Server :: KeySym
xK_AccessX_Enable :: KeySym
xK_AccessX_Feedback_Enable :: KeySym
xK_RepeatKeys_Enable :: KeySym
xK_SlowKeys_Enable :: KeySym
xK_BounceKeys_Enable :: KeySym
xK_StickyKeys_Enable :: KeySym
xK_MouseKeys_Enable :: KeySym
xK_MouseKeys_Accel_Enable :: KeySym
xK_Overlay1_Enable :: KeySym
xK_Overlay2_Enable :: KeySym
xK_AudibleBell_Enable :: KeySym
xK_Pointer_Left :: KeySym
xK_Pointer_Right :: KeySym
xK_Pointer_Up :: KeySym
xK_Pointer_Down :: KeySym
xK_Pointer_UpLeft :: KeySym
xK_Pointer_UpRight :: KeySym
xK_Pointer_DownLeft :: KeySym
xK_Pointer_DownRight :: KeySym
xK_Pointer_Button_Dflt :: KeySym
xK_Pointer_Button1 :: KeySym
xK_Pointer_Button2 :: KeySym
xK_Pointer_Button3 :: KeySym
xK_Pointer_Button4 :: KeySym
xK_Pointer_Button5 :: KeySym
xK_Pointer_DblClick_Dflt :: KeySym
xK_Pointer_DblClick1 :: KeySym
xK_Pointer_DblClick2 :: KeySym
xK_Pointer_DblClick3 :: KeySym
xK_Pointer_DblClick4 :: KeySym
xK_Pointer_DblClick5 :: KeySym
xK_Pointer_Drag_Dflt :: KeySym
xK_Pointer_Drag1 :: KeySym
xK_Pointer_Drag2 :: KeySym
xK_Pointer_Drag3 :: KeySym
xK_Pointer_Drag4 :: KeySym
xK_Pointer_Drag5 :: KeySym
xK_Pointer_EnableKeys :: KeySym
xK_Pointer_Accelerate :: KeySym
xK_Pointer_DfltBtnNext :: KeySym
xK_Pointer_DfltBtnPrev :: KeySym
xK_Aogonek :: KeySym
xK_breve :: KeySym
xK_Lstroke :: KeySym
xK_Lcaron :: KeySym
xK_Sacute :: KeySym
xK_Scaron :: KeySym
xK_Scedilla :: KeySym
xK_Tcaron :: KeySym
xK_Zacute :: KeySym
xK_Zcaron :: KeySym
xK_Zabovedot :: KeySym
xK_aogonek :: KeySym
xK_ogonek :: KeySym
xK_lstroke :: KeySym
xK_lcaron :: KeySym
xK_sacute :: KeySym
xK_caron :: KeySym
xK_scaron :: KeySym
xK_scedilla :: KeySym
xK_tcaron :: KeySym
xK_zacute :: KeySym
xK_doubleacute :: KeySym
xK_zcaron :: KeySym
xK_zabovedot :: KeySym
xK_Racute :: KeySym
xK_Abreve :: KeySym
xK_Lacute :: KeySym
xK_Cacute :: KeySym
xK_Ccaron :: KeySym
xK_Eogonek :: KeySym
xK_Ecaron :: KeySym
xK_Dcaron :: KeySym
xK_Dstroke :: KeySym
xK_Nacute :: KeySym
xK_Ncaron :: KeySym
xK_Odoubleacute :: KeySym
xK_Rcaron :: KeySym
xK_Uring :: KeySym
xK_Udoubleacute :: KeySym
xK_Tcedilla :: KeySym
xK_racute :: KeySym
xK_abreve :: KeySym
xK_lacute :: KeySym
xK_cacute :: KeySym
xK_ccaron :: KeySym
xK_eogonek :: KeySym
xK_ecaron :: KeySym
xK_dcaron :: KeySym
xK_dstroke :: KeySym
xK_nacute :: KeySym
xK_ncaron :: KeySym
xK_odoubleacute :: KeySym
xK_udoubleacute :: KeySym
xK_rcaron :: KeySym
xK_uring :: KeySym
xK_tcedilla :: KeySym
xK_abovedot :: KeySym
xK_Hstroke :: KeySym
xK_Hcircumflex :: KeySym
xK_Iabovedot :: KeySym
xK_Gbreve :: KeySym
xK_Jcircumflex :: KeySym
xK_hstroke :: KeySym
xK_hcircumflex :: KeySym
xK_idotless :: KeySym
xK_gbreve :: KeySym
xK_jcircumflex :: KeySym
xK_Cabovedot :: KeySym
xK_Ccircumflex :: KeySym
xK_Gabovedot :: KeySym
xK_Gcircumflex :: KeySym
xK_Ubreve :: KeySym
xK_Scircumflex :: KeySym
xK_cabovedot :: KeySym
xK_ccircumflex :: KeySym
xK_gabovedot :: KeySym
xK_gcircumflex :: KeySym
xK_ubreve :: KeySym
xK_scircumflex :: KeySym
xK_kra :: KeySym
xK_kappa :: KeySym
xK_Rcedilla :: KeySym
xK_Itilde :: KeySym
xK_Lcedilla :: KeySym
xK_Emacron :: KeySym
xK_Gcedilla :: KeySym
xK_Tslash :: KeySym
xK_rcedilla :: KeySym
xK_itilde :: KeySym
xK_lcedilla :: KeySym
xK_emacron :: KeySym
xK_gcedilla :: KeySym
xK_tslash :: KeySym
xK_ENG :: KeySym
xK_eng :: KeySym
xK_Amacron :: KeySym
xK_Iogonek :: KeySym
xK_Eabovedot :: KeySym
xK_Imacron :: KeySym
xK_Ncedilla :: KeySym
xK_Omacron :: KeySym
xK_Kcedilla :: KeySym
xK_Uogonek :: KeySym
xK_Utilde :: KeySym
xK_Umacron :: KeySym
xK_amacron :: KeySym
xK_iogonek :: KeySym
xK_eabovedot :: KeySym
xK_imacron :: KeySym
xK_ncedilla :: KeySym
xK_omacron :: KeySym
xK_kcedilla :: KeySym
xK_uogonek :: KeySym
xK_utilde :: KeySym
xK_umacron :: KeySym
xK_Babovedot :: KeySym
xK_babovedot :: KeySym
xK_Dabovedot :: KeySym
xK_Wgrave :: KeySym
xK_Wacute :: KeySym
xK_dabovedot :: KeySym
xK_Ygrave :: KeySym
xK_Fabovedot :: KeySym
xK_fabovedot :: KeySym
xK_Mabovedot :: KeySym
xK_mabovedot :: KeySym
xK_Pabovedot :: KeySym
xK_wgrave :: KeySym
xK_pabovedot :: KeySym
xK_wacute :: KeySym
xK_Sabovedot :: KeySym
xK_ygrave :: KeySym
xK_Wdiaeresis :: KeySym
xK_wdiaeresis :: KeySym
xK_sabovedot :: KeySym
xK_Wcircumflex :: KeySym
xK_Tabovedot :: KeySym
xK_Ycircumflex :: KeySym
xK_wcircumflex :: KeySym
xK_tabovedot :: KeySym
xK_ycircumflex :: KeySym
xK_OE :: KeySym
xK_oe :: KeySym
xK_Ydiaeresis :: KeySym
xK_overline :: KeySym
xK_kana_fullstop :: KeySym
xK_kana_openingbracket :: KeySym
xK_kana_closingbracket :: KeySym
xK_kana_comma :: KeySym
xK_kana_conjunctive :: KeySym
xK_kana_middledot :: KeySym
xK_kana_WO :: KeySym
xK_kana_a :: KeySym
xK_kana_i :: KeySym
xK_kana_u :: KeySym
xK_kana_e :: KeySym
xK_kana_o :: KeySym
xK_kana_ya :: KeySym
xK_kana_yu :: KeySym
xK_kana_yo :: KeySym
xK_kana_tsu :: KeySym
xK_kana_tu :: KeySym
xK_prolongedsound :: KeySym
xK_kana_A :: KeySym
xK_kana_I :: KeySym
xK_kana_U :: KeySym
xK_kana_E :: KeySym
xK_kana_O :: KeySym
xK_kana_KA :: KeySym
xK_kana_KI :: KeySym
xK_kana_KU :: KeySym
xK_kana_KE :: KeySym
xK_kana_KO :: KeySym
xK_kana_SA :: KeySym
xK_kana_SHI :: KeySym
xK_kana_SU :: KeySym
xK_kana_SE :: KeySym
xK_kana_SO :: KeySym
xK_kana_TA :: KeySym
xK_kana_CHI :: KeySym
xK_kana_TI :: KeySym
xK_kana_TSU :: KeySym
xK_kana_TU :: KeySym
xK_kana_TE :: KeySym
xK_kana_TO :: KeySym
xK_kana_NA :: KeySym
xK_kana_NI :: KeySym
xK_kana_NU :: KeySym
xK_kana_NE :: KeySym
xK_kana_NO :: KeySym
xK_kana_HA :: KeySym
xK_kana_HI :: KeySym
xK_kana_FU :: KeySym
xK_kana_HU :: KeySym
xK_kana_HE :: KeySym
xK_kana_HO :: KeySym
xK_kana_MA :: KeySym
xK_kana_MI :: KeySym
xK_kana_MU :: KeySym
xK_kana_ME :: KeySym
xK_kana_MO :: KeySym
xK_kana_YA :: KeySym
xK_kana_YU :: KeySym
xK_kana_YO :: KeySym
xK_kana_RA :: KeySym
xK_kana_RI :: KeySym
xK_kana_RU :: KeySym
xK_kana_RE :: KeySym
xK_kana_RO :: KeySym
xK_kana_WA :: KeySym
xK_kana_N :: KeySym
xK_voicedsound :: KeySym
xK_semivoicedsound :: KeySym
xK_kana_switch :: KeySym
xK_Farsi_0 :: KeySym
xK_Farsi_1 :: KeySym
xK_Farsi_2 :: KeySym
xK_Farsi_3 :: KeySym
xK_Farsi_4 :: KeySym
xK_Farsi_5 :: KeySym
xK_Farsi_6 :: KeySym
xK_Farsi_7 :: KeySym
xK_Farsi_8 :: KeySym
xK_Farsi_9 :: KeySym
xK_Arabic_percent :: KeySym
xK_Arabic_superscript_alef :: KeySym
xK_Arabic_tteh :: KeySym
xK_Arabic_peh :: KeySym
xK_Arabic_tcheh :: KeySym
xK_Arabic_ddal :: KeySym
xK_Arabic_rreh :: KeySym
xK_Arabic_comma :: KeySym
xK_Arabic_fullstop :: KeySym
xK_Arabic_0 :: KeySym
xK_Arabic_1 :: KeySym
xK_Arabic_2 :: KeySym
xK_Arabic_3 :: KeySym
xK_Arabic_4 :: KeySym
xK_Arabic_5 :: KeySym
xK_Arabic_6 :: KeySym
xK_Arabic_7 :: KeySym
xK_Arabic_8 :: KeySym
xK_Arabic_9 :: KeySym
xK_Arabic_semicolon :: KeySym
xK_Arabic_question_mark :: KeySym
xK_Arabic_hamza :: KeySym
xK_Arabic_maddaonalef :: KeySym
xK_Arabic_hamzaonalef :: KeySym
xK_Arabic_hamzaonwaw :: KeySym
xK_Arabic_hamzaunderalef :: KeySym
xK_Arabic_hamzaonyeh :: KeySym
xK_Arabic_alef :: KeySym
xK_Arabic_beh :: KeySym
xK_Arabic_tehmarbuta :: KeySym
xK_Arabic_teh :: KeySym
xK_Arabic_theh :: KeySym
xK_Arabic_jeem :: KeySym
xK_Arabic_hah :: KeySym
xK_Arabic_khah :: KeySym
xK_Arabic_dal :: KeySym
xK_Arabic_thal :: KeySym
xK_Arabic_ra :: KeySym
xK_Arabic_zain :: KeySym
xK_Arabic_seen :: KeySym
xK_Arabic_sheen :: KeySym
xK_Arabic_sad :: KeySym
xK_Arabic_dad :: KeySym
xK_Arabic_tah :: KeySym
xK_Arabic_zah :: KeySym
xK_Arabic_ain :: KeySym
xK_Arabic_ghain :: KeySym
xK_Arabic_tatweel :: KeySym
xK_Arabic_feh :: KeySym
xK_Arabic_qaf :: KeySym
xK_Arabic_kaf :: KeySym
xK_Arabic_lam :: KeySym
xK_Arabic_meem :: KeySym
xK_Arabic_noon :: KeySym
xK_Arabic_ha :: KeySym
xK_Arabic_heh :: KeySym
xK_Arabic_waw :: KeySym
xK_Arabic_alefmaksura :: KeySym
xK_Arabic_yeh :: KeySym
xK_Arabic_fathatan :: KeySym
xK_Arabic_dammatan :: KeySym
xK_Arabic_kasratan :: KeySym
xK_Arabic_fatha :: KeySym
xK_Arabic_damma :: KeySym
xK_Arabic_kasra :: KeySym
xK_Arabic_shadda :: KeySym
xK_Arabic_sukun :: KeySym
xK_Arabic_madda_above :: KeySym
xK_Arabic_hamza_above :: KeySym
xK_Arabic_hamza_below :: KeySym
xK_Arabic_jeh :: KeySym
xK_Arabic_veh :: KeySym
xK_Arabic_keheh :: KeySym
xK_Arabic_gaf :: KeySym
xK_Arabic_noon_ghunna :: KeySym
xK_Arabic_heh_doachashmee :: KeySym
xK_Farsi_yeh :: KeySym
xK_Arabic_farsi_yeh :: KeySym
xK_Arabic_yeh_baree :: KeySym
xK_Arabic_heh_goal :: KeySym
xK_Arabic_switch :: KeySym
xK_Cyrillic_GHE_bar :: KeySym
xK_Cyrillic_ghe_bar :: KeySym
xK_Cyrillic_ZHE_descender :: KeySym
xK_Cyrillic_zhe_descender :: KeySym
xK_Cyrillic_KA_descender :: KeySym
xK_Cyrillic_ka_descender :: KeySym
xK_Cyrillic_KA_vertstroke :: KeySym
xK_Cyrillic_ka_vertstroke :: KeySym
xK_Cyrillic_EN_descender :: KeySym
xK_Cyrillic_en_descender :: KeySym
xK_Cyrillic_U_straight :: KeySym
xK_Cyrillic_u_straight :: KeySym
xK_Cyrillic_U_straight_bar :: KeySym
xK_Cyrillic_u_straight_bar :: KeySym
xK_Cyrillic_HA_descender :: KeySym
xK_Cyrillic_ha_descender :: KeySym
xK_Cyrillic_CHE_descender :: KeySym
xK_Cyrillic_che_descender :: KeySym
xK_Cyrillic_CHE_vertstroke :: KeySym
xK_Cyrillic_che_vertstroke :: KeySym
xK_Cyrillic_SHHA :: KeySym
xK_Cyrillic_shha :: KeySym
xK_Cyrillic_SCHWA :: KeySym
xK_Cyrillic_schwa :: KeySym
xK_Cyrillic_I_macron :: KeySym
xK_Cyrillic_i_macron :: KeySym
xK_Cyrillic_O_bar :: KeySym
xK_Cyrillic_o_bar :: KeySym
xK_Cyrillic_U_macron :: KeySym
xK_Cyrillic_u_macron :: KeySym
xK_Serbian_dje :: KeySym
xK_Macedonia_gje :: KeySym
xK_Cyrillic_io :: KeySym
xK_Ukrainian_ie :: KeySym
xK_Ukranian_je :: KeySym
xK_Macedonia_dse :: KeySym
xK_Ukrainian_i :: KeySym
xK_Ukranian_i :: KeySym
xK_Ukrainian_yi :: KeySym
xK_Ukranian_yi :: KeySym
xK_Cyrillic_je :: KeySym
xK_Serbian_je :: KeySym
xK_Cyrillic_lje :: KeySym
xK_Serbian_lje :: KeySym
xK_Cyrillic_nje :: KeySym
xK_Serbian_nje :: KeySym
xK_Serbian_tshe :: KeySym
xK_Macedonia_kje :: KeySym
xK_Ukrainian_ghe_with_upturn :: KeySym
xK_Byelorussian_shortu :: KeySym
xK_Cyrillic_dzhe :: KeySym
xK_Serbian_dze :: KeySym
xK_numerosign :: KeySym
xK_Serbian_DJE :: KeySym
xK_Macedonia_GJE :: KeySym
xK_Cyrillic_IO :: KeySym
xK_Ukrainian_IE :: KeySym
xK_Ukranian_JE :: KeySym
xK_Macedonia_DSE :: KeySym
xK_Ukrainian_I :: KeySym
xK_Ukranian_I :: KeySym
xK_Ukrainian_YI :: KeySym
xK_Ukranian_YI :: KeySym
xK_Cyrillic_JE :: KeySym
xK_Serbian_JE :: KeySym
xK_Cyrillic_LJE :: KeySym
xK_Serbian_LJE :: KeySym
xK_Cyrillic_NJE :: KeySym
xK_Serbian_NJE :: KeySym
xK_Serbian_TSHE :: KeySym
xK_Macedonia_KJE :: KeySym
xK_Ukrainian_GHE_WITH_UPTURN :: KeySym
xK_Byelorussian_SHORTU :: KeySym
xK_Cyrillic_DZHE :: KeySym
xK_Serbian_DZE :: KeySym
xK_Cyrillic_yu :: KeySym
xK_Cyrillic_a :: KeySym
xK_Cyrillic_be :: KeySym
xK_Cyrillic_tse :: KeySym
xK_Cyrillic_de :: KeySym
xK_Cyrillic_ie :: KeySym
xK_Cyrillic_ef :: KeySym
xK_Cyrillic_ghe :: KeySym
xK_Cyrillic_ha :: KeySym
xK_Cyrillic_i :: KeySym
xK_Cyrillic_shorti :: KeySym
xK_Cyrillic_ka :: KeySym
xK_Cyrillic_el :: KeySym
xK_Cyrillic_em :: KeySym
xK_Cyrillic_en :: KeySym
xK_Cyrillic_o :: KeySym
xK_Cyrillic_pe :: KeySym
xK_Cyrillic_ya :: KeySym
xK_Cyrillic_er :: KeySym
xK_Cyrillic_es :: KeySym
xK_Cyrillic_te :: KeySym
xK_Cyrillic_u :: KeySym
xK_Cyrillic_zhe :: KeySym
xK_Cyrillic_ve :: KeySym
xK_Cyrillic_softsign :: KeySym
xK_Cyrillic_yeru :: KeySym
xK_Cyrillic_ze :: KeySym
xK_Cyrillic_sha :: KeySym
xK_Cyrillic_e :: KeySym
xK_Cyrillic_shcha :: KeySym
xK_Cyrillic_che :: KeySym
xK_Cyrillic_hardsign :: KeySym
xK_Cyrillic_YU :: KeySym
xK_Cyrillic_A :: KeySym
xK_Cyrillic_BE :: KeySym
xK_Cyrillic_TSE :: KeySym
xK_Cyrillic_DE :: KeySym
xK_Cyrillic_IE :: KeySym
xK_Cyrillic_EF :: KeySym
xK_Cyrillic_GHE :: KeySym
xK_Cyrillic_HA :: KeySym
xK_Cyrillic_I :: KeySym
xK_Cyrillic_SHORTI :: KeySym
xK_Cyrillic_KA :: KeySym
xK_Cyrillic_EL :: KeySym
xK_Cyrillic_EM :: KeySym
xK_Cyrillic_EN :: KeySym
xK_Cyrillic_O :: KeySym
xK_Cyrillic_PE :: KeySym
xK_Cyrillic_YA :: KeySym
xK_Cyrillic_ER :: KeySym
xK_Cyrillic_ES :: KeySym
xK_Cyrillic_TE :: KeySym
xK_Cyrillic_U :: KeySym
xK_Cyrillic_ZHE :: KeySym
xK_Cyrillic_VE :: KeySym
xK_Cyrillic_SOFTSIGN :: KeySym
xK_Cyrillic_YERU :: KeySym
xK_Cyrillic_ZE :: KeySym
xK_Cyrillic_SHA :: KeySym
xK_Cyrillic_E :: KeySym
xK_Cyrillic_SHCHA :: KeySym
xK_Cyrillic_CHE :: KeySym
xK_Cyrillic_HARDSIGN :: KeySym
xK_Greek_ALPHAaccent :: KeySym
xK_Greek_EPSILONaccent :: KeySym
xK_Greek_ETAaccent :: KeySym
xK_Greek_IOTAaccent :: KeySym
xK_Greek_IOTAdieresis :: KeySym
xK_Greek_IOTAdiaeresis :: KeySym
xK_Greek_OMICRONaccent :: KeySym
xK_Greek_UPSILONaccent :: KeySym
xK_Greek_UPSILONdieresis :: KeySym
xK_Greek_OMEGAaccent :: KeySym
xK_Greek_accentdieresis :: KeySym
xK_Greek_horizbar :: KeySym
xK_Greek_alphaaccent :: KeySym
xK_Greek_epsilonaccent :: KeySym
xK_Greek_etaaccent :: KeySym
xK_Greek_iotaaccent :: KeySym
xK_Greek_iotadieresis :: KeySym
xK_Greek_iotaaccentdieresis :: KeySym
xK_Greek_omicronaccent :: KeySym
xK_Greek_upsilonaccent :: KeySym
xK_Greek_upsilondieresis :: KeySym
xK_Greek_upsilonaccentdieresis :: KeySym
xK_Greek_omegaaccent :: KeySym
xK_Greek_ALPHA :: KeySym
xK_Greek_BETA :: KeySym
xK_Greek_GAMMA :: KeySym
xK_Greek_DELTA :: KeySym
xK_Greek_EPSILON :: KeySym
xK_Greek_ZETA :: KeySym
xK_Greek_ETA :: KeySym
xK_Greek_THETA :: KeySym
xK_Greek_IOTA :: KeySym
xK_Greek_KAPPA :: KeySym
xK_Greek_LAMDA :: KeySym
xK_Greek_LAMBDA :: KeySym
xK_Greek_MU :: KeySym
xK_Greek_NU :: KeySym
xK_Greek_XI :: KeySym
xK_Greek_OMICRON :: KeySym
xK_Greek_PI :: KeySym
xK_Greek_RHO :: KeySym
xK_Greek_SIGMA :: KeySym
xK_Greek_TAU :: KeySym
xK_Greek_UPSILON :: KeySym
xK_Greek_PHI :: KeySym
xK_Greek_CHI :: KeySym
xK_Greek_PSI :: KeySym
xK_Greek_OMEGA :: KeySym
xK_Greek_alpha :: KeySym
xK_Greek_beta :: KeySym
xK_Greek_gamma :: KeySym
xK_Greek_delta :: KeySym
xK_Greek_epsilon :: KeySym
xK_Greek_zeta :: KeySym
xK_Greek_eta :: KeySym
xK_Greek_theta :: KeySym
xK_Greek_iota :: KeySym
xK_Greek_kappa :: KeySym
xK_Greek_lamda :: KeySym
xK_Greek_lambda :: KeySym
xK_Greek_mu :: KeySym
xK_Greek_nu :: KeySym
xK_Greek_xi :: KeySym
xK_Greek_omicron :: KeySym
xK_Greek_pi :: KeySym
xK_Greek_rho :: KeySym
xK_Greek_sigma :: KeySym
xK_Greek_finalsmallsigma :: KeySym
xK_Greek_tau :: KeySym
xK_Greek_upsilon :: KeySym
xK_Greek_phi :: KeySym
xK_Greek_chi :: KeySym
xK_Greek_psi :: KeySym
xK_Greek_omega :: KeySym
xK_Greek_switch :: KeySym
xK_hebrew_doublelowline :: KeySym
xK_hebrew_aleph :: KeySym
xK_hebrew_bet :: KeySym
xK_hebrew_beth :: KeySym
xK_hebrew_gimel :: KeySym
xK_hebrew_gimmel :: KeySym
xK_hebrew_dalet :: KeySym
xK_hebrew_daleth :: KeySym
xK_hebrew_he :: KeySym
xK_hebrew_waw :: KeySym
xK_hebrew_zain :: KeySym
xK_hebrew_zayin :: KeySym
xK_hebrew_chet :: KeySym
xK_hebrew_het :: KeySym
xK_hebrew_tet :: KeySym
xK_hebrew_teth :: KeySym
xK_hebrew_yod :: KeySym
xK_hebrew_finalkaph :: KeySym
xK_hebrew_kaph :: KeySym
xK_hebrew_lamed :: KeySym
xK_hebrew_finalmem :: KeySym
xK_hebrew_mem :: KeySym
xK_hebrew_finalnun :: KeySym
xK_hebrew_nun :: KeySym
xK_hebrew_samech :: KeySym
xK_hebrew_samekh :: KeySym
xK_hebrew_ayin :: KeySym
xK_hebrew_finalpe :: KeySym
xK_hebrew_pe :: KeySym
xK_hebrew_finalzade :: KeySym
xK_hebrew_finalzadi :: KeySym
xK_hebrew_zade :: KeySym
xK_hebrew_zadi :: KeySym
xK_hebrew_qoph :: KeySym
xK_hebrew_kuf :: KeySym
xK_hebrew_resh :: KeySym
xK_hebrew_shin :: KeySym
xK_hebrew_taw :: KeySym
xK_hebrew_taf :: KeySym
xK_Hebrew_switch :: KeySym
xK_Thai_kokai :: KeySym
xK_Thai_khokhai :: KeySym
xK_Thai_khokhuat :: KeySym
xK_Thai_khokhwai :: KeySym
xK_Thai_khokhon :: KeySym
xK_Thai_khorakhang :: KeySym
xK_Thai_ngongu :: KeySym
xK_Thai_chochan :: KeySym
xK_Thai_choching :: KeySym
xK_Thai_chochang :: KeySym
xK_Thai_soso :: KeySym
xK_Thai_chochoe :: KeySym
xK_Thai_yoying :: KeySym
xK_Thai_dochada :: KeySym
xK_Thai_topatak :: KeySym
xK_Thai_thothan :: KeySym
xK_Thai_thonangmontho :: KeySym
xK_Thai_thophuthao :: KeySym
xK_Thai_nonen :: KeySym
xK_Thai_dodek :: KeySym
xK_Thai_totao :: KeySym
xK_Thai_thothung :: KeySym
xK_Thai_thothahan :: KeySym
xK_Thai_thothong :: KeySym
xK_Thai_nonu :: KeySym
xK_Thai_bobaimai :: KeySym
xK_Thai_popla :: KeySym
xK_Thai_phophung :: KeySym
xK_Thai_fofa :: KeySym
xK_Thai_phophan :: KeySym
xK_Thai_fofan :: KeySym
xK_Thai_phosamphao :: KeySym
xK_Thai_moma :: KeySym
xK_Thai_yoyak :: KeySym
xK_Thai_rorua :: KeySym
xK_Thai_ru :: KeySym
xK_Thai_loling :: KeySym
xK_Thai_lu :: KeySym
xK_Thai_wowaen :: KeySym
xK_Thai_sosala :: KeySym
xK_Thai_sorusi :: KeySym
xK_Thai_sosua :: KeySym
xK_Thai_hohip :: KeySym
xK_Thai_lochula :: KeySym
xK_Thai_oang :: KeySym
xK_Thai_honokhuk :: KeySym
xK_Thai_paiyannoi :: KeySym
xK_Thai_saraa :: KeySym
xK_Thai_maihanakat :: KeySym
xK_Thai_saraaa :: KeySym
xK_Thai_saraam :: KeySym
xK_Thai_sarai :: KeySym
xK_Thai_saraii :: KeySym
xK_Thai_saraue :: KeySym
xK_Thai_sarauee :: KeySym
xK_Thai_sarau :: KeySym
xK_Thai_sarauu :: KeySym
xK_Thai_phinthu :: KeySym
xK_Thai_maihanakat_maitho :: KeySym
xK_Thai_baht :: KeySym
xK_Thai_sarae :: KeySym
xK_Thai_saraae :: KeySym
xK_Thai_sarao :: KeySym
xK_Thai_saraaimaimuan :: KeySym
xK_Thai_saraaimaimalai :: KeySym
xK_Thai_lakkhangyao :: KeySym
xK_Thai_maiyamok :: KeySym
xK_Thai_maitaikhu :: KeySym
xK_Thai_maiek :: KeySym
xK_Thai_maitho :: KeySym
xK_Thai_maitri :: KeySym
xK_Thai_maichattawa :: KeySym
xK_Thai_thanthakhat :: KeySym
xK_Thai_nikhahit :: KeySym
xK_Thai_leksun :: KeySym
xK_Thai_leknung :: KeySym
xK_Thai_leksong :: KeySym
xK_Thai_leksam :: KeySym
xK_Thai_leksi :: KeySym
xK_Thai_lekha :: KeySym
xK_Thai_lekhok :: KeySym
xK_Thai_lekchet :: KeySym
xK_Thai_lekpaet :: KeySym
xK_Thai_lekkao :: KeySym
xK_Hangul :: KeySym
xK_Hangul_Start :: KeySym
xK_Hangul_End :: KeySym
xK_Hangul_Hanja :: KeySym
xK_Hangul_Jamo :: KeySym
xK_Hangul_Romaja :: KeySym
xK_Hangul_Codeinput :: KeySym
xK_Hangul_Jeonja :: KeySym
xK_Hangul_Banja :: KeySym
xK_Hangul_PreHanja :: KeySym
xK_Hangul_PostHanja :: KeySym
xK_Hangul_SingleCandidate :: KeySym
xK_Hangul_MultipleCandidate :: KeySym
xK_Hangul_PreviousCandidate :: KeySym
xK_Hangul_Special :: KeySym
xK_Hangul_switch :: KeySym
xK_Hangul_Kiyeog :: KeySym
xK_Hangul_SsangKiyeog :: KeySym
xK_Hangul_KiyeogSios :: KeySym
xK_Hangul_Nieun :: KeySym
xK_Hangul_NieunJieuj :: KeySym
xK_Hangul_NieunHieuh :: KeySym
xK_Hangul_Dikeud :: KeySym
xK_Hangul_SsangDikeud :: KeySym
xK_Hangul_Rieul :: KeySym
xK_Hangul_RieulKiyeog :: KeySym
xK_Hangul_RieulMieum :: KeySym
xK_Hangul_RieulPieub :: KeySym
xK_Hangul_RieulSios :: KeySym
xK_Hangul_RieulTieut :: KeySym
xK_Hangul_RieulPhieuf :: KeySym
xK_Hangul_RieulHieuh :: KeySym
xK_Hangul_Mieum :: KeySym
xK_Hangul_Pieub :: KeySym
xK_Hangul_SsangPieub :: KeySym
xK_Hangul_PieubSios :: KeySym
xK_Hangul_Sios :: KeySym
xK_Hangul_SsangSios :: KeySym
xK_Hangul_Ieung :: KeySym
xK_Hangul_Jieuj :: KeySym
xK_Hangul_SsangJieuj :: KeySym
xK_Hangul_Cieuc :: KeySym
xK_Hangul_Khieuq :: KeySym
xK_Hangul_Tieut :: KeySym
xK_Hangul_Phieuf :: KeySym
xK_Hangul_Hieuh :: KeySym
xK_Hangul_A :: KeySym
xK_Hangul_AE :: KeySym
xK_Hangul_YA :: KeySym
xK_Hangul_YAE :: KeySym
xK_Hangul_EO :: KeySym
xK_Hangul_E :: KeySym
xK_Hangul_YEO :: KeySym
xK_Hangul_YE :: KeySym
xK_Hangul_O :: KeySym
xK_Hangul_WA :: KeySym
xK_Hangul_WAE :: KeySym
xK_Hangul_OE :: KeySym
xK_Hangul_YO :: KeySym
xK_Hangul_U :: KeySym
xK_Hangul_WEO :: KeySym
xK_Hangul_WE :: KeySym
xK_Hangul_WI :: KeySym
xK_Hangul_YU :: KeySym
xK_Hangul_EU :: KeySym
xK_Hangul_YI :: KeySym
xK_Hangul_I :: KeySym
xK_Hangul_J_Kiyeog :: KeySym
xK_Hangul_J_SsangKiyeog :: KeySym
xK_Hangul_J_KiyeogSios :: KeySym
xK_Hangul_J_Nieun :: KeySym
xK_Hangul_J_NieunJieuj :: KeySym
xK_Hangul_J_NieunHieuh :: KeySym
xK_Hangul_J_Dikeud :: KeySym
xK_Hangul_J_Rieul :: KeySym
xK_Hangul_J_RieulKiyeog :: KeySym
xK_Hangul_J_RieulMieum :: KeySym
xK_Hangul_J_RieulPieub :: KeySym
xK_Hangul_J_RieulSios :: KeySym
xK_Hangul_J_RieulTieut :: KeySym
xK_Hangul_J_RieulPhieuf :: KeySym
xK_Hangul_J_RieulHieuh :: KeySym
xK_Hangul_J_Mieum :: KeySym
xK_Hangul_J_Pieub :: KeySym
xK_Hangul_J_PieubSios :: KeySym
xK_Hangul_J_Sios :: KeySym
xK_Hangul_J_SsangSios :: KeySym
xK_Hangul_J_Ieung :: KeySym
xK_Hangul_J_Jieuj :: KeySym
xK_Hangul_J_Cieuc :: KeySym
xK_Hangul_J_Khieuq :: KeySym
xK_Hangul_J_Tieut :: KeySym
xK_Hangul_J_Phieuf :: KeySym
xK_Hangul_J_Hieuh :: KeySym
xK_Hangul_RieulYeorinHieuh :: KeySym
xK_Hangul_SunkyeongeumMieum :: KeySym
xK_Hangul_SunkyeongeumPieub :: KeySym
xK_Hangul_PanSios :: KeySym
xK_Hangul_KkogjiDalrinIeung :: KeySym
xK_Hangul_SunkyeongeumPhieuf :: KeySym
xK_Hangul_YeorinHieuh :: KeySym
xK_Hangul_AraeA :: KeySym
xK_Hangul_AraeAE :: KeySym
xK_Hangul_J_PanSios :: KeySym
xK_Hangul_J_KkogjiDalrinIeung :: KeySym
xK_Hangul_J_YeorinHieuh :: KeySym
xK_Korean_Won :: KeySym
xK_Armenian_ligature_ew :: KeySym
xK_Armenian_full_stop :: KeySym
xK_Armenian_verjaket :: KeySym
xK_Armenian_separation_mark :: KeySym
xK_Armenian_but :: KeySym
xK_Armenian_hyphen :: KeySym
xK_Armenian_yentamna :: KeySym
xK_Armenian_exclam :: KeySym
xK_Armenian_amanak :: KeySym
xK_Armenian_accent :: KeySym
xK_Armenian_shesht :: KeySym
xK_Armenian_question :: KeySym
xK_Armenian_paruyk :: KeySym
xK_Armenian_AYB :: KeySym
xK_Armenian_ayb :: KeySym
xK_Armenian_BEN :: KeySym
xK_Armenian_ben :: KeySym
xK_Armenian_GIM :: KeySym
xK_Armenian_gim :: KeySym
xK_Armenian_DA :: KeySym
xK_Armenian_da :: KeySym
xK_Armenian_YECH :: KeySym
xK_Armenian_yech :: KeySym
xK_Armenian_ZA :: KeySym
xK_Armenian_za :: KeySym
xK_Armenian_E :: KeySym
xK_Armenian_e :: KeySym
xK_Armenian_AT :: KeySym
xK_Armenian_at :: KeySym
xK_Armenian_TO :: KeySym
xK_Armenian_to :: KeySym
xK_Armenian_ZHE :: KeySym
xK_Armenian_zhe :: KeySym
xK_Armenian_INI :: KeySym
xK_Armenian_ini :: KeySym
xK_Armenian_LYUN :: KeySym
xK_Armenian_lyun :: KeySym
xK_Armenian_KHE :: KeySym
xK_Armenian_khe :: KeySym
xK_Armenian_TSA :: KeySym
xK_Armenian_tsa :: KeySym
xK_Armenian_KEN :: KeySym
xK_Armenian_ken :: KeySym
xK_Armenian_HO :: KeySym
xK_Armenian_ho :: KeySym
xK_Armenian_DZA :: KeySym
xK_Armenian_dza :: KeySym
xK_Armenian_GHAT :: KeySym
xK_Armenian_ghat :: KeySym
xK_Armenian_TCHE :: KeySym
xK_Armenian_tche :: KeySym
xK_Armenian_MEN :: KeySym
xK_Armenian_men :: KeySym
xK_Armenian_HI :: KeySym
xK_Armenian_hi :: KeySym
xK_Armenian_NU :: KeySym
xK_Armenian_nu :: KeySym
xK_Armenian_SHA :: KeySym
xK_Armenian_sha :: KeySym
xK_Armenian_VO :: KeySym
xK_Armenian_vo :: KeySym
xK_Armenian_CHA :: KeySym
xK_Armenian_cha :: KeySym
xK_Armenian_PE :: KeySym
xK_Armenian_pe :: KeySym
xK_Armenian_JE :: KeySym
xK_Armenian_je :: KeySym
xK_Armenian_RA :: KeySym
xK_Armenian_ra :: KeySym
xK_Armenian_SE :: KeySym
xK_Armenian_se :: KeySym
xK_Armenian_VEV :: KeySym
xK_Armenian_vev :: KeySym
xK_Armenian_TYUN :: KeySym
xK_Armenian_tyun :: KeySym
xK_Armenian_RE :: KeySym
xK_Armenian_re :: KeySym
xK_Armenian_TSO :: KeySym
xK_Armenian_tso :: KeySym
xK_Armenian_VYUN :: KeySym
xK_Armenian_vyun :: KeySym
xK_Armenian_PYUR :: KeySym
xK_Armenian_pyur :: KeySym
xK_Armenian_KE :: KeySym
xK_Armenian_ke :: KeySym
xK_Armenian_O :: KeySym
xK_Armenian_o :: KeySym
xK_Armenian_FE :: KeySym
xK_Armenian_fe :: KeySym
xK_Armenian_apostrophe :: KeySym
xK_Georgian_an :: KeySym
xK_Georgian_ban :: KeySym
xK_Georgian_gan :: KeySym
xK_Georgian_don :: KeySym
xK_Georgian_en :: KeySym
xK_Georgian_vin :: KeySym
xK_Georgian_zen :: KeySym
xK_Georgian_tan :: KeySym
xK_Georgian_in :: KeySym
xK_Georgian_kan :: KeySym
xK_Georgian_las :: KeySym
xK_Georgian_man :: KeySym
xK_Georgian_nar :: KeySym
xK_Georgian_on :: KeySym
xK_Georgian_par :: KeySym
xK_Georgian_zhar :: KeySym
xK_Georgian_rae :: KeySym
xK_Georgian_san :: KeySym
xK_Georgian_tar :: KeySym
xK_Georgian_un :: KeySym
xK_Georgian_phar :: KeySym
xK_Georgian_khar :: KeySym
xK_Georgian_ghan :: KeySym
xK_Georgian_qar :: KeySym
xK_Georgian_shin :: KeySym
xK_Georgian_chin :: KeySym
xK_Georgian_can :: KeySym
xK_Georgian_jil :: KeySym
xK_Georgian_cil :: KeySym
xK_Georgian_char :: KeySym
xK_Georgian_xan :: KeySym
xK_Georgian_jhan :: KeySym
xK_Georgian_hae :: KeySym
xK_Georgian_he :: KeySym
xK_Georgian_hie :: KeySym
xK_Georgian_we :: KeySym
xK_Georgian_har :: KeySym
xK_Georgian_hoe :: KeySym
xK_Georgian_fi :: KeySym
xK_Xabovedot :: KeySym
xK_Ibreve :: KeySym
xK_Zstroke :: KeySym
xK_Gcaron :: KeySym
xK_Ocaron :: KeySym
xK_Obarred :: KeySym
xK_xabovedot :: KeySym
xK_ibreve :: KeySym
xK_zstroke :: KeySym
xK_gcaron :: KeySym
xK_ocaron :: KeySym
xK_obarred :: KeySym
xK_SCHWA :: KeySym
xK_schwa :: KeySym
xK_Lbelowdot :: KeySym
xK_lbelowdot :: KeySym
xK_Abelowdot :: KeySym
xK_abelowdot :: KeySym
xK_Ahook :: KeySym
xK_ahook :: KeySym
xK_Acircumflexacute :: KeySym
xK_acircumflexacute :: KeySym
xK_Acircumflexgrave :: KeySym
xK_acircumflexgrave :: KeySym
xK_Acircumflexhook :: KeySym
xK_acircumflexhook :: KeySym
xK_Acircumflextilde :: KeySym
xK_acircumflextilde :: KeySym
xK_Acircumflexbelowdot :: KeySym
xK_acircumflexbelowdot :: KeySym
xK_Abreveacute :: KeySym
xK_abreveacute :: KeySym
xK_Abrevegrave :: KeySym
xK_abrevegrave :: KeySym
xK_Abrevehook :: KeySym
xK_abrevehook :: KeySym
xK_Abrevetilde :: KeySym
xK_abrevetilde :: KeySym
xK_Abrevebelowdot :: KeySym
xK_abrevebelowdot :: KeySym
xK_Ebelowdot :: KeySym
xK_ebelowdot :: KeySym
xK_Ehook :: KeySym
xK_ehook :: KeySym
xK_Etilde :: KeySym
xK_etilde :: KeySym
xK_Ecircumflexacute :: KeySym
xK_ecircumflexacute :: KeySym
xK_Ecircumflexgrave :: KeySym
xK_ecircumflexgrave :: KeySym
xK_Ecircumflexhook :: KeySym
xK_ecircumflexhook :: KeySym
xK_Ecircumflextilde :: KeySym
xK_ecircumflextilde :: KeySym
xK_Ecircumflexbelowdot :: KeySym
xK_ecircumflexbelowdot :: KeySym
xK_Ihook :: KeySym
xK_ihook :: KeySym
xK_Ibelowdot :: KeySym
xK_ibelowdot :: KeySym
xK_Obelowdot :: KeySym
xK_obelowdot :: KeySym
xK_Ohook :: KeySym
xK_ohook :: KeySym
xK_Ocircumflexacute :: KeySym
xK_ocircumflexacute :: KeySym
xK_Ocircumflexgrave :: KeySym
xK_ocircumflexgrave :: KeySym
xK_Ocircumflexhook :: KeySym
xK_ocircumflexhook :: KeySym
xK_Ocircumflextilde :: KeySym
xK_ocircumflextilde :: KeySym
xK_Ocircumflexbelowdot :: KeySym
xK_ocircumflexbelowdot :: KeySym
xK_Ohornacute :: KeySym
xK_ohornacute :: KeySym
xK_Ohorngrave :: KeySym
xK_ohorngrave :: KeySym
xK_Ohornhook :: KeySym
xK_ohornhook :: KeySym
xK_Ohorntilde :: KeySym
xK_ohorntilde :: KeySym
xK_Ohornbelowdot :: KeySym
xK_ohornbelowdot :: KeySym
xK_Ubelowdot :: KeySym
xK_ubelowdot :: KeySym
xK_Uhook :: KeySym
xK_uhook :: KeySym
xK_Uhornacute :: KeySym
xK_uhornacute :: KeySym
xK_Uhorngrave :: KeySym
xK_uhorngrave :: KeySym
xK_Uhornhook :: KeySym
xK_uhornhook :: KeySym
xK_Uhorntilde :: KeySym
xK_uhorntilde :: KeySym
xK_Uhornbelowdot :: KeySym
xK_uhornbelowdot :: KeySym
xK_Ybelowdot :: KeySym
xK_ybelowdot :: KeySym
xK_Yhook :: KeySym
xK_yhook :: KeySym
xK_Ytilde :: KeySym
xK_ytilde :: KeySym
xK_Ohorn :: KeySym
xK_ohorn :: KeySym
xK_Uhorn :: KeySym
xK_uhorn :: KeySym
xK_EcuSign :: KeySym
xK_ColonSign :: KeySym
xK_CruzeiroSign :: KeySym
xK_FFrancSign :: KeySym
xK_LiraSign :: KeySym
xK_MillSign :: KeySym
xK_NairaSign :: KeySym
xK_PesetaSign :: KeySym
xK_RupeeSign :: KeySym
xK_WonSign :: KeySym
xK_NewSheqelSign :: KeySym
xK_DongSign :: KeySym
xK_EuroSign :: KeySym
xK_zerosuperior :: KeySym
xK_foursuperior :: KeySym
xK_fivesuperior :: KeySym
xK_sixsuperior :: KeySym
xK_sevensuperior :: KeySym
xK_eightsuperior :: KeySym
xK_ninesuperior :: KeySym
xK_zerosubscript :: KeySym
xK_onesubscript :: KeySym
xK_twosubscript :: KeySym
xK_threesubscript :: KeySym
xK_foursubscript :: KeySym
xK_fivesubscript :: KeySym
xK_sixsubscript :: KeySym
xK_sevensubscript :: KeySym
xK_eightsubscript :: KeySym
xK_ninesubscript :: KeySym
xK_partdifferential :: KeySym
xK_emptyset :: KeySym
xK_elementof :: KeySym
xK_notelementof :: KeySym
xK_containsas :: KeySym
xK_squareroot :: KeySym
xK_cuberoot :: KeySym
xK_fourthroot :: KeySym
xK_dintegral :: KeySym
xK_tintegral :: KeySym
xK_because :: KeySym
xK_approxeq :: KeySym
xK_notapproxeq :: KeySym
xK_notidentical :: KeySym
xK_stricteq :: KeySym
xK_braille_dot_1 :: KeySym
xK_braille_dot_2 :: KeySym
xK_braille_dot_3 :: KeySym
xK_braille_dot_4 :: KeySym
xK_braille_dot_5 :: KeySym
xK_braille_dot_6 :: KeySym
xK_braille_dot_7 :: KeySym
xK_braille_dot_8 :: KeySym
xK_braille_dot_9 :: KeySym
xK_braille_dot_10 :: KeySym
xK_braille_blank :: KeySym
xK_braille_dots_1 :: KeySym
xK_braille_dots_2 :: KeySym
xK_braille_dots_12 :: KeySym
xK_braille_dots_3 :: KeySym
xK_braille_dots_13 :: KeySym
xK_braille_dots_23 :: KeySym
xK_braille_dots_123 :: KeySym
xK_braille_dots_4 :: KeySym
xK_braille_dots_14 :: KeySym
xK_braille_dots_24 :: KeySym
xK_braille_dots_124 :: KeySym
xK_braille_dots_34 :: KeySym
xK_braille_dots_134 :: KeySym
xK_braille_dots_234 :: KeySym
xK_braille_dots_1234 :: KeySym
xK_braille_dots_5 :: KeySym
xK_braille_dots_15 :: KeySym
xK_braille_dots_25 :: KeySym
xK_braille_dots_125 :: KeySym
xK_braille_dots_35 :: KeySym
xK_braille_dots_135 :: KeySym
xK_braille_dots_235 :: KeySym
xK_braille_dots_1235 :: KeySym
xK_braille_dots_45 :: KeySym
xK_braille_dots_145 :: KeySym
xK_braille_dots_245 :: KeySym
xK_braille_dots_1245 :: KeySym
xK_braille_dots_345 :: KeySym
xK_braille_dots_1345 :: KeySym
xK_braille_dots_2345 :: KeySym
xK_braille_dots_12345 :: KeySym
xK_braille_dots_6 :: KeySym
xK_braille_dots_16 :: KeySym
xK_braille_dots_26 :: KeySym
xK_braille_dots_126 :: KeySym
xK_braille_dots_36 :: KeySym
xK_braille_dots_136 :: KeySym
xK_braille_dots_236 :: KeySym
xK_braille_dots_1236 :: KeySym
xK_braille_dots_46 :: KeySym
xK_braille_dots_146 :: KeySym
xK_braille_dots_246 :: KeySym
xK_braille_dots_1246 :: KeySym
xK_braille_dots_346 :: KeySym
xK_braille_dots_1346 :: KeySym
xK_braille_dots_2346 :: KeySym
xK_braille_dots_12346 :: KeySym
xK_braille_dots_56 :: KeySym
xK_braille_dots_156 :: KeySym
xK_braille_dots_256 :: KeySym
xK_braille_dots_1256 :: KeySym
xK_braille_dots_356 :: KeySym
xK_braille_dots_1356 :: KeySym
xK_braille_dots_2356 :: KeySym
xK_braille_dots_12356 :: KeySym
xK_braille_dots_456 :: KeySym
xK_braille_dots_1456 :: KeySym
xK_braille_dots_2456 :: KeySym
xK_braille_dots_12456 :: KeySym
xK_braille_dots_3456 :: KeySym
xK_braille_dots_13456 :: KeySym
xK_braille_dots_23456 :: KeySym
xK_braille_dots_123456 :: KeySym
xK_braille_dots_7 :: KeySym
xK_braille_dots_17 :: KeySym
xK_braille_dots_27 :: KeySym
xK_braille_dots_127 :: KeySym
xK_braille_dots_37 :: KeySym
xK_braille_dots_137 :: KeySym
xK_braille_dots_237 :: KeySym
xK_braille_dots_1237 :: KeySym
xK_braille_dots_47 :: KeySym
xK_braille_dots_147 :: KeySym
xK_braille_dots_247 :: KeySym
xK_braille_dots_1247 :: KeySym
xK_braille_dots_347 :: KeySym
xK_braille_dots_1347 :: KeySym
xK_braille_dots_2347 :: KeySym
xK_braille_dots_12347 :: KeySym
xK_braille_dots_57 :: KeySym
xK_braille_dots_157 :: KeySym
xK_braille_dots_257 :: KeySym
xK_braille_dots_1257 :: KeySym
xK_braille_dots_357 :: KeySym
xK_braille_dots_1357 :: KeySym
xK_braille_dots_2357 :: KeySym
xK_braille_dots_12357 :: KeySym
xK_braille_dots_457 :: KeySym
xK_braille_dots_1457 :: KeySym
xK_braille_dots_2457 :: KeySym
xK_braille_dots_12457 :: KeySym
xK_braille_dots_3457 :: KeySym
xK_braille_dots_13457 :: KeySym
xK_braille_dots_23457 :: KeySym
xK_braille_dots_123457 :: KeySym
xK_braille_dots_67 :: KeySym
xK_braille_dots_167 :: KeySym
xK_braille_dots_267 :: KeySym
xK_braille_dots_1267 :: KeySym
xK_braille_dots_367 :: KeySym
xK_braille_dots_1367 :: KeySym
xK_braille_dots_2367 :: KeySym
xK_braille_dots_12367 :: KeySym
xK_braille_dots_467 :: KeySym
xK_braille_dots_1467 :: KeySym
xK_braille_dots_2467 :: KeySym
xK_braille_dots_12467 :: KeySym
xK_braille_dots_3467 :: KeySym
xK_braille_dots_13467 :: KeySym
xK_braille_dots_23467 :: KeySym
xK_braille_dots_123467 :: KeySym
xK_braille_dots_567 :: KeySym
xK_braille_dots_1567 :: KeySym
xK_braille_dots_2567 :: KeySym
xK_braille_dots_12567 :: KeySym
xK_braille_dots_3567 :: KeySym
xK_braille_dots_13567 :: KeySym
xK_braille_dots_23567 :: KeySym
xK_braille_dots_123567 :: KeySym
xK_braille_dots_4567 :: KeySym
xK_braille_dots_14567 :: KeySym
xK_braille_dots_24567 :: KeySym
xK_braille_dots_124567 :: KeySym
xK_braille_dots_34567 :: KeySym
xK_braille_dots_134567 :: KeySym
xK_braille_dots_234567 :: KeySym
xK_braille_dots_1234567 :: KeySym
xK_braille_dots_8 :: KeySym
xK_braille_dots_18 :: KeySym
xK_braille_dots_28 :: KeySym
xK_braille_dots_128 :: KeySym
xK_braille_dots_38 :: KeySym
xK_braille_dots_138 :: KeySym
xK_braille_dots_238 :: KeySym
xK_braille_dots_1238 :: KeySym
xK_braille_dots_48 :: KeySym
xK_braille_dots_148 :: KeySym
xK_braille_dots_248 :: KeySym
xK_braille_dots_1248 :: KeySym
xK_braille_dots_348 :: KeySym
xK_braille_dots_1348 :: KeySym
xK_braille_dots_2348 :: KeySym
xK_braille_dots_12348 :: KeySym
xK_braille_dots_58 :: KeySym
xK_braille_dots_158 :: KeySym
xK_braille_dots_258 :: KeySym
xK_braille_dots_1258 :: KeySym
xK_braille_dots_358 :: KeySym
xK_braille_dots_1358 :: KeySym
xK_braille_dots_2358 :: KeySym
xK_braille_dots_12358 :: KeySym
xK_braille_dots_458 :: KeySym
xK_braille_dots_1458 :: KeySym
xK_braille_dots_2458 :: KeySym
xK_braille_dots_12458 :: KeySym
xK_braille_dots_3458 :: KeySym
xK_braille_dots_13458 :: KeySym
xK_braille_dots_23458 :: KeySym
xK_braille_dots_123458 :: KeySym
xK_braille_dots_68 :: KeySym
xK_braille_dots_168 :: KeySym
xK_braille_dots_268 :: KeySym
xK_braille_dots_1268 :: KeySym
xK_braille_dots_368 :: KeySym
xK_braille_dots_1368 :: KeySym
xK_braille_dots_2368 :: KeySym
xK_braille_dots_12368 :: KeySym
xK_braille_dots_468 :: KeySym
xK_braille_dots_1468 :: KeySym
xK_braille_dots_2468 :: KeySym
xK_braille_dots_12468 :: KeySym
xK_braille_dots_3468 :: KeySym
xK_braille_dots_13468 :: KeySym
xK_braille_dots_23468 :: KeySym
xK_braille_dots_123468 :: KeySym
xK_braille_dots_568 :: KeySym
xK_braille_dots_1568 :: KeySym
xK_braille_dots_2568 :: KeySym
xK_braille_dots_12568 :: KeySym
xK_braille_dots_3568 :: KeySym
xK_braille_dots_13568 :: KeySym
xK_braille_dots_23568 :: KeySym
xK_braille_dots_123568 :: KeySym
xK_braille_dots_4568 :: KeySym
xK_braille_dots_14568 :: KeySym
xK_braille_dots_24568 :: KeySym
xK_braille_dots_124568 :: KeySym
xK_braille_dots_34568 :: KeySym
xK_braille_dots_134568 :: KeySym
xK_braille_dots_234568 :: KeySym
xK_braille_dots_1234568 :: KeySym
xK_braille_dots_78 :: KeySym
xK_braille_dots_178 :: KeySym
xK_braille_dots_278 :: KeySym
xK_braille_dots_1278 :: KeySym
xK_braille_dots_378 :: KeySym
xK_braille_dots_1378 :: KeySym
xK_braille_dots_2378 :: KeySym
xK_braille_dots_12378 :: KeySym
xK_braille_dots_478 :: KeySym
xK_braille_dots_1478 :: KeySym
xK_braille_dots_2478 :: KeySym
xK_braille_dots_12478 :: KeySym
xK_braille_dots_3478 :: KeySym
xK_braille_dots_13478 :: KeySym
xK_braille_dots_23478 :: KeySym
xK_braille_dots_123478 :: KeySym
xK_braille_dots_578 :: KeySym
xK_braille_dots_1578 :: KeySym
xK_braille_dots_2578 :: KeySym
xK_braille_dots_12578 :: KeySym
xK_braille_dots_3578 :: KeySym
xK_braille_dots_13578 :: KeySym
xK_braille_dots_23578 :: KeySym
xK_braille_dots_123578 :: KeySym
xK_braille_dots_4578 :: KeySym
xK_braille_dots_14578 :: KeySym
xK_braille_dots_24578 :: KeySym
xK_braille_dots_124578 :: KeySym
xK_braille_dots_34578 :: KeySym
xK_braille_dots_134578 :: KeySym
xK_braille_dots_234578 :: KeySym
xK_braille_dots_1234578 :: KeySym
xK_braille_dots_678 :: KeySym
xK_braille_dots_1678 :: KeySym
xK_braille_dots_2678 :: KeySym
xK_braille_dots_12678 :: KeySym
xK_braille_dots_3678 :: KeySym
xK_braille_dots_13678 :: KeySym
xK_braille_dots_23678 :: KeySym
xK_braille_dots_123678 :: KeySym
xK_braille_dots_4678 :: KeySym
xK_braille_dots_14678 :: KeySym
xK_braille_dots_24678 :: KeySym
xK_braille_dots_124678 :: KeySym
xK_braille_dots_34678 :: KeySym
xK_braille_dots_134678 :: KeySym
xK_braille_dots_234678 :: KeySym
xK_braille_dots_1234678 :: KeySym
xK_braille_dots_5678 :: KeySym
xK_braille_dots_15678 :: KeySym
xK_braille_dots_25678 :: KeySym
xK_braille_dots_125678 :: KeySym
xK_braille_dots_35678 :: KeySym
xK_braille_dots_135678 :: KeySym
xK_braille_dots_235678 :: KeySym
xK_braille_dots_1235678 :: KeySym
xK_braille_dots_45678 :: KeySym
xK_braille_dots_145678 :: KeySym
xK_braille_dots_245678 :: KeySym
xK_braille_dots_1245678 :: KeySym
xK_braille_dots_345678 :: KeySym
xK_braille_dots_1345678 :: KeySym
xK_braille_dots_2345678 :: KeySym
xK_braille_dots_12345678 :: KeySym


-- | This file is generated based on X.org includes. It contains the
--   keysyms for XF86.
module Graphics.X11.ExtraTypes.XF86
xF86XK_ModeLock :: KeySym
xF86XK_MonBrightnessUp :: KeySym
xF86XK_MonBrightnessDown :: KeySym
xF86XK_KbdLightOnOff :: KeySym
xF86XK_KbdBrightnessUp :: KeySym
xF86XK_KbdBrightnessDown :: KeySym
xF86XK_Standby :: KeySym
xF86XK_AudioLowerVolume :: KeySym
xF86XK_AudioMute :: KeySym
xF86XK_AudioRaiseVolume :: KeySym
xF86XK_AudioPlay :: KeySym
xF86XK_AudioStop :: KeySym
xF86XK_AudioPrev :: KeySym
xF86XK_AudioNext :: KeySym
xF86XK_HomePage :: KeySym
xF86XK_Mail :: KeySym
xF86XK_Start :: KeySym
xF86XK_Search :: KeySym
xF86XK_AudioRecord :: KeySym
xF86XK_Calculator :: KeySym
xF86XK_Memo :: KeySym
xF86XK_ToDoList :: KeySym
xF86XK_Calendar :: KeySym
xF86XK_PowerDown :: KeySym
xF86XK_ContrastAdjust :: KeySym
xF86XK_RockerUp :: KeySym
xF86XK_RockerDown :: KeySym
xF86XK_RockerEnter :: KeySym
xF86XK_Back :: KeySym
xF86XK_Forward :: KeySym
xF86XK_Stop :: KeySym
xF86XK_Refresh :: KeySym
xF86XK_PowerOff :: KeySym
xF86XK_WakeUp :: KeySym
xF86XK_Eject :: KeySym
xF86XK_ScreenSaver :: KeySym
xF86XK_WWW :: KeySym
xF86XK_Sleep :: KeySym
xF86XK_Favorites :: KeySym
xF86XK_AudioPause :: KeySym
xF86XK_AudioMedia :: KeySym
xF86XK_MyComputer :: KeySym
xF86XK_VendorHome :: KeySym
xF86XK_LightBulb :: KeySym
xF86XK_Shop :: KeySym
xF86XK_History :: KeySym
xF86XK_OpenURL :: KeySym
xF86XK_AddFavorite :: KeySym
xF86XK_HotLinks :: KeySym
xF86XK_BrightnessAdjust :: KeySym
xF86XK_Finance :: KeySym
xF86XK_Community :: KeySym
xF86XK_AudioRewind :: KeySym
xF86XK_Launch0 :: KeySym
xF86XK_Launch1 :: KeySym
xF86XK_Launch2 :: KeySym
xF86XK_Launch3 :: KeySym
xF86XK_Launch4 :: KeySym
xF86XK_Launch5 :: KeySym
xF86XK_Launch6 :: KeySym
xF86XK_Launch7 :: KeySym
xF86XK_Launch8 :: KeySym
xF86XK_Launch9 :: KeySym
xF86XK_LaunchA :: KeySym
xF86XK_LaunchB :: KeySym
xF86XK_LaunchC :: KeySym
xF86XK_LaunchD :: KeySym
xF86XK_LaunchE :: KeySym
xF86XK_LaunchF :: KeySym
xF86XK_ApplicationLeft :: KeySym
xF86XK_ApplicationRight :: KeySym
xF86XK_Book :: KeySym
xF86XK_CD :: KeySym
xF86XK_Calculater :: KeySym
xF86XK_Clear :: KeySym
xF86XK_Close :: KeySym
xF86XK_Copy :: KeySym
xF86XK_Cut :: KeySym
xF86XK_Display :: KeySym
xF86XK_DOS :: KeySym
xF86XK_Documents :: KeySym
xF86XK_Excel :: KeySym
xF86XK_Explorer :: KeySym
xF86XK_Game :: KeySym
xF86XK_Go :: KeySym
xF86XK_iTouch :: KeySym
xF86XK_LogOff :: KeySym
xF86XK_Market :: KeySym
xF86XK_Meeting :: KeySym
xF86XK_MenuKB :: KeySym
xF86XK_MenuPB :: KeySym
xF86XK_MySites :: KeySym
xF86XK_New :: KeySym
xF86XK_News :: KeySym
xF86XK_OfficeHome :: KeySym
xF86XK_Open :: KeySym
xF86XK_Option :: KeySym
xF86XK_Paste :: KeySym
xF86XK_Phone :: KeySym
xF86XK_Q :: KeySym
xF86XK_Reply :: KeySym
xF86XK_Reload :: KeySym
xF86XK_RotateWindows :: KeySym
xF86XK_RotationPB :: KeySym
xF86XK_RotationKB :: KeySym
xF86XK_Save :: KeySym
xF86XK_ScrollUp :: KeySym
xF86XK_ScrollDown :: KeySym
xF86XK_ScrollClick :: KeySym
xF86XK_Send :: KeySym
xF86XK_Spell :: KeySym
xF86XK_SplitScreen :: KeySym
xF86XK_Support :: KeySym
xF86XK_TaskPane :: KeySym
xF86XK_Terminal :: KeySym
xF86XK_Tools :: KeySym
xF86XK_Travel :: KeySym
xF86XK_UserPB :: KeySym
xF86XK_User1KB :: KeySym
xF86XK_User2KB :: KeySym
xF86XK_Video :: KeySym
xF86XK_WheelButton :: KeySym
xF86XK_Word :: KeySym
xF86XK_Xfer :: KeySym
xF86XK_ZoomIn :: KeySym
xF86XK_ZoomOut :: KeySym
xF86XK_Away :: KeySym
xF86XK_Messenger :: KeySym
xF86XK_WebCam :: KeySym
xF86XK_MailForward :: KeySym
xF86XK_Pictures :: KeySym
xF86XK_Music :: KeySym
xF86XK_Battery :: KeySym
xF86XK_Bluetooth :: KeySym
xF86XK_WLAN :: KeySym
xF86XK_UWB :: KeySym
xF86XK_AudioForward :: KeySym
xF86XK_AudioRepeat :: KeySym
xF86XK_AudioRandomPlay :: KeySym
xF86XK_Subtitle :: KeySym
xF86XK_AudioCycleTrack :: KeySym
xF86XK_CycleAngle :: KeySym
xF86XK_FrameBack :: KeySym
xF86XK_FrameForward :: KeySym
xF86XK_Time :: KeySym
xF86XK_Select :: KeySym
xF86XK_View :: KeySym
xF86XK_TopMenu :: KeySym
xF86XK_Red :: KeySym
xF86XK_Green :: KeySym
xF86XK_Yellow :: KeySym
xF86XK_Blue :: KeySym
xF86XK_Suspend :: KeySym
xF86XK_Hibernate :: KeySym
xF86XK_TouchpadToggle :: KeySym
xF86XK_TouchpadOn :: KeySym
xF86XK_TouchpadOff :: KeySym
xF86XK_AudioMicMute :: KeySym
xF86XK_LogWindowTree :: KeySym
xF86XK_LogGrabInfo :: KeySym
xF86XK_Switch_VT_1 :: KeySym
xF86XK_Switch_VT_2 :: KeySym
xF86XK_Switch_VT_3 :: KeySym
xF86XK_Switch_VT_4 :: KeySym
xF86XK_Switch_VT_5 :: KeySym
xF86XK_Switch_VT_6 :: KeySym
xF86XK_Switch_VT_7 :: KeySym
xF86XK_Switch_VT_8 :: KeySym
xF86XK_Switch_VT_9 :: KeySym
xF86XK_Switch_VT_10 :: KeySym
xF86XK_Switch_VT_11 :: KeySym
xF86XK_Switch_VT_12 :: KeySym
xF86XK_Ungrab :: KeySym
xF86XK_ClearGrab :: KeySym
xF86XK_Next_VMode :: KeySym
xF86XK_Prev_VMode :: KeySym


-- | This file is generated based on X.org includes. It contains the
--   keysyms for Sun.
module Graphics.X11.ExtraTypes.Sun
sunXK_FA_Grave :: KeySym
sunXK_FA_Circum :: KeySym
sunXK_FA_Tilde :: KeySym
sunXK_FA_Acute :: KeySym
sunXK_FA_Diaeresis :: KeySym
sunXK_FA_Cedilla :: KeySym
sunXK_F36 :: KeySym
sunXK_F37 :: KeySym
sunXK_Sys_Req :: KeySym
sunXK_Print_Screen :: KeySym
sunXK_Compose :: KeySym
sunXK_AltGraph :: KeySym
sunXK_PageUp :: KeySym
sunXK_PageDown :: KeySym
sunXK_Undo :: KeySym
sunXK_Again :: KeySym
sunXK_Find :: KeySym
sunXK_Stop :: KeySym
sunXK_Props :: KeySym
sunXK_Front :: KeySym
sunXK_Copy :: KeySym
sunXK_Open :: KeySym
sunXK_Paste :: KeySym
sunXK_Cut :: KeySym
sunXK_PowerSwitch :: KeySym
sunXK_AudioLowerVolume :: KeySym
sunXK_AudioMute :: KeySym
sunXK_AudioRaiseVolume :: KeySym
sunXK_VideoDegauss :: KeySym
sunXK_VideoLowerBrightness :: KeySym
sunXK_VideoRaiseBrightness :: KeySym
sunXK_PowerSwitchShift :: KeySym

module Graphics.X11.ExtraTypes.HP
hpXK_ClearLine :: KeySym
hpXK_InsertLine :: KeySym
hpXK_DeleteLine :: KeySym
hpXK_InsertChar :: KeySym
hpXK_DeleteChar :: KeySym
hpXK_BackTab :: KeySym
hpXK_KP_BackTab :: KeySym
hpXK_Modelock1 :: KeySym
hpXK_Modelock2 :: KeySym
hpXK_Reset :: KeySym
hpXK_System :: KeySym
hpXK_User :: KeySym
hpXK_mute_acute :: KeySym
hpXK_mute_grave :: KeySym
hpXK_mute_asciicircum :: KeySym
hpXK_mute_diaeresis :: KeySym
hpXK_mute_asciitilde :: KeySym
hpXK_lira :: KeySym
hpXK_guilder :: KeySym
hpXK_Ydiaeresis :: KeySym
hpXK_IO :: KeySym
hpXK_longminus :: KeySym
hpXK_block :: KeySym
osfXK_Copy :: KeySym
osfXK_Cut :: KeySym
osfXK_Paste :: KeySym
osfXK_BackTab :: KeySym
osfXK_BackSpace :: KeySym
osfXK_Clear :: KeySym
osfXK_Escape :: KeySym
osfXK_AddMode :: KeySym
osfXK_PrimaryPaste :: KeySym
osfXK_QuickPaste :: KeySym
osfXK_PageLeft :: KeySym
osfXK_PageUp :: KeySym
osfXK_PageDown :: KeySym
osfXK_PageRight :: KeySym
osfXK_Activate :: KeySym
osfXK_MenuBar :: KeySym
osfXK_Left :: KeySym
osfXK_Up :: KeySym
osfXK_Right :: KeySym
osfXK_Down :: KeySym
osfXK_EndLine :: KeySym
osfXK_BeginLine :: KeySym
osfXK_EndData :: KeySym
osfXK_BeginData :: KeySym
osfXK_PrevMenu :: KeySym
osfXK_NextMenu :: KeySym
osfXK_PrevField :: KeySym
osfXK_NextField :: KeySym
osfXK_Select :: KeySym
osfXK_Insert :: KeySym
osfXK_Undo :: KeySym
osfXK_Menu :: KeySym
osfXK_Cancel :: KeySym
osfXK_Help :: KeySym
osfXK_SelectAll :: KeySym
osfXK_DeselectAll :: KeySym
osfXK_Reselect :: KeySym
osfXK_Extend :: KeySym
osfXK_Restore :: KeySym
osfXK_Delete :: KeySym
xK_Reset :: KeySym
xK_System :: KeySym
xK_User :: KeySym
xK_ClearLine :: KeySym
xK_InsertLine :: KeySym
xK_DeleteLine :: KeySym
xK_InsertChar :: KeySym
xK_DeleteChar :: KeySym
xK_BackTab :: KeySym
xK_KP_BackTab :: KeySym
xK_Ext16bit_L :: KeySym
xK_Ext16bit_R :: KeySym
xK_mute_acute :: KeySym
xK_mute_grave :: KeySym
xK_mute_asciicircum :: KeySym
xK_mute_diaeresis :: KeySym
xK_mute_asciitilde :: KeySym
xK_lira :: KeySym
xK_guilder :: KeySym
xK_IO :: KeySym
xK_longminus :: KeySym
xK_block :: KeySym


-- | This file is generated based on X.org includes. It contains the
--   keysyms for DEC.
module Graphics.X11.ExtraTypes.DEC
dXK_ring_accent :: KeySym
dXK_circumflex_accent :: KeySym
dXK_cedilla_accent :: KeySym
dXK_acute_accent :: KeySym
dXK_grave_accent :: KeySym
dXK_tilde :: KeySym
dXK_diaeresis :: KeySym
dXK_Remove :: KeySym


-- | This file is generated based on X.org includes. It contains the
--   keysyms for AP.
module Graphics.X11.ExtraTypes.AP
apXK_LineDel :: KeySym
apXK_CharDel :: KeySym
apXK_Copy :: KeySym
apXK_Cut :: KeySym
apXK_Paste :: KeySym
apXK_Move :: KeySym
apXK_Grow :: KeySym
apXK_Cmd :: KeySym
apXK_Shell :: KeySym
apXK_LeftBar :: KeySym
apXK_RightBar :: KeySym
apXK_LeftBox :: KeySym
apXK_RightBox :: KeySym
apXK_UpBox :: KeySym
apXK_DownBox :: KeySym
apXK_Pop :: KeySym
apXK_Read :: KeySym
apXK_Edit :: KeySym
apXK_Save :: KeySym
apXK_Exit :: KeySym
apXK_Repeat :: KeySym
apXK_KP_parenleft :: KeySym
apXK_KP_parenright :: KeySym


-- | Extra keysyms defined by X.org that may not be in other
--   implementations.
module Graphics.X11.ExtraTypes


-- | A collection of type declarations for interfacing with Xlib.
module Graphics.X11.Xlib.Types

-- | pointer to an X11 <tt>Display</tt> structure
newtype Display
Display :: Ptr Display -> Display

-- | pointer to an X11 <tt>Screen</tt> structure
newtype Screen
Screen :: Ptr Screen -> Screen

-- | pointer to an X11 <tt>Visual</tt> structure
newtype Visual
Visual :: Ptr Visual -> Visual

-- | pointer to an X11 <tt>GC</tt> structure
newtype GC
GC :: Ptr GC -> GC

-- | pointer to an X11 <tt>XGCValues</tt> structure
data GCValues

-- | pointer to an X11 <tt>XSetWindowAttributes</tt> structure
data SetWindowAttributes

-- | counterpart of an X11 <tt>XVisualInfo</tt> structure
data VisualInfo
VisualInfo :: Visual -> VisualID -> ScreenNumber -> CInt -> CInt -> CULong -> CULong -> CULong -> CInt -> CInt -> VisualInfo
[visualInfo_visual] :: VisualInfo -> Visual
[visualInfo_visualID] :: VisualInfo -> VisualID
[visualInfo_screen] :: VisualInfo -> ScreenNumber
[visualInfo_depth] :: VisualInfo -> CInt
[visualInfo_class] :: VisualInfo -> CInt
[visualInfo_redMask] :: VisualInfo -> CULong
[visualInfo_greenMask] :: VisualInfo -> CULong
[visualInfo_blueMask] :: VisualInfo -> CULong
[visualInfo_colormapSize] :: VisualInfo -> CInt
[visualInfo_bitsPerRGB] :: VisualInfo -> CInt

-- | pointer to an X11 <tt>XImage</tt> structure
newtype Image
Image :: Ptr Image -> Image

-- | counterpart of an X11 <tt>XPoint</tt> structure
data Point
Point :: !Position -> !Position -> Point
[pt_x] :: Point -> !Position
[pt_y] :: Point -> !Position

-- | counterpart of an X11 <tt>XRectangle</tt> structure
data Rectangle
Rectangle :: !Position -> !Position -> !Dimension -> !Dimension -> Rectangle
[rect_x] :: Rectangle -> !Position
[rect_y] :: Rectangle -> !Position
[rect_width] :: Rectangle -> !Dimension
[rect_height] :: Rectangle -> !Dimension

-- | counterpart of an X11 <tt>XArc</tt> structure
data Arc
Arc :: Position -> Position -> Dimension -> Dimension -> Angle -> Angle -> Arc
[arc_x] :: Arc -> Position
[arc_y] :: Arc -> Position
[arc_width] :: Arc -> Dimension
[arc_height] :: Arc -> Dimension
[arc_angle1] :: Arc -> Angle
[arc_angle2] :: Arc -> Angle

-- | counterpart of an X11 <tt>XSegment</tt> structure
data Segment
Segment :: Position -> Position -> Position -> Position -> Segment
[seg_x1] :: Segment -> Position
[seg_y1] :: Segment -> Position
[seg_x2] :: Segment -> Position
[seg_y2] :: Segment -> Position

-- | counterpart of an X11 <tt>XColor</tt> structure
data Color
Color :: Pixel -> Word16 -> Word16 -> Word16 -> Word8 -> Color
[color_pixel] :: Color -> Pixel
[color_red] :: Color -> Word16
[color_green] :: Color -> Word16
[color_blue] :: Color -> Word16
[color_flags] :: Color -> Word8
type Pixel = Word64
type Position = Int32
type Dimension = Word32
type Angle = CInt
type ScreenNumber = Word32
type Buffer = CInt
instance Data.Data.Data Graphics.X11.Xlib.Types.Display
instance GHC.Show.Show Graphics.X11.Xlib.Types.Display
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.Display
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Display
instance Data.Data.Data Graphics.X11.Xlib.Types.Screen
instance GHC.Show.Show Graphics.X11.Xlib.Types.Screen
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.Screen
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Screen
instance Data.Data.Data Graphics.X11.Xlib.Types.Visual
instance GHC.Show.Show Graphics.X11.Xlib.Types.Visual
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.Visual
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Visual
instance Data.Data.Data Graphics.X11.Xlib.Types.GC
instance GHC.Show.Show Graphics.X11.Xlib.Types.GC
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.GC
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.GC
instance Data.Data.Data Graphics.X11.Xlib.Types.GCValues
instance GHC.Show.Show Graphics.X11.Xlib.Types.GCValues
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.GCValues
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.GCValues
instance Data.Data.Data Graphics.X11.Xlib.Types.SetWindowAttributes
instance GHC.Show.Show Graphics.X11.Xlib.Types.SetWindowAttributes
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.SetWindowAttributes
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.SetWindowAttributes
instance Data.Data.Data Graphics.X11.Xlib.Types.Image
instance GHC.Show.Show Graphics.X11.Xlib.Types.Image
instance GHC.Classes.Ord Graphics.X11.Xlib.Types.Image
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Image
instance GHC.Show.Show Graphics.X11.Xlib.Types.VisualInfo
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.VisualInfo
instance Data.Data.Data Graphics.X11.Xlib.Types.Point
instance GHC.Show.Show Graphics.X11.Xlib.Types.Point
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Point
instance Data.Data.Data Graphics.X11.Xlib.Types.Rectangle
instance GHC.Show.Show Graphics.X11.Xlib.Types.Rectangle
instance GHC.Read.Read Graphics.X11.Xlib.Types.Rectangle
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Rectangle
instance GHC.Show.Show Graphics.X11.Xlib.Types.Arc
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Arc
instance Data.Data.Data Graphics.X11.Xlib.Types.Segment
instance GHC.Show.Show Graphics.X11.Xlib.Types.Segment
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Segment
instance Data.Data.Data Graphics.X11.Xlib.Types.Color
instance GHC.Show.Show Graphics.X11.Xlib.Types.Color
instance GHC.Classes.Eq Graphics.X11.Xlib.Types.Color
instance Foreign.Storable.Storable Graphics.X11.Xlib.Types.Color
instance Foreign.Storable.Storable Graphics.X11.Xlib.Types.Segment
instance Foreign.Storable.Storable Graphics.X11.Xlib.Types.Arc
instance Foreign.Storable.Storable Graphics.X11.Xlib.Types.Rectangle
instance Foreign.Storable.Storable Graphics.X11.Xlib.Types.Point
instance Data.Default.Class.Default Graphics.X11.Xlib.Types.VisualInfo
instance Foreign.Storable.Storable Graphics.X11.Xlib.Types.VisualInfo


-- | A collection of FFI declarations for interfacing with Xlib Screens.
module Graphics.X11.Xlib.Screen

-- | interface to the X11 library function <tt>XBlackPixelOfScreen()</tt>.
blackPixelOfScreen :: Screen -> Pixel

-- | interface to the X11 library function <tt>XWhitePixelOfScreen()</tt>.
whitePixelOfScreen :: Screen -> Pixel

-- | interface to the X11 library function <tt>XCellsOfScreen()</tt>.
cellsOfScreen :: Screen -> CInt

-- | interface to the X11 library function
--   <tt>XDefaultColormapOfScreen()</tt>.
defaultColormapOfScreen :: Screen -> Colormap

-- | interface to the X11 library function
--   <tt>XDefaultDepthOfScreen()</tt>.
defaultDepthOfScreen :: Screen -> CInt

-- | interface to the X11 library function <tt>XDefaultGCOfScreen()</tt>.
defaultGCOfScreen :: Screen -> GC

-- | interface to the X11 library function
--   <tt>XDefaultVisualOfScreen()</tt>.
defaultVisualOfScreen :: Screen -> Visual

-- | interface to the X11 library function <tt>XDoesBackingStore()</tt>.
doesBackingStore :: Screen -> Bool

-- | interface to the X11 library function <tt>XDoesSaveUnders()</tt>.
doesSaveUnders :: Screen -> Bool

-- | interface to the X11 library function <tt>XDisplayOfScreen()</tt>.
displayOfScreen :: Screen -> Display

-- | interface to the X11 library function <tt>XEventMaskOfScreen()</tt>.
--   Event mask at connection setup time - not current event mask!
eventMaskOfScreen :: Screen -> EventMask

-- | interface to the X11 library function <tt>XMinCmapsOfScreen()</tt>.
minCmapsOfScreen :: Screen -> CInt

-- | interface to the X11 library function <tt>XMaxCmapsOfScreen()</tt>.
maxCmapsOfScreen :: Screen -> CInt

-- | interface to the X11 library function <tt>XRootWindowOfScreen()</tt>.
rootWindowOfScreen :: Screen -> Window

-- | interface to the X11 library function <tt>XWidthOfScreen()</tt>.
widthOfScreen :: Screen -> Dimension

-- | interface to the X11 library function <tt>XWidthMMOfScreen()</tt>.
widthMMOfScreen :: Screen -> Dimension

-- | interface to the X11 library function <tt>XHeightOfScreen()</tt>.
heightOfScreen :: Screen -> Dimension

-- | interface to the X11 library function <tt>XHeightMMOfScreen()</tt>.
heightMMOfScreen :: Screen -> Dimension

-- | interface to the X11 library function <tt>XPlanesOfScreen()</tt>.
planesOfScreen :: Screen -> CInt

-- | interface to the X11 library function
--   <tt>XScreenNumberOfScreen()</tt>.
screenNumberOfScreen :: Screen -> ScreenNumber


-- | A collection of FFI declarations for interfacing with Xlib Regions.
module Graphics.X11.Xlib.Region
data Region
type RectInRegionResult = CInt
rectangleOut :: RectInRegionResult
rectangleIn :: RectInRegionResult
rectanglePart :: RectInRegionResult

-- | interface to the X11 library function <tt>XCreateRegion()</tt>.
createRegion :: IO Region

-- | interface to the X11 library function <tt>XPolygonRegion()</tt>.
polygonRegion :: [Point] -> FillRule -> IO Region

-- | interface to the X11 library function <tt>XIntersectRegion()</tt>.
intersectRegion :: Region -> Region -> Region -> IO CInt

-- | interface to the X11 library function <tt>XSubtractRegion()</tt>.
subtractRegion :: Region -> Region -> Region -> IO CInt

-- | interface to the X11 library function <tt>XUnionRectWithRegion()</tt>.
unionRectWithRegion :: Rectangle -> Region -> Region -> IO CInt

-- | interface to the X11 library function <tt>XUnionRegion()</tt>.
unionRegion :: Region -> Region -> Region -> IO CInt

-- | interface to the X11 library function <tt>XXorRegion()</tt>.
xorRegion :: Region -> Region -> Region -> IO CInt

-- | interface to the X11 library function <tt>XEmptyRegion()</tt>.
emptyRegion :: Region -> IO Bool

-- | interface to the X11 library function <tt>XEqualRegion()</tt>.
equalRegion :: Region -> Region -> IO Bool

-- | interface to the X11 library function <tt>XPointInRegion()</tt>.
pointInRegion :: Region -> Point -> IO Bool

-- | interface to the X11 library function <tt>XRectInRegion()</tt>.
rectInRegion :: Region -> Rectangle -> IO RectInRegionResult

-- | interface to the X11 library function <tt>XClipBox()</tt>.
clipBox :: Region -> IO (Rectangle, CInt)

-- | interface to the X11 library function <tt>XOffsetRegion()</tt>.
offsetRegion :: Region -> Point -> IO CInt

-- | interface to the X11 library function <tt>XShrinkRegion()</tt>.
shrinkRegion :: Region -> Point -> IO CInt

-- | interface to the X11 library function <tt>XSetRegion()</tt>.
setRegion :: Display -> GC -> Region -> IO CInt
instance Data.Data.Data Graphics.X11.Xlib.Region.Region
instance GHC.Show.Show Graphics.X11.Xlib.Region.Region
instance GHC.Classes.Ord Graphics.X11.Xlib.Region.Region
instance GHC.Classes.Eq Graphics.X11.Xlib.Region.Region


-- | Xlib image routines
module Graphics.X11.Xlib.Image

-- | pointer to an X11 <tt>XImage</tt> structure
data Image

-- | interface to the X11 library function <tt>XCreateImage()</tt>.
createImage :: Display -> Visual -> CInt -> ImageFormat -> CInt -> Ptr CChar -> Dimension -> Dimension -> CInt -> CInt -> IO Image

-- | interface to the X11 library function <tt>XPutImage()</tt>.
putImage :: Display -> Drawable -> GC -> Image -> Position -> Position -> Position -> Position -> Dimension -> Dimension -> IO ()

-- | interface to the X11 library function <tt>XDestroyImage()</tt>.
destroyImage :: Image -> IO ()

-- | interface to the X11 library function <tt>XGetImage()</tt>.
getImage :: Display -> Drawable -> CInt -> CInt -> CUInt -> CUInt -> CULong -> ImageFormat -> IO Image
xGetPixel :: Image -> CInt -> CInt -> IO CULong

-- | interface to the X11 library function <tt>XGetPixel()</tt>.
getPixel :: Image -> CInt -> CInt -> CULong


-- | A collection of FFI declarations for interfacing with Xlib Fonts.
module Graphics.X11.Xlib.Font
type Glyph = Word16

-- | interface to the X11 library function <tt>XQueryFont()</tt>.
queryFont :: Display -> Font -> IO FontStruct

-- | interface to the X11 library function <tt>XGetGCValues()</tt>.
fontFromGC :: Display -> GC -> IO Font

-- | interface to the X11 library function <tt>XLoadQueryFont()</tt>.
loadQueryFont :: Display -> String -> IO FontStruct

-- | interface to the X11 library function <tt>XFreeFont()</tt>.
freeFont :: Display -> FontStruct -> IO ()

-- | pointer to an X11 <tt>XFontStruct</tt> structure
data FontStruct
fontFromFontStruct :: FontStruct -> Font
ascentFromFontStruct :: FontStruct -> Int32
descentFromFontStruct :: FontStruct -> Int32
minBoundsFromFontStruct :: FontStruct -> CharStruct
maxBoundsFromFontStruct :: FontStruct -> CharStruct
type CharStruct = (CInt, CInt, CInt, CInt, CInt)

-- | interface to the X11 library function <tt>XTextExtents()</tt>.
textExtents :: FontStruct -> String -> (FontDirection, Int32, Int32, CharStruct)

-- | interface to the X11 library function <tt>XTextWidth()</tt>.
textWidth :: FontStruct -> String -> Int32
instance Data.Data.Data Graphics.X11.Xlib.Font.FontStruct
instance GHC.Show.Show Graphics.X11.Xlib.Font.FontStruct
instance GHC.Classes.Ord Graphics.X11.Xlib.Font.FontStruct
instance GHC.Classes.Eq Graphics.X11.Xlib.Font.FontStruct


-- | A collection of cursor types defined by
--   /usr<i>include</i>X11/cursorfont.h.
module Graphics.X11.Xlib.Cursor
xC_X_cursor :: Glyph
xC_arrow :: Glyph
xC_based_arrow_down :: Glyph
xC_based_arrow_up :: Glyph
xC_boat :: Glyph
xC_bogosity :: Glyph
xC_bottom_left_corner :: Glyph
xC_bottom_right_corner :: Glyph
xC_bottom_side :: Glyph
xC_bottom_tee :: Glyph
xC_box_spiral :: Glyph
xC_center_ptr :: Glyph
xC_circle :: Glyph
xC_clock :: Glyph
xC_coffee_mug :: Glyph
xC_cross :: Glyph
xC_cross_reverse :: Glyph
xC_crosshair :: Glyph
xC_diamond_cross :: Glyph
xC_dot :: Glyph
xC_dotbox :: Glyph
xC_double_arrow :: Glyph
xC_draft_large :: Glyph
xC_draft_small :: Glyph
xC_draped_box :: Glyph
xC_exchange :: Glyph
xC_fleur :: Glyph
xC_gobbler :: Glyph
xC_gumby :: Glyph
xC_hand1 :: Glyph
xC_hand2 :: Glyph
xC_heart :: Glyph
xC_icon :: Glyph
xC_iron_cross :: Glyph
xC_left_ptr :: Glyph
xC_left_side :: Glyph
xC_left_tee :: Glyph
xC_leftbutton :: Glyph
xC_ll_angle :: Glyph
xC_lr_angle :: Glyph
xC_man :: Glyph
xC_mouse :: Glyph
xC_pencil :: Glyph
xC_pirate :: Glyph
xC_plus :: Glyph
xC_question_arrow :: Glyph
xC_right_ptr :: Glyph
xC_right_side :: Glyph
xC_right_tee :: Glyph
xC_rightbutton :: Glyph
xC_rtl_logo :: Glyph
xC_sailboat :: Glyph
xC_sb_down_arrow :: Glyph
xC_sb_h_double_arrow :: Glyph
xC_sb_left_arrow :: Glyph
xC_sb_right_arrow :: Glyph
xC_sb_up_arrow :: Glyph
xC_sb_v_double_arrow :: Glyph
xC_shuttle :: Glyph
xC_sizing :: Glyph
xC_spider :: Glyph
xC_spraycan :: Glyph
xC_star :: Glyph
xC_target :: Glyph
xC_tcross :: Glyph
xC_top_left_arrow :: Glyph
xC_top_left_corner :: Glyph
xC_top_right_corner :: Glyph
xC_top_side :: Glyph
xC_top_tee :: Glyph
xC_trek :: Glyph
xC_ul_angle :: Glyph
xC_umbrella :: Glyph
xC_ur_angle :: Glyph
xC_watch :: Glyph
xC_xterm :: Glyph


-- | A collection of FFI declarations for interfacing with Xlib Displays.
module Graphics.X11.Xlib.Display

-- | interface to the X11 library function <tt>XAllPlanes()</tt>.
allPlanes_aux :: Pixel

-- | interface to the X11 library function <tt>XBlackPixel()</tt>.
blackPixel :: Display -> ScreenNumber -> Pixel

-- | interface to the X11 library function <tt>XWhitePixel()</tt>.
whitePixel :: Display -> ScreenNumber -> Pixel

-- | interface to the X11 library function <tt>XConnectionNumber()</tt>.
connectionNumber :: Display -> CInt

-- | interface to the X11 library function <tt>XDefaultColormap()</tt>.
defaultColormap :: Display -> ScreenNumber -> Colormap

-- | interface to the X11 library function <tt>XDefaultGC()</tt>.
defaultGC :: Display -> ScreenNumber -> GC

-- | interface to the X11 library function <tt>XDefaultDepth()</tt>.
defaultDepth :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XDefaultScreen()</tt>.
defaultScreen :: Display -> ScreenNumber

-- | interface to the X11 library function
--   <tt>XDefaultScreenOfDisplay()</tt>.
defaultScreenOfDisplay :: Display -> Screen

-- | interface to the X11 library function <tt>XDisplayHeight()</tt>.
displayHeight :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XDisplayHeightMM()</tt>.
displayHeightMM :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XDisplayWidth()</tt>.
displayWidth :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XDisplayWidthMM()</tt>.
displayWidthMM :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XMaxRequestSize()</tt>.
maxRequestSize :: Display -> CInt

-- | interface to the X11 library function
--   <tt>XDisplayMotionBufferSize()</tt>.
displayMotionBufferSize :: Display -> CInt

-- | interface to the X11 library function
--   <tt>XResourceManagerString()</tt>.
resourceManagerString :: Display -> String

-- | interface to the X11 library function
--   <tt>XScreenResourceString()</tt>.
screenResourceString :: Screen -> String

-- | interface to the X11 library function <tt>XDisplayString()</tt>.
displayString :: Display -> String

-- | interface to the X11 library function <tt>XImageByteOrder()</tt>.
imageByteOrder :: Display -> CInt

-- | interface to the X11 library function <tt>XProtocolRevision()</tt>.
protocolRevision :: Display -> CInt

-- | interface to the X11 library function <tt>XProtocolVersion()</tt>.
protocolVersion :: Display -> CInt

-- | interface to the X11 library function <tt>XServerVendor()</tt>.
serverVendor :: Display -> String

-- | interface to the X11 library function <tt>XScreenCount()</tt>.
screenCount :: Display -> CInt

-- | interface to the X11 library function <tt>XDefaultVisual()</tt>.
defaultVisual :: Display -> ScreenNumber -> Visual

-- | interface to the X11 library function <tt>XDisplayCells()</tt>.
displayCells :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XDisplayPlanes()</tt>.
displayPlanes :: Display -> ScreenNumber -> CInt

-- | interface to the X11 library function <tt>XScreenOfDisplay()</tt>.
screenOfDisplay :: Display -> ScreenNumber -> Screen

-- | interface to the X11 library function <tt>XDefaultRootWindow()</tt>.
defaultRootWindow :: Display -> Window

-- | interface to the X11 library function <tt>XRootWindow()</tt>.
rootWindow :: Display -> ScreenNumber -> IO Window

-- | interface to the X11 library function <tt>XQLength()</tt>.
qLength :: Display -> IO CInt

-- | interface to the X11 library function <tt>XNoOp()</tt>.
noOp :: Display -> IO ()

-- | interface to the X11 library function <tt>XOpenDisplay()</tt>.
openDisplay :: String -> IO Display

-- | interface to the X11 library function <tt>XCloseDisplay()</tt>.
closeDisplay :: Display -> IO ()


-- | A collection of FFI declarations for interfacing with Xlib Events.
module Graphics.X11.Xlib.Event
type QueuedMode = CInt
queuedAlready :: QueuedMode
queuedAfterFlush :: QueuedMode
queuedAfterReading :: QueuedMode
newtype XEvent
XEvent :: XEventPtr -> XEvent
type XEventPtr = Ptr XEvent
allocaXEvent :: (XEventPtr -> IO a) -> IO a
get_EventType :: XEventPtr -> IO EventType
get_Window :: XEventPtr -> IO Window
type XKeyEvent = (Window, Window, Time, CInt, CInt, CInt, CInt, Modifier, KeyCode, Bool)
type XKeyEventPtr = Ptr XKeyEvent
asKeyEvent :: XEventPtr -> XKeyEventPtr
type XButtonEvent = (Window, Window, Time, CInt, CInt, CInt, CInt, Modifier, Button, Bool)
get_KeyEvent :: XEventPtr -> IO XKeyEvent
get_ButtonEvent :: XEventPtr -> IO XButtonEvent
get_MotionEvent :: XEventPtr -> IO XMotionEvent
type XMotionEvent = (Window, Window, Time, CInt, CInt, CInt, CInt, Modifier, NotifyMode, Bool)
type XExposeEvent = (Position, Position, Dimension, Dimension, CInt)
get_ExposeEvent :: XEventPtr -> IO XExposeEvent
type XMappingEvent = (MappingRequest, KeyCode, CInt)
type XConfigureEvent = (Position, Position, Dimension, Dimension)
get_ConfigureEvent :: XEventPtr -> IO XConfigureEvent

-- | Reads an event with a timeout (in microseconds). Returns True if
--   timeout occurs.
waitForEvent :: Display -> Word32 -> IO Bool

-- | This function is somewhat compatible with Win32's
--   <tt>TimeGetTime()</tt>
gettimeofday_in_milliseconds :: IO Integer

-- | interface to the X11 library function <tt>XFlush()</tt>.
flush :: Display -> IO ()

-- | interface to the X11 library function <tt>XSync()</tt>.
sync :: Display -> Bool -> IO ()

-- | interface to the X11 library function <tt>XPending()</tt>.
pending :: Display -> IO CInt

-- | interface to the X11 library function <tt>XEventsQueued()</tt>.
eventsQueued :: Display -> QueuedMode -> IO CInt

-- | interface to the X11 library function <tt>XNextEvent()</tt>.
nextEvent :: Display -> XEventPtr -> IO ()

-- | interface to the X11 library function <tt>XAllowEvents()</tt>.
allowEvents :: Display -> AllowEvents -> Time -> IO ()

-- | interface to the X11 library function <tt>XSelectInput()</tt>.
selectInput :: Display -> Window -> EventMask -> IO ()

-- | interface to the X11 library function <tt>XSendEvent()</tt>.
sendEvent :: Display -> Window -> Bool -> EventMask -> XEventPtr -> IO ()

-- | interface to the X11 library function <tt>XWindowEvent()</tt>.
windowEvent :: Display -> Window -> EventMask -> XEventPtr -> IO ()

-- | interface to the X11 library function <tt>XCheckWindowEvent()</tt>.
checkWindowEvent :: Display -> Window -> EventMask -> XEventPtr -> IO Bool

-- | interface to the X11 library function <tt>XMaskEvent()</tt>.
maskEvent :: Display -> EventMask -> XEventPtr -> IO ()

-- | interface to the X11 library function <tt>XCheckMaskEvent()</tt>.
checkMaskEvent :: Display -> EventMask -> XEventPtr -> IO Bool

-- | interface to the X11 library function <tt>XCheckTypedEvent()</tt>.
checkTypedEvent :: Display -> EventType -> XEventPtr -> IO Bool

-- | interface to the X11 library function
--   <tt>XCheckTypedWindowEvent()</tt>.
checkTypedWindowEvent :: Display -> Window -> EventType -> XEventPtr -> IO Bool

-- | interface to the X11 library function <tt>XPutBackEvent()</tt>.
putBackEvent :: Display -> XEventPtr -> IO ()

-- | interface to the X11 library function <tt>XPeekEvent()</tt>.
peekEvent :: Display -> XEventPtr -> IO ()

-- | interface to the X11 library function
--   <tt>XRefreshKeyboardMapping()</tt>.
refreshKeyboardMapping :: XMappingEvent -> IO ()
instance Data.Data.Data Graphics.X11.Xlib.Event.XEvent
instance GHC.Show.Show Graphics.X11.Xlib.Event.XEvent
instance GHC.Classes.Ord Graphics.X11.Xlib.Event.XEvent
instance GHC.Classes.Eq Graphics.X11.Xlib.Event.XEvent
instance Data.Data.Data Graphics.X11.Xlib.Event.FdSet
instance GHC.Show.Show Graphics.X11.Xlib.Event.FdSet
instance GHC.Classes.Ord Graphics.X11.Xlib.Event.FdSet
instance GHC.Classes.Eq Graphics.X11.Xlib.Event.FdSet
instance Data.Data.Data Graphics.X11.Xlib.Event.TimeZone
instance GHC.Show.Show Graphics.X11.Xlib.Event.TimeZone
instance GHC.Classes.Ord Graphics.X11.Xlib.Event.TimeZone
instance GHC.Classes.Eq Graphics.X11.Xlib.Event.TimeZone
instance Foreign.Storable.Storable Graphics.X11.Xlib.Event.TimeVal


-- | A collection of FFI declarations for interfacing with Xlib Graphics
--   Contexts.
module Graphics.X11.Xlib.Context

-- | interface to the X11 library function <tt>XSetArcMode()</tt>.
setArcMode :: Display -> GC -> ArcMode -> IO ()

-- | interface to the X11 library function <tt>XSetBackground()</tt>.
setBackground :: Display -> GC -> Pixel -> IO ()

-- | interface to the X11 library function <tt>XSetForeground()</tt>.
setForeground :: Display -> GC -> Pixel -> IO ()

-- | interface to the X11 library function <tt>XSetFunction()</tt>.
setFunction :: Display -> GC -> GXFunction -> IO ()

-- | interface to the X11 library function
--   <tt>XSetGraphicsExposures()</tt>.
setGraphicsExposures :: Display -> GC -> Bool -> IO ()

-- | interface to the X11 library function <tt>XSetClipMask()</tt>.
setClipMask :: Display -> GC -> Pixmap -> IO ()

-- | interface to the X11 library function <tt>XSetClipOrigin()</tt>.
setClipOrigin :: Display -> GC -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XSetDashes()</tt>.
setDashes :: Display -> GC -> CInt -> String -> CInt -> IO ()

-- | interface to the X11 library function <tt>XSetFillRule()</tt>.
setFillRule :: Display -> GC -> FillRule -> IO ()

-- | interface to the X11 library function <tt>XSetFillStyle()</tt>.
setFillStyle :: Display -> GC -> FillStyle -> IO ()

-- | interface to the X11 library function <tt>XSetFont()</tt>.
setFont :: Display -> GC -> Font -> IO ()

-- | interface to the X11 library function <tt>XSetLineAttributes()</tt>.
setLineAttributes :: Display -> GC -> CInt -> LineStyle -> CapStyle -> JoinStyle -> IO ()

-- | interface to the X11 library function <tt>XSetPlaneMask()</tt>.
setPlaneMask :: Display -> GC -> Pixel -> IO ()

-- | interface to the X11 library function <tt>XSetState()</tt>.
setState :: Display -> GC -> Pixel -> Pixel -> GXFunction -> Pixel -> IO ()

-- | interface to the X11 library function <tt>XSetStipple()</tt>.
setStipple :: Display -> GC -> Pixmap -> IO ()

-- | interface to the X11 library function <tt>XSetSubwindowMode()</tt>.
setSubwindowMode :: Display -> GC -> SubWindowMode -> IO ()

-- | interface to the X11 library function <tt>XSetTSOrigin()</tt>.
setTSOrigin :: Display -> GC -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XSetTile()</tt>.
setTile :: Display -> GC -> Pixmap -> IO ()

-- | partial interface to the X11 library function <tt>XCreateGC()</tt>.
createGC :: Display -> Drawable -> IO GC

-- | interface to the X11 library function <tt>XGContextFromGC()</tt>.
gContextFromGC :: GC -> GContext

-- | interface to the X11 library function <tt>XFreeGC()</tt>.
freeGC :: Display -> GC -> IO ()

-- | interface to the X11 library function <tt>XFlushGC()</tt>.
flushGC :: Display -> GC -> IO ()

-- | interface to the X11 library function <tt>XCopyGC()</tt>.
copyGC :: Display -> GC -> Mask -> GC -> IO ()


-- | A collection of FFI declarations for interfacing with Xlib Colors.
module Graphics.X11.Xlib.Color

-- | interface to the X11 library function <tt>XLookupColor()</tt>.
lookupColor :: Display -> Colormap -> String -> IO (Color, Color)

-- | interface to the X11 library function <tt>XAllocNamedColor()</tt>.
allocNamedColor :: Display -> Colormap -> String -> IO (Color, Color)

-- | interface to the X11 library function <tt>XAllocColor()</tt>.
allocColor :: Display -> Colormap -> Color -> IO Color

-- | interface to the X11 library function <tt>XParseColor()</tt>.
parseColor :: Display -> Colormap -> String -> IO Color

-- | interface to the X11 library function <tt>XFreeColors()</tt>.
freeColors :: Display -> Colormap -> [Pixel] -> Pixel -> IO ()

-- | interface to the X11 library function <tt>XStoreColor()</tt>.
storeColor :: Display -> Colormap -> Color -> IO ()

-- | interface to the X11 library function <tt>XQueryColor()</tt>.
queryColor :: Display -> Colormap -> Color -> IO Color

-- | interface to the X11 library function <tt>XQueryColors()</tt>.
queryColors :: Display -> Colormap -> [Color] -> IO [Color]

-- | interface to the X11 library function <tt>XInstallColormap()</tt>.
installColormap :: Display -> Colormap -> IO ()

-- | interface to the X11 library function <tt>XUninstallColormap()</tt>.
uninstallColormap :: Display -> Colormap -> IO ()

-- | interface to the X11 library function <tt>XCopyColormapAndFree()</tt>.
copyColormapAndFree :: Display -> Colormap -> IO Colormap

-- | interface to the X11 library function <tt>XCreateColormap()</tt>.
createColormap :: Display -> Window -> Visual -> ColormapAlloc -> IO Colormap

-- | interface to the X11 library function <tt>XFreeColormap()</tt>.
freeColormap :: Display -> Colormap -> IO ()


-- | A collection of type declarations for interfacing with X11 Atoms.
module Graphics.X11.Xlib.Atom

-- | interface to the X11 library function <tt>XInternAtom()</tt>.
internAtom :: Display -> String -> Bool -> IO Atom
getAtomName :: Display -> Atom -> IO (Maybe String)
getAtomNames :: Display -> [Atom] -> IO [String]
pRIMARY :: Atom
sECONDARY :: Atom
aRC :: Atom
aTOM :: Atom
bITMAP :: Atom
cARDINAL :: Atom
cOLORMAP :: Atom
cURSOR :: Atom
cUT_BUFFER0 :: Atom
cUT_BUFFER1 :: Atom
cUT_BUFFER2 :: Atom
cUT_BUFFER3 :: Atom
cUT_BUFFER4 :: Atom
cUT_BUFFER5 :: Atom
cUT_BUFFER6 :: Atom
cUT_BUFFER7 :: Atom
dRAWABLE :: Atom
fONT :: Atom
iNTEGER :: Atom
pIXMAP :: Atom
pOINT :: Atom
rECTANGLE :: Atom
rESOURCE_MANAGER :: Atom
rGB_COLOR_MAP :: Atom
rGB_BEST_MAP :: Atom
rGB_BLUE_MAP :: Atom
rGB_DEFAULT_MAP :: Atom
rGB_GRAY_MAP :: Atom
rGB_GREEN_MAP :: Atom
rGB_RED_MAP :: Atom
sTRING :: Atom
vISUALID :: Atom
wINDOW :: Atom
wM_COMMAND :: Atom
wM_HINTS :: Atom
wM_CLIENT_MACHINE :: Atom
wM_ICON_NAME :: Atom
wM_ICON_SIZE :: Atom
wM_NAME :: Atom
wM_NORMAL_HINTS :: Atom
wM_SIZE_HINTS :: Atom
wM_ZOOM_HINTS :: Atom
mIN_SPACE :: Atom
nORM_SPACE :: Atom
mAX_SPACE :: Atom
eND_SPACE :: Atom
sUPERSCRIPT_X :: Atom
sUPERSCRIPT_Y :: Atom
sUBSCRIPT_X :: Atom
sUBSCRIPT_Y :: Atom
uNDERLINE_POSITION :: Atom
uNDERLINE_THICKNESS :: Atom
sTRIKEOUT_ASCENT :: Atom
sTRIKEOUT_DESCENT :: Atom
iTALIC_ANGLE :: Atom
x_HEIGHT :: Atom
qUAD_WIDTH :: Atom
wEIGHT :: Atom
pOINT_SIZE :: Atom
rESOLUTION :: Atom
cOPYRIGHT :: Atom
nOTICE :: Atom
fONT_NAME :: Atom
fAMILY_NAME :: Atom
fULL_NAME :: Atom
cAP_HEIGHT :: Atom
wM_CLASS :: Atom
wM_TRANSIENT_FOR :: Atom
lAST_PREDEFINED :: Atom


-- | A collection of FFI declarations for interfacing with Xlib.
module Graphics.X11.Xlib.Misc

-- | interface to the X11 library function <tt>XrmInitialize()</tt>.
rmInitialize :: IO ()

-- | interface to the X11 library function <tt>XAutoRepeatOff()</tt>.
autoRepeatOff :: Display -> IO ()

-- | interface to the X11 library function <tt>XAutoRepeatOn()</tt>.
autoRepeatOn :: Display -> IO ()

-- | interface to the X11 library function <tt>XBell()</tt>.
bell :: Display -> CInt -> IO ()

-- | interface to the X11 library function <tt>XSetCloseDownMode()</tt>.
setCloseDownMode :: Display -> CloseDownMode -> IO ()

-- | interface to the X11 library function
--   <tt>XLastKnownRequestProcessed()</tt>.
lastKnownRequestProcessed :: Display -> IO CInt

-- | interface to the X11 library function <tt>XGetInputFocus()</tt>.
getInputFocus :: Display -> IO (Window, FocusMode)

-- | interface to the X11 library function <tt>XSetInputFocus()</tt>.
setInputFocus :: Display -> Window -> FocusMode -> Time -> IO ()

-- | interface to the X11 library function <tt>XGrabButton()</tt>.
grabButton :: Display -> Button -> ButtonMask -> Window -> Bool -> EventMask -> GrabMode -> GrabMode -> Window -> Cursor -> IO ()

-- | interface to the X11 library function <tt>XUngrabButton()</tt>.
ungrabButton :: Display -> Button -> ButtonMask -> Window -> IO ()

-- | interface to the X11 library function <tt>XGrabPointer()</tt>.
grabPointer :: Display -> Window -> Bool -> EventMask -> GrabMode -> GrabMode -> Window -> Cursor -> Time -> IO GrabStatus

-- | interface to the X11 library function <tt>XUngrabPointer()</tt>.
ungrabPointer :: Display -> Time -> IO ()

-- | interface to the X11 library function <tt>XGrabKey()</tt>.
grabKey :: Display -> KeyCode -> KeyMask -> Window -> Bool -> GrabMode -> GrabMode -> IO ()

-- | interface to the X11 library function <tt>XUngrabKey()</tt>.
ungrabKey :: Display -> KeyCode -> KeyMask -> Window -> IO ()

-- | interface to the X11 library function <tt>XGrabKeyboard()</tt>.
grabKeyboard :: Display -> Window -> Bool -> GrabMode -> GrabMode -> Time -> IO GrabStatus

-- | interface to the X11 library function <tt>XUngrabKeyboard()</tt>.
ungrabKeyboard :: Display -> Time -> IO ()

-- | interface to the X11 library function <tt>XGrabServer()</tt>.
grabServer :: Display -> IO ()

-- | interface to the X11 library function <tt>XUngrabServer()</tt>.
ungrabServer :: Display -> IO ()

-- | interface to the X11 library function <tt>XQueryBestTile()</tt>.
queryBestTile :: Display -> Drawable -> Dimension -> Dimension -> IO (Dimension, Dimension)

-- | interface to the X11 library function <tt>XQueryBestStipple()</tt>.
queryBestStipple :: Display -> Drawable -> Dimension -> Dimension -> IO (Dimension, Dimension)

-- | interface to the X11 library function <tt>XQueryBestCursor()</tt>.
queryBestCursor :: Display -> Drawable -> Dimension -> Dimension -> IO (Dimension, Dimension)

-- | interface to the X11 library function <tt>XQueryBestSize()</tt>.
queryBestSize :: Display -> QueryBestSizeClass -> Drawable -> Dimension -> Dimension -> IO (Dimension, Dimension)

-- | interface to the X11 library function <tt>XQueryPointer()</tt>.
queryPointer :: Display -> Window -> IO (Bool, Window, Window, CInt, CInt, CInt, CInt, Modifier)

-- | interface to the X11 library function <tt>XDisplayName()</tt>.
displayName :: String -> String

-- | The Xlib library reports most errors by invoking a user-provided error
--   handler. This function installs an error handler that prints a textual
--   representation of the error.
setDefaultErrorHandler :: IO ()

-- | interface to the X11 library function <tt>XGeometry()</tt>.
geometry :: Display -> CInt -> String -> String -> Dimension -> Dimension -> Dimension -> CInt -> CInt -> IO (CInt, Position, Position, Dimension, Dimension)

-- | interface to the X11 library function <tt>XGetGeometry()</tt>.
getGeometry :: Display -> Drawable -> IO (Window, Position, Position, Dimension, Dimension, Dimension, CInt)

-- | interface to the X11 library function <tt>XSupportsLocale()</tt>.
supportsLocale :: IO Bool

-- | interface to the X11 library function <tt>XSetLocaleModifiers()</tt>.
setLocaleModifiers :: String -> IO String
type AllowExposuresMode = CInt
dontAllowExposures :: AllowExposuresMode
allowExposures :: AllowExposuresMode
defaultExposures :: AllowExposuresMode
type PreferBlankingMode = CInt
dontPreferBlanking :: PreferBlankingMode
preferBlanking :: PreferBlankingMode
defaultBlanking :: PreferBlankingMode
type ScreenSaverMode = CInt
screenSaverActive :: ScreenSaverMode
screenSaverReset :: ScreenSaverMode
getScreenSaver :: Display -> IO (CInt, CInt, PreferBlankingMode, AllowExposuresMode)

-- | interface to the X11 library function <tt>XSetScreenSaver()</tt>.
setScreenSaver :: Display -> CInt -> CInt -> PreferBlankingMode -> AllowExposuresMode -> IO ()

-- | interface to the X11 library function <tt>XActivateScreenSaver()</tt>.
activateScreenSaver :: Display -> IO ()

-- | interface to the X11 library function <tt>XResetScreenSaver()</tt>.
resetScreenSaver :: Display -> IO ()

-- | interface to the X11 library function <tt>XForceScreenSaver()</tt>.
forceScreenSaver :: Display -> ScreenSaverMode -> IO ()

-- | interface to the X11 library function <tt>XGetPointerControl()</tt>.
getPointerControl :: Display -> IO (CInt, CInt, CInt)

-- | interface to the X11 library function <tt>XWarpPointer()</tt>.
warpPointer :: Display -> Window -> Window -> Position -> Position -> Dimension -> Dimension -> Position -> Position -> IO ()

-- | see <tt>XVisualIDFromVisual()</tt>
visualIDFromVisual :: Visual -> IO VisualID
type VisualInfoMask = CLong
visualNoMask :: VisualInfoMask
visualIDMask :: VisualInfoMask
visualScreenMask :: VisualInfoMask
visualDepthMask :: VisualInfoMask
visualClassMask :: VisualInfoMask
visualRedMaskMask :: VisualInfoMask
visualGreenMaskMask :: VisualInfoMask

-- | interface to the X11 library function <tt>XGetVisualInfo()</tt>
visualBlueMaskMask :: VisualInfoMask
visualColormapSizeMask :: VisualInfoMask
visualBitsPerRGBMask :: VisualInfoMask
visualAllMask :: VisualInfoMask
getVisualInfo :: Display -> VisualInfoMask -> VisualInfo -> IO [VisualInfo]

-- | interface to the X11 library function <tt>XMatchVisualInfo()</tt>
matchVisualInfo :: Display -> ScreenNumber -> CInt -> CInt -> IO (Maybe VisualInfo)
initThreads :: IO Status
lockDisplay :: Display -> IO ()
unlockDisplay :: Display -> IO ()

-- | interface to the X11 library function <tt>XCreatePixmap()</tt>.
createPixmap :: Display -> Drawable -> Dimension -> Dimension -> CInt -> IO Pixmap

-- | interface to the X11 library function <tt>XFreePixmap()</tt>.
freePixmap :: Display -> Pixmap -> IO ()

-- | interface to the X11 library function <tt>XBitmapBitOrder()</tt>.
bitmapBitOrder :: Display -> ByteOrder

-- | interface to the X11 library function <tt>XBitmapUnit()</tt>.
bitmapUnit :: Display -> CInt

-- | interface to the X11 library function <tt>XBitmapPad()</tt>.
bitmapPad :: Display -> CInt

-- | interface to the X11 library function <tt>XReadBitmapFile</tt>.
readBitmapFile :: Display -> Drawable -> String -> IO (Either String (Dimension, Dimension, Pixmap, Maybe CInt, Maybe CInt))

-- | interface to the X11 library function <tt>XDisplayKeycodes()</tt>.
displayKeycodes :: Display -> (CInt, CInt)

-- | interface to the X11 library function <tt>XLookupKeysym()</tt>.
lookupKeysym :: XKeyEventPtr -> CInt -> IO KeySym

-- | interface to the X11 library function <tt>XKeycodeToKeysym()</tt>.
keycodeToKeysym :: Display -> KeyCode -> CInt -> IO KeySym

-- | interface to the X11 library function <tt>XKeysymToKeycode()</tt>.
keysymToKeycode :: Display -> KeySym -> IO KeyCode

-- | interface to the X11 library function <tt>XKeysymToString()</tt>.
keysymToString :: KeySym -> String

-- | interface to the X11 library function <tt>XStringToKeysym()</tt>.
stringToKeysym :: String -> KeySym
noSymbol :: KeySym

-- | interface to the X11 library function <tt>XLookupString()</tt>.
lookupString :: XKeyEventPtr -> IO (Maybe KeySym, String)

-- | interface to the X11 library function <tt>XGetIconName()</tt>.
getIconName :: Display -> Window -> IO String

-- | interface to the X11 library function <tt>XSetIconName()</tt>.
setIconName :: Display -> Window -> String -> IO ()

-- | interface to the X11 library function <tt>XDefineCursor()</tt>.
defineCursor :: Display -> Window -> Cursor -> IO ()

-- | interface to the X11 library function <tt>XUndefineCursor()</tt>.
undefineCursor :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XCreatePixmapCursor()</tt>.
createPixmapCursor :: Display -> Pixmap -> Pixmap -> Color -> Color -> Dimension -> Dimension -> IO Cursor

-- | interface to the X11 library function <tt>XCreateGlyphCursor()</tt>.
createGlyphCursor :: Display -> Font -> Font -> Glyph -> Glyph -> Color -> Color -> IO Cursor

-- | interface to the X11 library function <tt>XCreateFontCursor()</tt>.
createFontCursor :: Display -> Glyph -> IO Cursor

-- | interface to the X11 library function <tt>XFreeCursor()</tt>.
freeCursor :: Display -> Font -> IO ()

-- | interface to the X11 library function <tt>XRecolorCursor()</tt>.
recolorCursor :: Display -> Cursor -> Color -> Color -> IO ()

-- | interface to the X11 library function <tt>XSetWMProtocols()</tt>.
setWMProtocols :: Display -> Window -> [Atom] -> IO ()
allocaSetWindowAttributes :: (Ptr SetWindowAttributes -> IO a) -> IO a
set_background_pixmap :: Ptr SetWindowAttributes -> Pixmap -> IO ()
set_background_pixel :: Ptr SetWindowAttributes -> Pixel -> IO ()
set_border_pixmap :: Ptr SetWindowAttributes -> Pixmap -> IO ()
set_border_pixel :: Ptr SetWindowAttributes -> Pixel -> IO ()
set_bit_gravity :: Ptr SetWindowAttributes -> BitGravity -> IO ()
set_win_gravity :: Ptr SetWindowAttributes -> WindowGravity -> IO ()
set_backing_store :: Ptr SetWindowAttributes -> BackingStore -> IO ()
set_backing_planes :: Ptr SetWindowAttributes -> Pixel -> IO ()
set_backing_pixel :: Ptr SetWindowAttributes -> Pixel -> IO ()
set_save_under :: Ptr SetWindowAttributes -> Bool -> IO ()
set_event_mask :: Ptr SetWindowAttributes -> EventMask -> IO ()
set_do_not_propagate_mask :: Ptr SetWindowAttributes -> EventMask -> IO ()
set_override_redirect :: Ptr SetWindowAttributes -> Bool -> IO ()
set_colormap :: Ptr SetWindowAttributes -> Colormap -> IO ()
set_cursor :: Ptr SetWindowAttributes -> Cursor -> IO ()

-- | interface to the X11 library function <tt>XDrawPoint()</tt>.
drawPoint :: Display -> Drawable -> GC -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XDrawPoints()</tt>.
drawPoints :: Display -> Drawable -> GC -> [Point] -> CoordinateMode -> IO ()

-- | interface to the X11 library function <tt>XDrawLine()</tt>.
drawLine :: Display -> Drawable -> GC -> Position -> Position -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XDrawLines()</tt>.
drawLines :: Display -> Drawable -> GC -> [Point] -> CoordinateMode -> IO ()

-- | interface to the X11 library function <tt>XDrawSegments()</tt>.
drawSegments :: Display -> Drawable -> GC -> [Segment] -> IO ()

-- | interface to the X11 library function <tt>XDrawRectangle()</tt>.
drawRectangle :: Display -> Drawable -> GC -> Position -> Position -> Dimension -> Dimension -> IO ()

-- | interface to the X11 library function <tt>XDrawRectangles()</tt>.
drawRectangles :: Display -> Drawable -> GC -> [Rectangle] -> IO ()

-- | interface to the X11 library function <tt>XDrawArc()</tt>.
drawArc :: Display -> Drawable -> GC -> Position -> Position -> Dimension -> Dimension -> Angle -> Angle -> IO ()

-- | interface to the X11 library function <tt>XDrawArcs()</tt>.
drawArcs :: Display -> Drawable -> GC -> [Arc] -> IO ()

-- | interface to the X11 library function <tt>XFillRectangle()</tt>.
fillRectangle :: Display -> Drawable -> GC -> Position -> Position -> Dimension -> Dimension -> IO ()

-- | interface to the X11 library function <tt>XFillRectangles()</tt>.
fillRectangles :: Display -> Drawable -> GC -> [Rectangle] -> IO ()

-- | interface to the X11 library function <tt>XFillPolygon()</tt>.
fillPolygon :: Display -> Drawable -> GC -> [Point] -> PolygonShape -> CoordinateMode -> IO ()

-- | interface to the X11 library function <tt>XFillArc()</tt>.
fillArc :: Display -> Drawable -> GC -> Position -> Position -> Dimension -> Dimension -> Angle -> Angle -> IO ()

-- | interface to the X11 library function <tt>XFillArcs()</tt>.
fillArcs :: Display -> Drawable -> GC -> [Arc] -> IO ()

-- | interface to the X11 library function <tt>XCopyArea()</tt>.
copyArea :: Display -> Drawable -> Drawable -> GC -> Position -> Position -> Dimension -> Dimension -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XCopyPlane()</tt>.
copyPlane :: Display -> Drawable -> Drawable -> GC -> Position -> Position -> Dimension -> Dimension -> Position -> Position -> Pixel -> IO ()

-- | interface to the X11 library function <tt>XDrawString()</tt>.
drawString :: Display -> Drawable -> GC -> Position -> Position -> String -> IO ()

-- | interface to the X11 library function <tt>XDrawImageString()</tt>.
drawImageString :: Display -> Drawable -> GC -> Position -> Position -> String -> IO ()

-- | interface to the X11 library function <tt>XStoreBuffer()</tt>.
storeBuffer :: Display -> String -> CInt -> IO ()

-- | interface to the X11 library function <tt>XStoreBytes()</tt>.
storeBytes :: Display -> String -> IO ()

-- | interface to the X11 library function <tt>XFetchBuffer()</tt>.
fetchBuffer :: Display -> CInt -> IO String

-- | interface to the X11 library function <tt>XFetchBytes()</tt>.
fetchBytes :: Display -> IO String

-- | interface to the X11 library function <tt>XRotateBuffers()</tt>.
rotateBuffers :: Display -> CInt -> IO ()

-- | interface to the X11 library function <tt>XSetTextProperty()</tt>.
setTextProperty :: Display -> Window -> String -> Atom -> IO ()
instance Data.Data.Data Graphics.X11.Xlib.Misc.XErrorEvent
instance GHC.Show.Show Graphics.X11.Xlib.Misc.XErrorEvent
instance GHC.Classes.Ord Graphics.X11.Xlib.Misc.XErrorEvent
instance GHC.Classes.Eq Graphics.X11.Xlib.Misc.XErrorEvent
instance Data.Data.Data Graphics.X11.Xlib.Misc.XComposeStatus
instance GHC.Show.Show Graphics.X11.Xlib.Misc.XComposeStatus
instance GHC.Classes.Ord Graphics.X11.Xlib.Misc.XComposeStatus
instance GHC.Classes.Eq Graphics.X11.Xlib.Misc.XComposeStatus
instance Data.Data.Data Graphics.X11.Xlib.Misc.XTextProperty
instance GHC.Show.Show Graphics.X11.Xlib.Misc.XTextProperty
instance GHC.Classes.Ord Graphics.X11.Xlib.Misc.XTextProperty
instance GHC.Classes.Eq Graphics.X11.Xlib.Misc.XTextProperty


-- | A collection of FFI declarations for interfacing with Xlib Windows.
module Graphics.X11.Xlib.Window

-- | interface to the X11 library function <tt>XStoreName()</tt>.
storeName :: Display -> Window -> String -> IO ()

-- | interface to the X11 library function <tt>XCreateSimpleWindow()</tt>.
createSimpleWindow :: Display -> Window -> Position -> Position -> Dimension -> Dimension -> CInt -> Pixel -> Pixel -> IO Window

-- | interface to the X11 library function <tt>XCreateWindow()</tt>.
createWindow :: Display -> Window -> Position -> Position -> Dimension -> Dimension -> CInt -> CInt -> WindowClass -> Visual -> AttributeMask -> Ptr SetWindowAttributes -> IO Window

-- | interface to the X11 library function
--   <tt>XTranslateCoordinates()</tt>.
translateCoordinates :: Display -> Window -> Window -> Position -> Position -> IO (Bool, Position, Position, Window)

-- | interface to the X11 library function <tt>XMoveResizeWindow()</tt>.
moveResizeWindow :: Display -> Window -> Position -> Position -> Dimension -> Dimension -> IO ()

-- | interface to the X11 library function <tt>XResizeWindow()</tt>.
resizeWindow :: Display -> Window -> Dimension -> Dimension -> IO ()

-- | interface to the X11 library function <tt>XMoveWindow()</tt>.
moveWindow :: Display -> Window -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XReparentWindow()</tt>.
reparentWindow :: Display -> Window -> Window -> Position -> Position -> IO ()

-- | interface to the X11 library function <tt>XMapSubwindows()</tt>.
mapSubwindows :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XUnmapSubwindows()</tt>.
unmapSubwindows :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XMapWindow()</tt>.
mapWindow :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XLowerWindow()</tt>.
lowerWindow :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XRaiseWindow()</tt>.
raiseWindow :: Display -> Window -> IO ()

-- | interface to the X11 library function
--   <tt>XCirculateSubwindowsDown()</tt>.
circulateSubwindowsDown :: Display -> Window -> IO ()

-- | interface to the X11 library function
--   <tt>XCirculateSubwindowsUp()</tt>.
circulateSubwindowsUp :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XCirculateSubwindows()</tt>.
circulateSubwindows :: Display -> Window -> CirculationDirection -> IO ()

-- | interface to the X11 library function <tt>XIconifyWindow()</tt>.
iconifyWindow :: Display -> Window -> ScreenNumber -> IO ()

-- | interface to the X11 library function <tt>XWithdrawWindow()</tt>.
withdrawWindow :: Display -> Window -> ScreenNumber -> IO ()

-- | interface to the X11 library function <tt>XDestroyWindow()</tt>.
destroyWindow :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XDestroySubwindows()</tt>.
destroySubwindows :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XSetWindowBorder()</tt>.
setWindowBorder :: Display -> Window -> Pixel -> IO ()

-- | interface to the X11 library function
--   <tt>XSetWindowBorderPixmap()</tt>.
setWindowBorderPixmap :: Display -> Window -> Pixmap -> IO ()

-- | interface to the X11 library function
--   <tt>XSetWindowBorderWidth()</tt>.
setWindowBorderWidth :: Display -> Window -> Dimension -> IO ()

-- | interface to the X11 library function <tt>XSetWindowBackground()</tt>.
setWindowBackground :: Display -> Window -> Pixel -> IO ()

-- | interface to the X11 library function
--   <tt>XSetWindowBackgroundPixmap()</tt>.
setWindowBackgroundPixmap :: Display -> Window -> Pixmap -> IO ()

-- | interface to the X11 library function <tt>XSetWindowColormap()</tt>.
setWindowColormap :: Display -> Window -> Colormap -> IO ()

-- | interface to the X11 library function <tt>XAddToSaveSet()</tt>.
addToSaveSet :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XRemoveFromSaveSet()</tt>.
removeFromSaveSet :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XChangeSaveSet()</tt>.
changeSaveSet :: Display -> Window -> ChangeSaveSetMode -> IO ()

-- | interface to the X11 library function <tt>XClearWindow()</tt>.
clearWindow :: Display -> Window -> IO ()

-- | interface to the X11 library function <tt>XClearArea()</tt>.
clearArea :: Display -> Window -> Position -> Position -> Dimension -> Dimension -> Bool -> IO ()

-- | interface to the X11 library function <tt>XRestackWindows()</tt>.
restackWindows :: Display -> [Window] -> IO ()


-- | A collection of FFI declarations for interfacing with Xlib.
--   
--   The library aims to provide a direct translation of the X binding into
--   Haskell so the most important documentation you should read is <i>The
--   Xlib Programming Manual</i>, available online at
--   <a>http://tronche.com/gui/x/xlib/</a>. Let me say that again because
--   it is very important. Get hold of this documentation and read it: it
--   tells you almost everything you need to know to use this library.
module Graphics.X11.Xlib

-- | pointer to an X11 <tt>Display</tt> structure
newtype Display
Display :: Ptr Display -> Display

-- | pointer to an X11 <tt>Screen</tt> structure
data Screen

-- | pointer to an X11 <tt>Visual</tt> structure
data Visual

-- | pointer to an X11 <tt>GC</tt> structure
data GC

-- | pointer to an X11 <tt>XSetWindowAttributes</tt> structure
data SetWindowAttributes

-- | counterpart of an X11 <tt>XVisualInfo</tt> structure
data VisualInfo
VisualInfo :: Visual -> VisualID -> ScreenNumber -> CInt -> CInt -> CULong -> CULong -> CULong -> CInt -> CInt -> VisualInfo
[visualInfo_visual] :: VisualInfo -> Visual
[visualInfo_visualID] :: VisualInfo -> VisualID
[visualInfo_screen] :: VisualInfo -> ScreenNumber
[visualInfo_depth] :: VisualInfo -> CInt
[visualInfo_class] :: VisualInfo -> CInt
[visualInfo_redMask] :: VisualInfo -> CULong
[visualInfo_greenMask] :: VisualInfo -> CULong
[visualInfo_blueMask] :: VisualInfo -> CULong
[visualInfo_colormapSize] :: VisualInfo -> CInt
[visualInfo_bitsPerRGB] :: VisualInfo -> CInt

-- | counterpart of an X11 <tt>XPoint</tt> structure
data Point
Point :: !Position -> !Position -> Point
[pt_x] :: Point -> !Position
[pt_y] :: Point -> !Position

-- | counterpart of an X11 <tt>XRectangle</tt> structure
data Rectangle
Rectangle :: !Position -> !Position -> !Dimension -> !Dimension -> Rectangle
[rect_x] :: Rectangle -> !Position
[rect_y] :: Rectangle -> !Position
[rect_width] :: Rectangle -> !Dimension
[rect_height] :: Rectangle -> !Dimension

-- | counterpart of an X11 <tt>XArc</tt> structure
data Arc
Arc :: Position -> Position -> Dimension -> Dimension -> Angle -> Angle -> Arc
[arc_x] :: Arc -> Position
[arc_y] :: Arc -> Position
[arc_width] :: Arc -> Dimension
[arc_height] :: Arc -> Dimension
[arc_angle1] :: Arc -> Angle
[arc_angle2] :: Arc -> Angle

-- | counterpart of an X11 <tt>XSegment</tt> structure
data Segment
Segment :: Position -> Position -> Position -> Position -> Segment
[seg_x1] :: Segment -> Position
[seg_y1] :: Segment -> Position
[seg_x2] :: Segment -> Position
[seg_y2] :: Segment -> Position

-- | counterpart of an X11 <tt>XColor</tt> structure
data Color
Color :: Pixel -> Word16 -> Word16 -> Word16 -> Word8 -> Color
[color_pixel] :: Color -> Pixel
[color_red] :: Color -> Word16
[color_green] :: Color -> Word16
[color_blue] :: Color -> Word16
[color_flags] :: Color -> Word8
type Pixel = Word64
type Position = Int32
type Dimension = Word32
type Angle = CInt
type ScreenNumber = Word32
type Buffer = CInt


module Graphics.X11.XScreenSaver

-- | Simple wrapper around <a>xScreenSaverQueryInfo</a> if you are only
--   interested in the idle time, in milliseconds. Returns 0 if the
--   XScreenSaver extension is not available
getXIdleTime :: Display -> IO Int

-- | XScreenSaverState is for use in both XScreenSaverNotifyEvent and
--   XScreenSaverInfo ScreenSaverCycle is not a valid value for use in
--   XScreenSaverInfo ScreenSaverDisabled will not occur in an
--   XScreenSaverNotifyEvent
data XScreenSaverState

-- | The screen is not currently being saved; til-or-since specifies the
--   number of milliseconds until the screen saver is expected to activate.
ScreenSaverOff :: XScreenSaverState

-- | The screen is currently being saved; til-or-since specifies the number
--   of milliseconds since the screen saver activated.
ScreenSaverOn :: XScreenSaverState

-- | If this bit is set, ScreenSaverNotify events are generated whenever
--   the screen saver cycle interval passes.
ScreenSaverCycle :: XScreenSaverState

-- | The screen saver is currently disabled; til-or-since is zero.
ScreenSaverDisabled :: XScreenSaverState

-- | Data type for use in a XScreenSaverInfo struct
data XScreenSaverKind

-- | The video signal to the display monitor was disabled.
ScreenSaverBlanked :: XScreenSaverKind

-- | A server-dependent, built-in screen saver image was displayed; either
--   no client had set the screen saver window attributes or a different
--   client had the server grabbed when the screen saver activated.
ScreenSaverInternal :: XScreenSaverKind

-- | The screen saver window was mapped with attributes set by a client
--   using the ScreenSaverSetAttributes request.
ScreenSaverExternal :: XScreenSaverKind

-- | Representation of the XScreenSaverInfo struct.
data XScreenSaverInfo
XScreenSaverInfo :: !Window -> !XScreenSaverState -> !XScreenSaverKind -> !CULong -> !CULong -> !CULong -> XScreenSaverInfo
[xssi_window] :: XScreenSaverInfo -> !Window

-- | The state field specified whether or not the screen saver is currently
--   active and how the til-or-since value should be interpreted
[xssi_state] :: XScreenSaverInfo -> !XScreenSaverState

-- | The kind field specifies the mechanism that either is currently being
--   used or would have been were the screen being saved
[xssi_kind] :: XScreenSaverInfo -> !XScreenSaverKind
[xssi_til_or_since] :: XScreenSaverInfo -> !CULong

-- | The idle field specifies the number of milliseconds since the last
--   input was received from the user on any of the input devices.
[xssi_idle] :: XScreenSaverInfo -> !CULong

-- | The event-mask field specifies which, if any, screen saver events this
--   client has requested using ScreenSaverSelectInput.
[xssi_event_mask] :: XScreenSaverInfo -> !CULong
type XScreenSaverNotifyEvent = (Window, Window, CInt, CInt, Bool, Time)
xScreenSaverQueryExtension :: Display -> IO (Maybe (CInt, CInt))
xScreenSaverQueryVersion :: Display -> IO (Maybe (CInt, CInt))

-- | xScreenSaverQueryInfo returns information about the current state of
--   the screen server. If the xScreenSaver extension is not available, it
--   returns Nothing
xScreenSaverQueryInfo :: Display -> IO (Maybe XScreenSaverInfo)

-- | xScreenSaverSelectInput asks that events related to the screen saver
--   be generated for this client. If no bits are set in event-mask, then
--   no events will be generated.
xScreenSaverSelectInput :: Display -> EventMask -> IO ()

-- | XScreenSaverSetAttributes sets the attributes to be used the next time
--   the external screen saver is activated. If another client currently
--   has the attributes set, a BadAccess error is generated and the request
--   is ignored.
--   
--   Otherwise, the specified window attributes are checked as if they were
--   used in a core CreateWindow request whose parent is the root. The
--   override-redirect field is ignored as it is implicitly set to True. If
--   the window attributes result in an error according to the rules for
--   CreateWindow, the request is ignored.
--   
--   Otherwise, the attributes are stored and will take effect on the next
--   activation that occurs when the server is not grabbed by another
--   client. Any resources specified for the background-pixmap or cursor
--   attributes may be freed immediately. The server is free to copy the
--   background-pixmap or cursor resources or to use them in place;
--   therefore, the effect of changing the contents of those resources is
--   undefined. If the specified colormap no longer exists when the screen
--   saver activates, the parent's colormap is used instead. If no errors
--   are generated by this request, any previous screen saver window
--   attributes set by this client are released.
--   
--   When the screen saver next activates and the server is not grabbed by
--   another client, the screen saver window is created, if necessary, and
--   set to the specified attributes and events are generated as usual. The
--   colormap associated with the screen saver window is installed.
--   Finally, the screen saver window is mapped.
--   
--   The window remains mapped and at the top of the stacking order until
--   the screen saver is deactivated in response to activity on any of the
--   user input devices, a ForceScreenSaver request with a value of Reset,
--   or any request that would cause the window to be unmapped.
--   
--   If the screen saver activates while the server is grabbed by another
--   client, the internal saver mechanism is used. The ForceScreenSaver
--   request may be used with a value of Active to deactivate the internal
--   saver and activate the external saver.
--   
--   If the screen saver client's connection to the server is broken while
--   the screen saver is activated and the client's close down mode has not
--   been RetainPermanent or RetainTemporary, the current screen saver is
--   deactivated and the internal screen saver is immediately activated.
--   
--   When the screen saver deactivates, the screen saver window's colormap
--   is uninstalled and the window is unmapped (except as described below).
--   The screen saver XID is disassociated with the window and the server
--   may, but is not required to, destroy the window along with any
--   children.
--   
--   When the screen saver is being deactivated and then immediately
--   reactivated (such as when switching screen savers), the server may
--   leave the screen saver window mapped (typically to avoid generating
--   exposures).
xScreenSaverSetAttributes :: Display -> Position -> Position -> Dimension -> Dimension -> Dimension -> CInt -> WindowClass -> Visual -> AttributeMask -> Ptr SetWindowAttributes -> IO ()

-- | XScreenSaverUnsetAttributes instructs the server to discard any previ‐
--   ous screen saver window attributes set by this client.
xScreenSaverUnsetAttributes :: Display -> IO ()

-- | XScreenSaverRegister stores the given XID in the _SCREEN_SAVER_ID
--   prop‐ erty (of the given type) on the root window of the specified
--   screen. It returns zero if an error is encountered and the property is
--   not changed, otherwise it returns non-zero.
xScreenSaverSaverRegister :: Display -> ScreenNumber -> XID -> Atom -> IO ()

-- | XScreenSaverUnregister removes any _SCREEN_SAVER_ID from the root win‐
--   dow of the specified screen. It returns zero if an error is encoun‐
--   tered and the property is changed, otherwise it returns non-zero.
xScreenSaverUnregister :: Display -> ScreenNumber -> IO Status

-- | XScreenSaverGetRegistered returns the XID and type stored in the
--   _SCREEN_SAVER_ID property on the root window of the specified screen.
--   It returns zero if an error is encountered or if the property does not
--   exist or is not of the correct format; otherwise it returns non-zero.
xScreenSaverGetRegistered :: Display -> ScreenNumber -> XID -> Atom -> IO Status

-- | XScreenSaverSuspend temporarily suspends the screensaver and DPMS
--   timer if suspend is <a>True</a>, and restarts the timer if suspend is
--   <a>False</a>. This function should be used by applications that don't
--   want the screensaver or DPMS to become activated while they're for
--   example in the process of playing a media sequence, or are otherwise
--   continuously presenting visual information to the user while in a
--   non-interactive state. This function is not intended to be called by
--   an external screensaver application.
--   
--   If XScreenSaverSuspend is called multiple times with suspend set to
--   <a>True</a>, it must be called an equal number of times with suspend
--   set to <a>False</a> in order for the screensaver timer to be
--   restarted. This request has no affect if a client tries to resume the
--   screensaver with‐ out first having suspended it. XScreenSaverSuspend
--   can thus not be used by one client to resume the screensaver if it's
--   been suspended by another client.
--   
--   If a client that has suspended the screensaver becomes disconnected
--   from the X server, the screensaver timer will automatically be
--   restarted, unless it's still suspended by another client. Suspending
--   the screensaver timer doesn't prevent the screensaver from being
--   forceably activated with the ForceScreenSaver request, or a DPMS mode
--   from being set with the DPMSForceLevel request.
--   
--   XScreenSaverSuspend also doesn't deactivate the screensaver or DPMS if
--   either is active at the time the request to suspend them is received
--   by the X server. But once they've been deactivated, they won't
--   automatically be activated again, until the client has canceled the
--   suspension.
xScreenSaverSuspend :: Display -> Bool -> IO ()
get_XScreenSaverNotifyEvent :: XEventPtr -> IO XScreenSaverNotifyEvent

-- | We have XScreenSaver, so the library will actually work

-- | <i>Deprecated: X11 now always compiles with XScreenSaver support</i>
compiledWithXScreenSaver :: Bool
instance GHC.Show.Show Graphics.X11.XScreenSaver.XScreenSaverState
instance GHC.Show.Show Graphics.X11.XScreenSaver.XScreenSaverKind
instance GHC.Show.Show Graphics.X11.XScreenSaver.XScreenSaverInfo
instance Foreign.Storable.Storable Graphics.X11.XScreenSaver.XScreenSaverInfo
instance Foreign.Storable.Storable Graphics.X11.XScreenSaver.XScreenSaverKind
instance Foreign.Storable.Storable Graphics.X11.XScreenSaver.XScreenSaverState


-- | A Haskell binding for the X11 libraries.
module Graphics.X11


module Graphics.X11.Xrandr

-- | Representation of the XRRScreenSize struct
data XRRScreenSize
XRRScreenSize :: !CInt -> !CInt -> !CInt -> !CInt -> XRRScreenSize
[xrr_ss_width] :: XRRScreenSize -> !CInt
[xrr_ss_height] :: XRRScreenSize -> !CInt
[xrr_ss_mwidth] :: XRRScreenSize -> !CInt
[xrr_ss_mheight] :: XRRScreenSize -> !CInt

-- | Representation of the XRRModeInfo struct
data XRRModeInfo
XRRModeInfo :: !RRMode -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !CUInt -> !String -> !XRRModeFlags -> XRRModeInfo
[xrr_mi_id] :: XRRModeInfo -> !RRMode
[xrr_mi_width] :: XRRModeInfo -> !CUInt
[xrr_mi_height] :: XRRModeInfo -> !CUInt
[xrr_mi_dotClock] :: XRRModeInfo -> !CUInt
[xrr_mi_hSyncStart] :: XRRModeInfo -> !CUInt
[xrr_mi_hSyncEnd] :: XRRModeInfo -> !CUInt
[xrr_mi_hTotal] :: XRRModeInfo -> !CUInt
[xrr_mi_hSkew] :: XRRModeInfo -> !CUInt
[xrr_mi_vSyncStart] :: XRRModeInfo -> !CUInt
[xrr_mi_vSyncEnd] :: XRRModeInfo -> !CUInt
[xrr_mi_vTotal] :: XRRModeInfo -> !CUInt
[xrr_mi_name] :: XRRModeInfo -> !String
[xrr_mi_modeFlags] :: XRRModeInfo -> !XRRModeFlags

-- | Representation of the XRRScreenResources struct
data XRRScreenResources
XRRScreenResources :: !Time -> !Time -> [RRCrtc] -> [RROutput] -> [XRRModeInfo] -> XRRScreenResources
[xrr_sr_timestamp] :: XRRScreenResources -> !Time
[xrr_sr_configTimestamp] :: XRRScreenResources -> !Time
[xrr_sr_crtcs] :: XRRScreenResources -> [RRCrtc]
[xrr_sr_outputs] :: XRRScreenResources -> [RROutput]
[xrr_sr_modes] :: XRRScreenResources -> [XRRModeInfo]

-- | Representation of the XRROutputInfo struct
data XRROutputInfo
XRROutputInfo :: !Time -> !RRCrtc -> !String -> !CULong -> !CULong -> !Connection -> !SubpixelOrder -> [RRCrtc] -> [RROutput] -> !CInt -> [RRMode] -> XRROutputInfo
[xrr_oi_timestamp] :: XRROutputInfo -> !Time
[xrr_oi_crtc] :: XRROutputInfo -> !RRCrtc
[xrr_oi_name] :: XRROutputInfo -> !String
[xrr_oi_mm_width] :: XRROutputInfo -> !CULong
[xrr_oi_mm_height] :: XRROutputInfo -> !CULong
[xrr_oi_connection] :: XRROutputInfo -> !Connection
[xrr_oi_subpixel_order] :: XRROutputInfo -> !SubpixelOrder
[xrr_oi_crtcs] :: XRROutputInfo -> [RRCrtc]
[xrr_oi_clones] :: XRROutputInfo -> [RROutput]
[xrr_oi_npreferred] :: XRROutputInfo -> !CInt
[xrr_oi_modes] :: XRROutputInfo -> [RRMode]

-- | Representation of the XRRCrtcInfo struct
data XRRCrtcInfo
XRRCrtcInfo :: !Time -> !CInt -> !CInt -> !CUInt -> !CUInt -> !RRMode -> !Rotation -> [RROutput] -> !Rotation -> [RROutput] -> XRRCrtcInfo
[xrr_ci_timestamp] :: XRRCrtcInfo -> !Time
[xrr_ci_x] :: XRRCrtcInfo -> !CInt
[xrr_ci_y] :: XRRCrtcInfo -> !CInt
[xrr_ci_width] :: XRRCrtcInfo -> !CUInt
[xrr_ci_height] :: XRRCrtcInfo -> !CUInt
[xrr_ci_mode] :: XRRCrtcInfo -> !RRMode
[xrr_ci_rotation] :: XRRCrtcInfo -> !Rotation
[xrr_ci_outputs] :: XRRCrtcInfo -> [RROutput]
[xrr_ci_rotations] :: XRRCrtcInfo -> !Rotation
[xrr_ci_possible] :: XRRCrtcInfo -> [RROutput]

-- | Representation of the XRRPropertyInfo struct
data XRRPropertyInfo
XRRPropertyInfo :: !Bool -> !Bool -> !Bool -> [CLong] -> XRRPropertyInfo
[xrr_pi_pending] :: XRRPropertyInfo -> !Bool
[xrr_pi_range] :: XRRPropertyInfo -> !Bool
[xrr_pi_immutable] :: XRRPropertyInfo -> !Bool
[xrr_pi_values] :: XRRPropertyInfo -> [CLong]

-- | Representation of the XRRMonitorInfo struct
data XRRMonitorInfo
XRRMonitorInfo :: !Atom -> !Bool -> !Bool -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> [RROutput] -> XRRMonitorInfo
[xrr_moninf_name] :: XRRMonitorInfo -> !Atom
[xrr_moninf_primary] :: XRRMonitorInfo -> !Bool
[xrr_moninf_automatic] :: XRRMonitorInfo -> !Bool
[xrr_moninf_x] :: XRRMonitorInfo -> !CInt
[xrr_moninf_y] :: XRRMonitorInfo -> !CInt
[xrr_moninf_width] :: XRRMonitorInfo -> !CInt
[xrr_moninf_height] :: XRRMonitorInfo -> !CInt
[xrr_moninf_mwidth] :: XRRMonitorInfo -> !CInt
[xrr_moninf_mheight] :: XRRMonitorInfo -> !CInt
[xrr_moninf_outputs] :: XRRMonitorInfo -> [RROutput]
compiledWithXrandr :: Bool
type Rotation = Word16
type Reflection = Word16
type SizeID = Word16
data XRRScreenConfiguration
xrrQueryExtension :: Display -> IO (Maybe (CInt, CInt))
xrrQueryVersion :: Display -> IO (Maybe (CInt, CInt))
xrrGetScreenInfo :: Display -> Drawable -> IO (Maybe XRRScreenConfiguration)
xrrFreeScreenConfigInfo :: XRRScreenConfiguration -> IO ()
xrrSetScreenConfig :: Display -> XRRScreenConfiguration -> Drawable -> CInt -> Rotation -> Time -> IO Status
xrrSetScreenConfigAndRate :: Display -> XRRScreenConfiguration -> Drawable -> CInt -> Rotation -> CShort -> Time -> IO Status
xrrConfigRotations :: XRRScreenConfiguration -> IO (Rotation, Rotation)
xrrConfigTimes :: XRRScreenConfiguration -> IO (Time, Time)
xrrConfigSizes :: XRRScreenConfiguration -> IO (Maybe [XRRScreenSize])
xrrConfigRates :: XRRScreenConfiguration -> CInt -> IO (Maybe [CShort])
xrrConfigCurrentConfiguration :: XRRScreenConfiguration -> IO (Rotation, SizeID)
xrrConfigCurrentRate :: XRRScreenConfiguration -> IO CShort
xrrRootToScreen :: Display -> Window -> IO CInt
xrrSelectInput :: Display -> Window -> EventMask -> IO ()
xrrUpdateConfiguration :: XEventPtr -> IO CInt
xrrRotations :: Display -> CInt -> IO (Rotation, Rotation)
xrrSizes :: Display -> CInt -> IO (Maybe [XRRScreenSize])
xrrRates :: Display -> CInt -> CInt -> IO (Maybe [CShort])
xrrTimes :: Display -> CInt -> IO (Time, Time)
xrrGetScreenResources :: Display -> Window -> IO (Maybe XRRScreenResources)
xrrGetOutputInfo :: Display -> XRRScreenResources -> RROutput -> IO (Maybe XRROutputInfo)
xrrGetCrtcInfo :: Display -> XRRScreenResources -> RRCrtc -> IO (Maybe XRRCrtcInfo)
xrrGetScreenResourcesCurrent :: Display -> Window -> IO (Maybe XRRScreenResources)
xrrSetOutputPrimary :: Display -> Window -> RROutput -> IO ()
xrrGetOutputPrimary :: Display -> Window -> IO RROutput
xrrListOutputProperties :: Display -> RROutput -> IO (Maybe [Atom])
xrrQueryOutputProperty :: Display -> RROutput -> Atom -> IO (Maybe XRRPropertyInfo)
xrrConfigureOutputProperty :: Display -> RROutput -> Atom -> Bool -> Bool -> [CLong] -> IO ()
xrrChangeOutputProperty :: Display -> RROutput -> Atom -> Atom -> CInt -> CInt -> [Word32] -> IO ()

-- | <tt>xrrGetOutputProperty display output property offset length delete
--   pending propertyType</tt> | returns <tt>Maybe (actualType, format,
--   bytesAfter, data)</tt>.
xrrGetOutputProperty :: Display -> RROutput -> Atom -> CLong -> CLong -> Bool -> Bool -> Atom -> IO (Maybe (Atom, Int, CULong, [Word32]))
xrrDeleteOutputProperty :: Display -> RROutput -> Atom -> IO ()
xrrGetMonitors :: Display -> Drawable -> Bool -> IO (Maybe [XRRMonitorInfo])
instance GHC.Show.Show Graphics.X11.Xrandr.XRRScreenSize
instance GHC.Show.Show Graphics.X11.Xrandr.XRRModeInfo
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRRModeInfo
instance GHC.Show.Show Graphics.X11.Xrandr.XRRScreenResources
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRRScreenResources
instance GHC.Show.Show Graphics.X11.Xrandr.XRROutputInfo
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRROutputInfo
instance GHC.Show.Show Graphics.X11.Xrandr.XRRCrtcInfo
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRRCrtcInfo
instance GHC.Show.Show Graphics.X11.Xrandr.XRRPropertyInfo
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRRPropertyInfo
instance GHC.Show.Show Graphics.X11.Xrandr.XRRMonitorInfo
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRRMonitorInfo
instance Data.Data.Data Graphics.X11.Xrandr.XRRScreenConfiguration
instance GHC.Show.Show Graphics.X11.Xrandr.XRRScreenConfiguration
instance GHC.Classes.Ord Graphics.X11.Xrandr.XRRScreenConfiguration
instance GHC.Classes.Eq Graphics.X11.Xrandr.XRRScreenConfiguration
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRRMonitorInfo
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRRPropertyInfo
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRRCrtcInfo
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRROutputInfo
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRRScreenResources
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRRModeInfo
instance Foreign.Storable.Storable Graphics.X11.Xrandr.XRRScreenSize


module Graphics.X11.Xlib.Extras
data ErrorEvent
ErrorEvent :: !CInt -> Display -> !CULong -> !CUChar -> !CUChar -> !CUChar -> !XID -> ErrorEvent
[ev_type] :: ErrorEvent -> !CInt
[ev_display] :: ErrorEvent -> Display
[ev_serialnum] :: ErrorEvent -> !CULong
[ev_error_code] :: ErrorEvent -> !CUChar
[ev_request_code] :: ErrorEvent -> !CUChar
[ev_minor_code] :: ErrorEvent -> !CUChar
[ev_resourceid] :: ErrorEvent -> !XID
type XErrorHandler = Display -> XErrorEventPtr -> IO ()
type CXErrorHandler = Display -> XErrorEventPtr -> IO CInt
type XErrorEventPtr = Ptr ()
data WMHints
WMHints :: CLong -> Bool -> CInt -> Pixmap -> Window -> CInt -> CInt -> Pixmap -> XID -> WMHints
[wmh_flags] :: WMHints -> CLong
[wmh_input] :: WMHints -> Bool
[wmh_initial_state] :: WMHints -> CInt
[wmh_icon_pixmap] :: WMHints -> Pixmap
[wmh_icon_window] :: WMHints -> Window
[wmh_icon_x] :: WMHints -> CInt
[wmh_icon_y] :: WMHints -> CInt
[wmh_icon_mask] :: WMHints -> Pixmap
[wmh_window_group] :: WMHints -> XID
data ClassHint
ClassHint :: String -> String -> ClassHint
[resName] :: ClassHint -> String
[resClass] :: ClassHint -> String
data SizeHints
SizeHints :: Maybe (Dimension, Dimension) -> Maybe (Dimension, Dimension) -> Maybe (Dimension, Dimension) -> Maybe ((Dimension, Dimension), (Dimension, Dimension)) -> Maybe (Dimension, Dimension) -> Maybe BitGravity -> SizeHints
[sh_min_size] :: SizeHints -> Maybe (Dimension, Dimension)
[sh_max_size] :: SizeHints -> Maybe (Dimension, Dimension)
[sh_resize_inc] :: SizeHints -> Maybe (Dimension, Dimension)
[sh_aspect] :: SizeHints -> Maybe ((Dimension, Dimension), (Dimension, Dimension))
[sh_base_size] :: SizeHints -> Maybe (Dimension, Dimension)
[sh_win_gravity] :: SizeHints -> Maybe BitGravity
newtype FontSet
FontSet :: Ptr FontSet -> FontSet
data TextProperty
TextProperty :: CString -> Atom -> CInt -> Word64 -> TextProperty
[tp_value] :: TextProperty -> CString
[tp_encoding] :: TextProperty -> Atom
[tp_format] :: TextProperty -> CInt
[tp_nitems] :: TextProperty -> Word64
data WindowAttributes
WindowAttributes :: CInt -> Colormap -> Bool -> CInt -> EventMask -> EventMask -> EventMask -> Bool -> WindowAttributes
[wa_x, wa_y, wa_width, wa_height, wa_border_width] :: WindowAttributes -> CInt
[wa_colormap] :: WindowAttributes -> Colormap
[wa_map_installed] :: WindowAttributes -> Bool
[wa_map_state] :: WindowAttributes -> CInt
[wa_all_event_masks] :: WindowAttributes -> EventMask
[wa_your_event_mask] :: WindowAttributes -> EventMask
[wa_do_not_propagate_mask] :: WindowAttributes -> EventMask
[wa_override_redirect] :: WindowAttributes -> Bool
data WindowChanges
WindowChanges :: CInt -> CInt -> CInt -> CInt -> CInt -> Window -> CInt -> WindowChanges
[wc_x] :: WindowChanges -> CInt
[wc_y] :: WindowChanges -> CInt
[wc_width] :: WindowChanges -> CInt
[wc_height] :: WindowChanges -> CInt
[wc_border_width] :: WindowChanges -> CInt
[wc_sibling] :: WindowChanges -> Window
[wc_stack_mode] :: WindowChanges -> CInt
data Event
AnyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
ConfigureRequestEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> !Window -> !NotifyDetail -> !CULong -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_parent] :: Event -> !Window
[ev_window] :: Event -> !Window
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_width] :: Event -> !CInt
[ev_height] :: Event -> !CInt
[ev_border_width] :: Event -> !CInt
[ev_above] :: Event -> !Window
[ev_detail] :: Event -> !NotifyDetail
[ev_value_mask] :: Event -> !CULong
ConfigureEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> !Window -> !Bool -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_event] :: Event -> !Window
[ev_window] :: Event -> !Window
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_width] :: Event -> !CInt
[ev_height] :: Event -> !CInt
[ev_border_width] :: Event -> !CInt
[ev_above] :: Event -> !Window
[ev_override_redirect] :: Event -> !Bool
MapRequestEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_parent] :: Event -> !Window
[ev_window] :: Event -> !Window
KeyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Window -> !Time -> !CInt -> !CInt -> !CInt -> !CInt -> !KeyMask -> !KeyCode -> !Bool -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_root] :: Event -> !Window
[ev_subwindow] :: Event -> !Window
[ev_time] :: Event -> !Time
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_x_root] :: Event -> !CInt
[ev_y_root] :: Event -> !CInt
[ev_state] :: Event -> !KeyMask
[ev_keycode] :: Event -> !KeyCode
[ev_same_screen] :: Event -> !Bool
ButtonEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Window -> !Time -> !CInt -> !CInt -> !CInt -> !CInt -> !KeyMask -> !Button -> !Bool -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_root] :: Event -> !Window
[ev_subwindow] :: Event -> !Window
[ev_time] :: Event -> !Time
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_x_root] :: Event -> !CInt
[ev_y_root] :: Event -> !CInt
[ev_state] :: Event -> !KeyMask
[ev_button] :: Event -> !Button
[ev_same_screen] :: Event -> !Bool
MotionEvent :: !EventType -> !CULong -> !Bool -> Display -> !CInt -> !CInt -> !Window -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_window] :: Event -> !Window
DestroyWindowEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_event] :: Event -> !Window
[ev_window] :: Event -> !Window
UnmapEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Bool -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_event] :: Event -> !Window
[ev_window] :: Event -> !Window
[ev_from_configure] :: Event -> !Bool
MapNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Bool -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_event] :: Event -> !Window
[ev_window] :: Event -> !Window
[ev_override_redirect] :: Event -> !Bool
MappingNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !MappingRequest -> !KeyCode -> !CInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_request] :: Event -> !MappingRequest
[ev_first_keycode] :: Event -> !KeyCode
[ev_count] :: Event -> !CInt
CrossingEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Window -> !Time -> !CInt -> !CInt -> !CInt -> !CInt -> !NotifyMode -> !NotifyDetail -> !Bool -> !Bool -> !Modifier -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_root] :: Event -> !Window
[ev_subwindow] :: Event -> !Window
[ev_time] :: Event -> !Time
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_x_root] :: Event -> !CInt
[ev_y_root] :: Event -> !CInt
[ev_mode] :: Event -> !NotifyMode
[ev_detail] :: Event -> !NotifyDetail
[ev_same_screen] :: Event -> !Bool
[ev_focus] :: Event -> !Bool
[ev_state] :: Event -> !Modifier
SelectionRequest :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Atom -> !Atom -> !Atom -> !Time -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_owner] :: Event -> !Window
[ev_requestor] :: Event -> !Window
[ev_selection] :: Event -> !Atom
[ev_target] :: Event -> !Atom
[ev_property] :: Event -> !Atom
[ev_time] :: Event -> !Time
SelectionClear :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Atom -> !Time -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_selection] :: Event -> !Atom
[ev_time] :: Event -> !Time
PropertyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Atom -> !Time -> !CInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_atom] :: Event -> !Atom
[ev_time] :: Event -> !Time
[ev_propstate] :: Event -> !CInt
ExposeEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_width] :: Event -> !CInt
[ev_height] :: Event -> !CInt
[ev_count] :: Event -> !CInt
FocusChangeEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !NotifyMode -> !NotifyDetail -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_mode] :: Event -> !NotifyMode
[ev_detail] :: Event -> !NotifyDetail
ClientMessageEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Atom -> ![CInt] -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_message_type] :: Event -> !Atom
[ev_data] :: Event -> ![CInt]
RRScreenChangeNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Time -> !Time -> !SizeID -> !SubpixelOrder -> !Rotation -> !CInt -> !CInt -> !CInt -> !CInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_root] :: Event -> !Window
[ev_timestamp] :: Event -> !Time
[ev_config_timestamp] :: Event -> !Time
[ev_size_index] :: Event -> !SizeID
[ev_subpixel_order] :: Event -> !SubpixelOrder
[ev_rotation] :: Event -> !Rotation
[ev_width] :: Event -> !CInt
[ev_height] :: Event -> !CInt
[ev_mwidth] :: Event -> !CInt
[ev_mheight] :: Event -> !CInt
RRNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !CInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_subtype] :: Event -> !CInt
RRCrtcChangeNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !CInt -> !RRCrtc -> !RRMode -> !Rotation -> !CInt -> !CInt -> !CUInt -> !CUInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_subtype] :: Event -> !CInt
[ev_crtc] :: Event -> !RRCrtc
[ev_rr_mode] :: Event -> !RRMode
[ev_rotation] :: Event -> !Rotation
[ev_x] :: Event -> !CInt
[ev_y] :: Event -> !CInt
[ev_rr_width] :: Event -> !CUInt
[ev_rr_height] :: Event -> !CUInt
RROutputChangeNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !CInt -> !RROutput -> !RRCrtc -> !RRMode -> !Rotation -> !Connection -> !SubpixelOrder -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_subtype] :: Event -> !CInt
[ev_output] :: Event -> !RROutput
[ev_crtc] :: Event -> !RRCrtc
[ev_rr_mode] :: Event -> !RRMode
[ev_rotation] :: Event -> !Rotation
[ev_connection] :: Event -> !Connection
[ev_subpixel_order] :: Event -> !SubpixelOrder
RROutputPropertyNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !CInt -> !RROutput -> !Atom -> !Time -> !CInt -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_subtype] :: Event -> !CInt
[ev_output] :: Event -> !RROutput
[ev_property] :: Event -> !Atom
[ev_timestamp] :: Event -> !Time
[ev_rr_state] :: Event -> !CInt
ScreenSaverNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !XScreenSaverState -> !XScreenSaverKind -> !Bool -> !Time -> Event
[ev_event_type] :: Event -> !EventType
[ev_serial] :: Event -> !CULong
[ev_send_event] :: Event -> !Bool
[ev_event_display] :: Event -> Display
[ev_window] :: Event -> !Window
[ev_root] :: Event -> !Window
[ev_ss_state] :: Event -> !XScreenSaverState
[ev_ss_kind] :: Event -> !XScreenSaverKind
[ev_forced] :: Event -> !Bool
[ev_time] :: Event -> !Time
xFreeModifiermap :: Ptr () -> IO (Ptr CInt)
xGetModifierMapping :: Display -> IO (Ptr ())
xGetCommand :: Display -> Window -> Ptr (Ptr CWString) -> Ptr CInt -> IO Status

-- | A binding to XMapRaised.
mapRaised :: Display -> Window -> IO CInt
_xSetErrorHandler :: FunPtr CXErrorHandler -> IO (FunPtr CXErrorHandler)
getXErrorHandler :: FunPtr CXErrorHandler -> CXErrorHandler
mkXErrorHandler :: CXErrorHandler -> IO (FunPtr CXErrorHandler)
xConvertSelection :: Display -> Atom -> Atom -> Atom -> Window -> Time -> IO ()
xGetSelectionOwner :: Display -> Atom -> IO Window
xSetSelectionOwner :: Display -> Atom -> Window -> Time -> IO ()
isPrivateKeypadKey :: KeySym -> Bool
isPFKey :: KeySym -> Bool
isModifierKey :: KeySym -> Bool
isMiscFunctionKey :: KeySym -> Bool
isKeypadKey :: KeySym -> Bool
isFunctionKey :: KeySym -> Bool
isCursorKey :: KeySym -> Bool
xSetWMHints :: Display -> Window -> Ptr WMHints -> IO Status
xAllocWMHints :: IO (Ptr WMHints)
xGetWMHints :: Display -> Window -> IO (Ptr WMHints)
xSetClassHint :: Display -> Window -> Ptr ClassHint -> IO ()
xGetClassHint :: Display -> Window -> Ptr ClassHint -> IO Status
xSetWMNormalHints :: Display -> Window -> Ptr SizeHints -> IO ()
xAllocSizeHints :: IO (Ptr SizeHints)
xGetWMNormalHints :: Display -> Window -> Ptr SizeHints -> Ptr CLong -> IO Status
xUnmapWindow :: Display -> Window -> IO CInt
xGetWindowProperty :: Display -> Window -> Atom -> CLong -> CLong -> Bool -> Atom -> Ptr Atom -> Ptr CInt -> Ptr CULong -> Ptr CULong -> Ptr (Ptr CUChar) -> IO Status
xDeleteProperty :: Display -> Window -> Atom -> IO Status
xChangeProperty :: Display -> Window -> Atom -> Atom -> CInt -> CInt -> Ptr CUChar -> CInt -> IO Status
xRefreshKeyboardMapping :: Ptr () -> IO CInt
xSetErrorHandler :: IO ()
xGetWMProtocols :: Display -> Window -> Ptr (Ptr Atom) -> Ptr CInt -> IO Status
xGetTransientForHint :: Display -> Window -> Ptr Window -> IO Status
xFetchName :: Display -> Window -> Ptr CString -> IO Status
xwcTextEscapement :: FontSet -> CWString -> CInt -> IO Int32
xwcDrawImageString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> CWString -> CInt -> IO ()
xwcDrawString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> CWString -> CInt -> IO ()
xwcTextExtents :: FontSet -> CWString -> CInt -> Ptr Rectangle -> Ptr Rectangle -> IO CInt
freeFontSet :: Display -> FontSet -> IO ()
freeStringList :: Ptr CString -> IO ()
xCreateFontSet :: Display -> CString -> Ptr (Ptr CString) -> Ptr CInt -> Ptr CString -> IO (Ptr FontSet)
wcFreeStringList :: Ptr CWString -> IO ()
xwcTextPropertyToTextList :: Display -> Ptr TextProperty -> Ptr (Ptr CWString) -> Ptr CInt -> IO CInt
xGetTextProperty :: Display -> Window -> Ptr TextProperty -> Atom -> IO Status

-- | interface to the X11 library function
--   <tt>XChangeWindowAttributes()</tt>.
changeWindowAttributes :: Display -> Window -> AttributeMask -> Ptr SetWindowAttributes -> IO ()
xGetWindowAttributes :: Display -> Window -> Ptr WindowAttributes -> IO Status
xQueryTree :: Display -> Window -> Ptr Window -> Ptr Window -> Ptr (Ptr Window) -> Ptr CInt -> IO Status
killClient :: Display -> Window -> IO CInt
xConfigureWindow :: Display -> Window -> CULong -> Ptr WindowChanges -> IO CInt
eventTable :: [(EventType, String)]
eventName :: Event -> String
getEvent :: XEventPtr -> IO Event
none :: XID
anyButton :: Button
anyKey :: KeyCode
currentTime :: Time
configureWindow :: Display -> Window -> CULong -> WindowChanges -> IO ()
queryTree :: Display -> Window -> IO (Window, Window, [Window])
waIsUnmapped :: CInt
waIsUnviewable :: CInt
waIsViewable :: CInt
getWindowAttributes :: Display -> Window -> IO WindowAttributes

-- | Run an action with the server
withServer :: Display -> IO () -> IO ()
getTextProperty :: Display -> Window -> Atom -> IO TextProperty
wcTextPropertyToTextList :: Display -> TextProperty -> IO [String]
createFontSet :: Display -> String -> IO ([String], String, FontSet)
wcTextExtents :: FontSet -> String -> (Rectangle, Rectangle)
wcDrawString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> String -> IO ()
wcDrawImageString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> String -> IO ()
wcTextEscapement :: FontSet -> String -> Int32
fetchName :: Display -> Window -> IO (Maybe String)
getTransientForHint :: Display -> Window -> IO (Maybe Window)

-- | The XGetWMProtocols function returns the list of atoms stored in the
--   WM_PROTOCOLS property on the specified window. These atoms describe
--   window manager protocols in which the owner of this window is willing
--   to participate. If the property exists, is of type ATOM, is of format
--   32, and the atom WM_PROTOCOLS can be interned, XGetWMProtocols sets
--   the protocols_return argument to a list of atoms, sets the
--   count_return argument to the number of elements in the list, and
--   returns a nonzero status. Otherwise, it sets neither of the return
--   arguments and returns a zero status. To release the list of atoms, use
--   XFree.
getWMProtocols :: Display -> Window -> IO [Atom]
setEventType :: XEventPtr -> EventType -> IO ()
setSelectionNotify :: XEventPtr -> Window -> Atom -> Atom -> Atom -> Time -> IO ()
setClientMessageEvent :: XEventPtr -> Window -> Atom -> CInt -> Atom -> Time -> IO ()
setClientMessageEvent' :: XEventPtr -> Window -> Atom -> CInt -> [CInt] -> IO ()
setConfigureEvent :: XEventPtr -> Window -> Window -> CInt -> CInt -> CInt -> CInt -> CInt -> Window -> Bool -> IO ()
setKeyEvent :: XEventPtr -> Window -> Window -> Window -> KeyMask -> KeyCode -> Bool -> IO ()

-- | refreshKeyboardMapping. TODO Remove this binding when the fix has been
--   commited to X11
refreshKeyboardMapping :: Event -> IO ()
anyPropertyType :: Atom
rawGetWindowProperty :: Storable a => Int -> Display -> Atom -> Window -> IO (Maybe [a])
getWindowProperty8 :: Display -> Atom -> Window -> IO (Maybe [CChar])
getWindowProperty16 :: Display -> Atom -> Window -> IO (Maybe [CShort])
getWindowProperty32 :: Display -> Atom -> Window -> IO (Maybe [CLong])
changeProperty8 :: Display -> Window -> Atom -> Atom -> CInt -> [CChar] -> IO ()
changeProperty16 :: Display -> Window -> Atom -> Atom -> CInt -> [CShort] -> IO ()
changeProperty32 :: Display -> Window -> Atom -> Atom -> CInt -> [CLong] -> IO ()
propModeReplace :: CInt
propModePrepend :: CInt
propModeAppend :: CInt
deleteProperty :: Display -> Window -> Atom -> IO ()
unmapWindow :: Display -> Window -> IO ()
pMinSizeBit :: Int
pMaxSizeBit :: Int
pResizeIncBit :: Int
pAspectBit :: Int
pBaseSizeBit :: Int
pWinGravityBit :: Int
getWMNormalHints :: Display -> Window -> IO SizeHints
setWMNormalHints :: Display -> Window -> SizeHints -> IO ()
getClassHint :: Display -> Window -> IO ClassHint

-- | Set the <tt>WM_CLASS</tt> property for the given window.
setClassHint :: Display -> Window -> ClassHint -> IO ()
withdrawnState :: Int
normalState :: Int
iconicState :: Int
inputHintBit :: Int
stateHintBit :: Int
iconPixmapHintBit :: Int
iconWindowHintBit :: Int
iconPositionHintBit :: Int
iconMaskHintBit :: Int
windowGroupHintBit :: Int
urgencyHintBit :: Int
allHintsBitmask :: CLong
getWMHints :: Display -> Window -> IO WMHints
setWMHints :: Display -> Window -> WMHints -> IO Status

-- | A binding to XSetErrorHandler. NOTE: This is pretty experimental
--   because of safe vs. unsafe calls. I changed sync to a safe call, but
--   there *might* be other calls that cause a problem
setErrorHandler :: XErrorHandler -> IO ()

-- | Retrieves error event data from a pointer to an XErrorEvent and puts
--   it into an ErrorEvent.
getErrorEvent :: XErrorEventPtr -> IO ErrorEvent
getCommand :: Display -> Window -> IO [String]
getModifierMapping :: Display -> IO [(Modifier, [KeyCode])]
xFree :: Ptr a -> IO CInt
instance GHC.Show.Show Graphics.X11.Xlib.Extras.Event
instance GHC.Show.Show Graphics.X11.Xlib.Extras.FontSet
instance GHC.Classes.Ord Graphics.X11.Xlib.Extras.FontSet
instance GHC.Classes.Eq Graphics.X11.Xlib.Extras.FontSet
instance Foreign.Storable.Storable Graphics.X11.Xlib.Extras.WMHints
instance Foreign.Storable.Storable Graphics.X11.Xlib.Extras.SizeHints
instance Foreign.Storable.Storable Graphics.X11.Xlib.Extras.TextProperty
instance Foreign.Storable.Storable Graphics.X11.Xlib.Extras.WindowAttributes
instance Foreign.Storable.Storable Graphics.X11.Xlib.Extras.WindowChanges


module Graphics.X11.Xinerama

-- | Representation of the XineramaScreenInfo struct
data XineramaScreenInfo
XineramaScreenInfo :: !CInt -> !CShort -> !CShort -> !CShort -> !CShort -> XineramaScreenInfo
[xsi_screen_number] :: XineramaScreenInfo -> !CInt
[xsi_x_org] :: XineramaScreenInfo -> !CShort
[xsi_y_org] :: XineramaScreenInfo -> !CShort
[xsi_width] :: XineramaScreenInfo -> !CShort
[xsi_height] :: XineramaScreenInfo -> !CShort
xineramaIsActive :: Display -> IO Bool
xineramaQueryExtension :: Display -> IO (Maybe (CInt, CInt))
xineramaQueryVersion :: Display -> IO (Maybe (CInt, CInt))
xineramaQueryScreens :: Display -> IO (Maybe [XineramaScreenInfo])
compiledWithXinerama :: Bool

-- | Wrapper around xineramaQueryScreens that fakes a single screen when
--   Xinerama is not active. This is the preferred interface to
--   Graphics.X11.Xinerama.
getScreenInfo :: Display -> IO [Rectangle]
instance GHC.Show.Show Graphics.X11.Xinerama.XineramaScreenInfo
instance Foreign.Storable.Storable Graphics.X11.Xinerama.XineramaScreenInfo
