-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bindings to the Xft and some Xrender parts
--   
--   A Haskell bindings to the X Font library. With it, Haskell X11
--   applications can access high quality font renderings and provide fonts
--   with anti-aliasing and subpixel rendering. The bindings also provide
--   minimal bindings to Xrender parts.
@package X11-xft
@version 0.3.4

module Graphics.X11.Xrender
peekCUShort :: Ptr a -> CInt -> IO Int
pokeCUShort :: Ptr a -> CInt -> Int -> IO ()
peekCShort :: Ptr a -> CInt -> IO Int
pokeCShort :: Ptr a -> CInt -> Int -> IO ()
data XRenderColor
XRenderColor :: Int -> Int -> Int -> Int -> XRenderColor
[xrendercolor_red] :: XRenderColor -> Int
[xrendercolor_green] :: XRenderColor -> Int
[xrendercolor_blue] :: XRenderColor -> Int
[xrendercolor_alpha] :: XRenderColor -> Int
data XGlyphInfo
XGlyphInfo :: Int -> Int -> Int -> Int -> Int -> Int -> XGlyphInfo
[xglyphinfo_width] :: XGlyphInfo -> Int
[xglyphinfo_height] :: XGlyphInfo -> Int
[xglyphinfo_x] :: XGlyphInfo -> Int
[xglyphinfo_y] :: XGlyphInfo -> Int
[xglyphinfo_xOff] :: XGlyphInfo -> Int
[xglyphinfo_yOff] :: XGlyphInfo -> Int
data XRenderDirectFormat
XRenderDirectFormat :: Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> XRenderDirectFormat
[xrenderdirectformat_red] :: XRenderDirectFormat -> Int
[xrenderdirectformat_redMask] :: XRenderDirectFormat -> Int
[xrenderdirectformat_green] :: XRenderDirectFormat -> Int
[xrenderdirectformat_greenMask] :: XRenderDirectFormat -> Int
[xrenderdirectformat_blue] :: XRenderDirectFormat -> Int
[xrenderdirectformat_blueMask] :: XRenderDirectFormat -> Int
[xrenderdirectformat_alpha] :: XRenderDirectFormat -> Int
[xrenderdirectformat_alphaMask] :: XRenderDirectFormat -> Int
instance Foreign.Storable.Storable Graphics.X11.Xrender.XRenderDirectFormat
instance Foreign.Storable.Storable Graphics.X11.Xrender.XGlyphInfo
instance Foreign.Storable.Storable Graphics.X11.Xrender.XRenderColor

module Graphics.X11.Xft
data XftColor
xftcolor_pixel :: XftColor -> IO Int
allocaXftColor :: (Ptr XftColor -> IO a) -> IO a
withXftColorName :: Display -> Visual -> Colormap -> String -> (XftColor -> IO a) -> IO a
withXftColorValue :: Display -> Visual -> Colormap -> XRenderColor -> (XftColor -> IO a) -> IO a
data XftDraw
withXftDraw :: Display -> Drawable -> Visual -> Colormap -> (XftDraw -> IO a) -> IO a
xftDrawCreate :: Display -> Drawable -> Visual -> Colormap -> IO XftDraw
xftDrawCreateBitmap :: Display -> Pixmap -> IO XftDraw
xftDrawCreateAlpha :: Integral a => Display -> Pixmap -> a -> IO XftDraw
xftDrawChange :: XftDraw -> Drawable -> IO ()
xftDrawDisplay :: XftDraw -> IO Display
xftDrawDrawable :: XftDraw -> IO Drawable
xftDrawColormap :: XftDraw -> IO Colormap
xftDrawVisual :: XftDraw -> IO Visual
xftDrawDestroy :: XftDraw -> IO ()
data XftFont
xftfont_ascent :: XftFont -> IO Int
xftfont_max_ascent :: NonEmpty XftFont -> IO Int
xftfont_descent :: XftFont -> IO Int
xftfont_max_descent :: NonEmpty XftFont -> IO Int
xftfont_height :: XftFont -> IO Int
xftfont_max_height :: NonEmpty XftFont -> IO Int
xftfont_max_advance_width :: XftFont -> IO Int
xftFontOpen :: Display -> Screen -> String -> IO XftFont
xftFontOpenXlfd :: Display -> Screen -> String -> IO XftFont
xftLockFace :: XftFont -> IO ()
xftUnlockFace :: XftFont -> IO ()
xftFontCopy :: Display -> XftFont -> IO XftFont
xftFontClose :: Display -> XftFont -> IO ()
xftDrawGlyphs :: (Integral a, Integral b, Integral c) => XftDraw -> XftColor -> XftFont -> b -> c -> [a] -> IO ()
xftDrawString :: (Integral a, Integral b) => XftDraw -> XftColor -> XftFont -> a -> b -> String -> IO ()

-- | Like <a>xftDrawString</a>, but fall back to another font in the given
--   list if necessary (i.e., should a character not be drawable with the
--   currently selected font).
xftDrawStringFallback :: XftDraw -> XftColor -> [XftFont] -> Int -> Int -> String -> IO ()
xftTextExtents :: Display -> XftFont -> String -> IO XGlyphInfo

-- | Like <a>xftTextExtents</a> but for multiple fonts. Return accumulative
--   extents using appropriate fonts for each part of string.
xftTextAccumExtents :: Display -> [XftFont] -> String -> IO XGlyphInfo
xftDrawRect :: (Integral a, Integral b, Integral c, Integral d) => XftDraw -> XftColor -> a -> b -> c -> d -> IO ()
xftDrawSetClipRectangles :: XftDraw -> Int -> Int -> [Rectangle] -> IO Bool
xftDrawSetSubwindowMode :: Integral a => XftDraw -> a -> IO ()
xftInitFtLibrary :: IO ()
